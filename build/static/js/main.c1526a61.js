/*! For license information please see main.c1526a61.js.LICENSE.txt */
(()=>{var e={24:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(2701);const o=(0,n(2732).op)({logicalOr_:function(e,t){const n=(0,a.YT)(e,"a","logicalOr","bool"),o=(0,a.YT)(t,"b","logicalOr","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return r.T2.runKernel(s.LXA,l)}})},119:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>mt.ljI,Acos:()=>mt.Vvy,Acosh:()=>mt.PH8,AdadeltaOptimizer:()=>Be,AdagradOptimizer:()=>De,AdamOptimizer:()=>_e,AdamaxOptimizer:()=>Qe,Add:()=>mt.OMN,AddN:()=>mt.EkD,All:()=>mt.u8Z,Any:()=>mt.FSt,ArgMax:()=>mt.Jp_,ArgMin:()=>mt.p_m,Asin:()=>mt.QKF,Asinh:()=>mt.epO,Atan:()=>mt.TyE,Atan2:()=>mt.lxb,Atanh:()=>mt.zP9,AvgPool:()=>mt.ho8,AvgPool3D:()=>mt.cS,AvgPool3DGrad:()=>mt.wwC,AvgPoolGrad:()=>mt.VCH,BatchMatMul:()=>mt.jAQ,BatchToSpaceND:()=>mt.Ik2,Bincount:()=>mt.N4F,BitwiseAnd:()=>mt.HNs,BroadcastArgs:()=>mt.vj7,BroadcastTo:()=>mt.LB5,Cast:()=>mt.KXH,Ceil:()=>mt.QDP,ClipByValue:()=>mt.vaV,Complex:()=>mt.pr3,ComplexAbs:()=>mt.$zE,Concat:()=>mt.$dB,Conv2D:()=>mt.p2J,Conv2DBackpropFilter:()=>mt.rFm,Conv2DBackpropInput:()=>mt.jfg,Conv3D:()=>mt.A1h,Conv3DBackpropFilterV2:()=>mt.iGz,Conv3DBackpropInputV2:()=>mt.gC7,Cos:()=>mt.Mn0,Cosh:()=>mt.MnK,CropAndResize:()=>mt.MRQ,Cumprod:()=>mt.jj_,Cumsum:()=>mt.nY8,DataStorage:()=>pr.GJ,DenseBincount:()=>mt.wNW,DepthToSpace:()=>mt.TMz,DepthwiseConv2dNative:()=>mt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>mt.X$8,DepthwiseConv2dNativeBackpropInput:()=>mt.nVu,Diag:()=>mt.ORI,Dilation2D:()=>mt.jxD,Dilation2DBackpropFilter:()=>mt.pk0,Dilation2DBackpropInput:()=>mt.bP9,Draw:()=>mt.XmO,ENV:()=>y.Km,Einsum:()=>mt.Qgm,Elu:()=>mt.Pah,EluGrad:()=>mt.rsH,Environment:()=>y.OH,Equal:()=>mt.BRl,Erf:()=>mt._s9,Exp:()=>mt.ox3,ExpandDims:()=>mt.ybN,Expm1:()=>mt.ybj,FFT:()=>mt.rGP,Fill:()=>mt.SQl,FlipLeftRight:()=>mt.BxF,Floor:()=>mt.ZgB,FloorDiv:()=>mt.ElG,FromPixels:()=>mt.awo,FusedBatchNorm:()=>mt.i5R,FusedConv2D:()=>mt.aAr,FusedDepthwiseConv2D:()=>mt.T7M,GatherNd:()=>mt.O4G,GatherV2:()=>mt.mxL,Greater:()=>mt.XhZ,GreaterEqual:()=>mt.lLS,IFFT:()=>mt.OAQ,Identity:()=>mt.lzr,Imag:()=>mt.dv8,IsFinite:()=>mt.gIW,IsInf:()=>mt.E3$,IsNan:()=>mt.iPs,KernelBackend:()=>pr.uI,LRN:()=>mt.jM4,LRNGrad:()=>mt.ToN,LeakyRelu:()=>mt.X0$,Less:()=>mt.mIA,LessEqual:()=>mt.CwD,LinSpace:()=>mt.mnI,Log:()=>mt.tG8,Log1p:()=>mt.Cg$,LogSoftmax:()=>mt.zfU,LogicalAnd:()=>mt.RUm,LogicalNot:()=>mt.nZd,LogicalOr:()=>mt.LXA,LogicalXor:()=>mt.RW8,LowerBound:()=>mt.yPW,MatrixBandPart:()=>mt.WRv,Max:()=>mt.VAI,MaxPool:()=>mt.t3d,MaxPool3D:()=>mt.ySp,MaxPool3DGrad:()=>mt.cHb,MaxPoolGrad:()=>mt.RXX,MaxPoolWithArgmax:()=>mt.TL8,Maximum:()=>mt.LDN,Mean:()=>mt.g5A,Min:()=>mt.lNG,Minimum:()=>mt.LG0,MirrorPad:()=>mt.x7F,Mod:()=>mt.BLA,MomentumOptimizer:()=>ze,Multinomial:()=>mt.WT3,Multiply:()=>mt.xu7,Neg:()=>mt.l0G,NonMaxSuppressionV3:()=>mt.SDM,NonMaxSuppressionV4:()=>mt.Zl4,NonMaxSuppressionV5:()=>mt.e0f,NotEqual:()=>mt.ylV,OP_SCOPE_SUFFIX:()=>Jt.BTT,OneHot:()=>mt.urI,OnesLike:()=>mt.LWX,Optimizer:()=>Ne,OptimizerConstructors:()=>jt,Pack:()=>mt.mM$,PadV2:()=>mt.ODT,Pool:()=>mt.bCz,Pow:()=>mt.pyJ,Prelu:()=>mt.Ncv,Prod:()=>mt.kdj,RMSPropOptimizer:()=>Pe,RaggedGather:()=>mt.oJ2,RaggedRange:()=>mt.CQC,RaggedTensorToTensor:()=>mt.mH5,Range:()=>mt.Q6t,Rank:()=>Kt.rg,Real:()=>mt.LRy,RealDiv:()=>mt.sDr,Reciprocal:()=>mt.huO,Reduction:()=>Xt.i,Relu:()=>mt.fUj,Relu6:()=>mt.P_L,Reshape:()=>mt.R23,ResizeBilinear:()=>mt.hgw,ResizeBilinearGrad:()=>mt.FCQ,ResizeNearestNeighbor:()=>mt.jOE,ResizeNearestNeighborGrad:()=>mt.XQy,Reverse:()=>mt.D7i,RotateWithOffset:()=>mt.BK4,Round:()=>mt.hVg,Rsqrt:()=>mt.TOR,SGDOptimizer:()=>Le,ScatterNd:()=>mt.pJc,SearchSorted:()=>mt.uWl,Select:()=>mt.l6P,Selu:()=>mt.u$b,Sigmoid:()=>mt.vI1,Sign:()=>mt.YVe,Sin:()=>mt.hql,Sinh:()=>mt.J3C,Slice:()=>mt.JiE,Softmax:()=>mt.rFG,Softplus:()=>mt.Fin,SpaceToBatchND:()=>mt.A8B,SparseFillEmptyRows:()=>mt.C8s,SparseReshape:()=>mt.BoJ,SparseSegmentMean:()=>mt.L6G,SparseSegmentSum:()=>mt.DvZ,SparseToDense:()=>mt.jgd,SplitV:()=>mt.Blb,Sqrt:()=>mt.dFH,Square:()=>mt.M6A,SquaredDifference:()=>mt.Ddj,StaticRegexReplace:()=>mt.GZp,Step:()=>mt.pnw,StridedSlice:()=>mt.UcO,StringNGrams:()=>mt.YAb,StringSplit:()=>mt.iW0,StringToHashBucketFast:()=>mt.$jE,Sub:()=>mt.PbM,Sum:()=>mt.WuN,Tan:()=>mt.oFs,Tanh:()=>mt.iuW,Tensor:()=>he.qY,TensorBuffer:()=>he.yl,TensorScatterUpdate:()=>mt.X4r,Tile:()=>mt.FAs,TopK:()=>mt.TBb,Transform:()=>mt.dLy,Transpose:()=>mt.wx0,Unique:()=>mt.EwU,Unpack:()=>mt.dXR,UnsortedSegmentSum:()=>mt.pPe,UpperBound:()=>mt.RMm,Variable:()=>he.rT,ZerosLike:()=>mt.xJ3,_FusedMatMul:()=>mt.Dr,abs:()=>Jt.tnl,acos:()=>Jt.HQu,acosh:()=>Jt.FqL,add:()=>Jt.WQq,addN:()=>Jt.QiD,all:()=>Jt.Q7R,any:()=>Jt.bzn,argMax:()=>Jt.FLi,argMin:()=>Jt.XRg,asin:()=>Jt.qRo,asinh:()=>Jt.yHs,atan:()=>Jt.rYl,atan2:()=>Jt.FPz,atanh:()=>Jt.rfv,avgPool:()=>Jt.$jT,avgPool3d:()=>Jt.sub,backend:()=>Ae.Hs,backend_util:()=>d,basicLSTMCell:()=>Jt.lZX,batchNorm:()=>Jt.$v7,batchNorm2d:()=>Jt.BFc,batchNorm3d:()=>Jt.kSi,batchNorm4d:()=>Jt.T5N,batchToSpaceND:()=>Jt.GTe,bincount:()=>Jt.HbZ,bitwiseAnd:()=>Jt.vjT,booleanMaskAsync:()=>Jt.ftb,broadcastArgs:()=>Jt.ROE,broadcastTo:()=>Jt.hOW,broadcast_util:()=>gt,browser:()=>o,buffer:()=>Jt.ra8,cast:()=>Jt.wgE,ceil:()=>Jt.mkO,clipByValue:()=>Jt.zQh,clone:()=>Jt.o8B,complex:()=>Jt.faB,concat:()=>Jt.xWs,concat1d:()=>Jt.I1m,concat2d:()=>Jt.RPU,concat3d:()=>Jt.O5O,concat4d:()=>Jt.P1l,conv1d:()=>Jt.kA9,conv2d:()=>Jt.Xtf,conv2dTranspose:()=>Jt.wX9,conv3d:()=>Jt.IPL,conv3dTranspose:()=>Jt.jIJ,copyRegisteredKernels:()=>yt.Cf,cos:()=>Jt.gnS,cosh:()=>Jt.yIG,cosineWindow:()=>Jt._jP,cumprod:()=>Jt.Lp0,cumsum:()=>Jt.rCv,customGrad:()=>Ie._X,denseBincount:()=>Jt.aOp,deprecationWarn:()=>Ae.fL,depthToSpace:()=>Jt.Rj8,depthwiseConv2d:()=>Jt.Gl3,device_util:()=>r,diag:()=>Jt.smy,dilation2d:()=>Jt.X7t,disableDeprecationWarnings:()=>Ae.IS,dispose:()=>Ae.AS,disposeVariables:()=>Ae.rm,div:()=>Jt.y4m,divNoNan:()=>Jt.ek5,dot:()=>Jt.Omf,dropout:()=>Jt.EZY,einsum:()=>Jt._3C,elu:()=>Jt.Pqc,enableDebugMode:()=>Ae.gY,enableProdMode:()=>Ae.Sm,enclosingPowerOfTwo:()=>Jt.FJY,engine:()=>Ae.Hi,ensureShape:()=>Jt.QP2,env:()=>y._K,equal:()=>Jt.LCg,erf:()=>Jt.Y12,euclideanNorm:()=>Jt.p4S,exp:()=>Jt.oNF,expandDims:()=>Jt.UG6,expm1:()=>Jt.IYd,eye:()=>Jt.y5U,fft:()=>Jt.hVP,fill:()=>Jt.GSj,findBackend:()=>Ae.go,findBackendFactory:()=>Ae.W4,floor:()=>Jt.RIf,floorDiv:()=>Jt.wh_,fused:()=>Jt.cZk,gather:()=>Jt.kgh,gatherND:()=>Jt.SY9,gather_util:()=>l,getBackend:()=>Ae.jz,getGradient:()=>yt.vQ,getKernel:()=>yt._5,getKernelsForBackend:()=>yt.Op,grad:()=>Ie.Dv,grads:()=>Ie.ok,greater:()=>Jt.rhj,greaterEqual:()=>Jt.DQN,ifft:()=>Jt.KGM,imag:()=>Jt.ngS,image:()=>Jt.Slp,inTopKAsync:()=>Jt.U4u,io:()=>a,irfft:()=>Jt.ggX,isFinite:()=>Jt.MIs,isInf:()=>Jt.EN4,isNaN:()=>Jt.yrW,keep:()=>Ae.aC,kernel_impls:()=>h,leakyRelu:()=>Jt.H8d,less:()=>Jt.M7h,lessEqual:()=>Jt.InN,linalg:()=>Jt.mPL,linspace:()=>Jt.mT8,localResponseNormalization:()=>Jt.Kgs,log:()=>Jt.Rm2,log1p:()=>Jt.Kko,logSigmoid:()=>Jt.nqI,logSoftmax:()=>Jt.HPB,logSumExp:()=>Jt.VZ,logicalAnd:()=>Jt.n76,logicalNot:()=>Jt.NSZ,logicalOr:()=>Jt.ztW,logicalXor:()=>Jt.rxB,losses:()=>Jt.YYh,lowerBound:()=>Jt.yzS,matMul:()=>Jt.NoW,math:()=>i,max:()=>Jt.T9B,maxPool:()=>Jt.jgi,maxPool3d:()=>Jt.NYV,maxPoolWithArgmax:()=>Jt.RO,maximum:()=>Jt.PhQ,mean:()=>Jt.i2o,memory:()=>Ae.m1,meshgrid:()=>Jt.OYQ,min:()=>Jt.jkA,minimum:()=>Jt.BpO,mirrorPad:()=>Jt.FFZ,mod:()=>Jt.ziu,moments:()=>Jt.Clk,movingAverage:()=>Jt.CRk,mul:()=>Jt.lKK,multiRNNCell:()=>Jt.YDF,multinomial:()=>Jt.OjQ,neg:()=>Jt.HZy,nextFrame:()=>tn,norm:()=>Jt.xbf,notEqual:()=>Jt.Ec,oneHot:()=>Jt.Mw0,ones:()=>Jt.SaS,onesLike:()=>Jt.P61,op:()=>Jt.op,outerProduct:()=>Jt.X4o,pad:()=>Jt.eVF,pad1d:()=>Jt.BZs,pad2d:()=>Jt.grY,pad3d:()=>Jt.XHu,pad4d:()=>Jt.WLX,pool:()=>Jt.dzn,pow:()=>Jt.n7C,prelu:()=>Jt.NsG,print:()=>Jt.yyV,prod:()=>Jt._eU,profile:()=>Ae.ME,raggedGather:()=>Jt.whe,raggedRange:()=>Jt.iyU,raggedTensorToTensor:()=>Jt.Q0_,rand:()=>Jt._9M,randomGamma:()=>Jt.pR9,randomNormal:()=>Jt.FE$,randomStandardNormal:()=>Jt.m0H,randomUniform:()=>Jt.YeY,randomUniformInt:()=>Jt.HYA,range:()=>Jt.y17,ready:()=>Ae.Gc,real:()=>Jt.xav,reciprocal:()=>Jt.VOZ,registerBackend:()=>Ae.gJ,registerGradient:()=>yt.kr,registerKernel:()=>yt.tA,relu:()=>Jt.VVh,relu6:()=>Jt.j__,removeBackend:()=>Ae.rE,reshape:()=>Jt.tQQ,reverse:()=>Jt.BEg,reverse1d:()=>Jt.QD2,reverse2d:()=>Jt.LMr,reverse3d:()=>Jt.I2l,reverse4d:()=>Jt.JYU,rfft:()=>Jt.z8$,round:()=>Jt.LIG,rsqrt:()=>Jt.Z$r,scalar:()=>Jt.d_2,scatterND:()=>Jt.NFr,scatter_util:()=>Bt,searchSorted:()=>Jt.sZg,selu:()=>Jt.WfX,separableConv2d:()=>Jt.wdz,serialization:()=>s,setBackend:()=>Ae.jh,setPlatform:()=>Ae.Ok,setdiff1dAsync:()=>Jt.F12,sigmoid:()=>Jt.ry7,sign:()=>Jt._SZ,signal:()=>Jt.vPA,sin:()=>Jt.F8e,sinh:()=>Jt.L0l,slice:()=>Jt.dik,slice1d:()=>Jt.Q$M,slice2d:()=>Jt.zAd,slice3d:()=>Jt.wck,slice4d:()=>Jt.R0O,slice_util:()=>Rt,softmax:()=>Jt.Vs9,softplus:()=>Jt.lw0,spaceToBatchND:()=>Jt.eDJ,sparse:()=>Jt.lMo,sparseToDense:()=>Jt.Zhr,spectral:()=>Jt.lOn,split:()=>Jt.lDo,sqrt:()=>Jt.RZD,square:()=>Jt.EwI,squaredDifference:()=>Jt.Pbu,squeeze:()=>Jt.r2V,stack:()=>Jt.t$z,step:()=>Jt.PMw,stridedSlice:()=>Jt.Ym9,string:()=>Jt.YjP,sub:()=>Jt.jbE,sum:()=>Jt.czq,sumOutType:()=>Kt.ch,tan:()=>Jt.Mlm,tanh:()=>Jt.ymU,tensor:()=>Jt.OEK,tensor1d:()=>Jt.tGX,tensor2d:()=>Jt.KtR,tensor3d:()=>Jt.$_$,tensor4d:()=>Jt.g9W,tensor5d:()=>Jt.Lpo,tensor6d:()=>Jt.yxw,tensorScatterUpdate:()=>Jt.NNh,tensor_util:()=>Dt,test_util:()=>u,tidy:()=>Ae.DZ,tile:()=>Jt.Vsq,time:()=>Ae.kB,topk:()=>Jt.rfw,train:()=>Zt,transpose:()=>Jt.mgz,truncatedNormal:()=>Jt.efE,unique:()=>Jt.AmM,unregisterGradient:()=>yt.rY,unregisterKernel:()=>yt.iP,unsortedSegmentSum:()=>Jt.zAU,unstack:()=>Jt.K$i,upcastType:()=>Kt.Tu,upperBound:()=>Jt.rni,util:()=>Ft,valueAndGrad:()=>Ie.jY,valueAndGrads:()=>Ie.mu,variable:()=>Jt.bvq,variableGrads:()=>Ie.y7,version_core:()=>Yt,where:()=>Jt._M9,whereAsync:()=>Jt.YJN,zeros:()=>Jt.Ul9,zerosLike:()=>Jt.POl});var r={};n.r(r),n.d(r,{isBrowser:()=>m,isMobile:()=>g,mockIsMobile:()=>f});var s={};n.r(s),n.d(s,{Serializable:()=>Ce,SerializationMap:()=>Ee,getRegisteredName:()=>Te,registerClass:()=>Se});var a={};n.r(a),n.d(a,{CompositeArrayBuffer:()=>E.D,browserFiles:()=>qe,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>v.AQ,copyModel:()=>te,decodeWeights:()=>v.CY,decodeWeightsStream:()=>v.s5,encodeWeights:()=>v.aG,fromMemory:()=>it,fromMemorySync:()=>ot,getLoadHandlers:()=>C,getModelArtifactsForJSON:()=>v.Ej,getModelArtifactsForJSONSync:()=>v.Rl,getModelArtifactsInfoForJSON:()=>v.oR,getSaveHandlers:()=>k,getWeightSpecs:()=>v.Xf,http:()=>tt,isHTTPScheme:()=>Ze,listModels:()=>Z,loadWeights:()=>Ke,moveModel:()=>ne,registerLoadRouter:()=>w,registerSaveRouter:()=>x,removeModel:()=>ee,weightsLoaderFactory:()=>Je,withSaveHandler:()=>lt,withSaveHandlerSync:()=>ut});var i={};n.r(i),n.d(i,{confusionMatrix:()=>ft});var o={};n.r(o),n.d(o,{draw:()=>St,fromPixels:()=>Tt,fromPixelsAsync:()=>kt,toPixels:()=>Et});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>Nt});var u={};n.r(u),n.d(u,{TEST_EPSILON_FLOAT16:()=>_t,createVideoElement:()=>qt,encodeStrings:()=>Vt,expectArrayBuffersEqual:()=>Wt,expectArraysClose:()=>Mt,expectArraysEqual:()=>zt,expectNumbersClose:()=>Pt,expectPromiseToFail:()=>Lt,expectValuesInRange:()=>Ut,play:()=>Ht,testEpsilon:()=>Ot});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>lr,computeOutShape:()=>or,segOpComputeOptimalWindowSize:()=>ir});var d={};n.r(d),n.d(d,{ERF_A1:()=>wn,ERF_A2:()=>kn,ERF_A3:()=>Cn,ERF_A4:()=>En,ERF_A5:()=>Sn,ERF_P:()=>xn,PARALLELIZE_THRESHOLD:()=>pn,RowPartitionType:()=>an,SELU_SCALE:()=>In.X,SELU_SCALEALPHA:()=>In.j,applyActivation:()=>ln.f2,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>nn.WC,assertParamsConsistent:()=>rn,assignToTypedArray:()=>$n,axesAreInnerMostDims:()=>nn.WH,calculateShapes:()=>Bt.calculateShapes,checkEinsumDimSizes:()=>Un,checkPadOnDimRoundingMode:()=>on.s_,combineLocations:()=>nn.aF,combineRaggedTensorToTensorShapes:()=>un,complexWithEvenIndex:()=>Rn,complexWithOddIndex:()=>Dn,computeConv2DInfo:()=>on.uf,computeConv3DInfo:()=>on.p$,computeDefaultPad:()=>on.G8,computeDilation2DInfo:()=>on.YQ,computeOptimalWindowSize:()=>An,computeOutAndReduceShapes:()=>nn.lb,computeOutShape:()=>sn,computePool2DInfo:()=>on.E6,computePool3DInfo:()=>on.l5,convertConv2DDataFormat:()=>on.$Q,decodeEinsumEquation:()=>Pn,eitherStridesOrDilationsAreOne:()=>on.G0,expandShapeToKeepDim:()=>nn.SM,exponent:()=>Mn,exponents:()=>_n,fromStringArrayToUint8:()=>cr,fromUint8ToStringArray:()=>ur,getAxesPermutation:()=>nn.Em,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Fn,getEinsumComputePath:()=>Wn,getEinsumPermutation:()=>Gn,getFusedBiasGradient:()=>ln.Do,getFusedDyActivation:()=>ln.XB,getImageCenter:()=>fn,getInnerMostAxes:()=>nn.fK,getPermuted:()=>mn,getRaggedRank:()=>dn,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>gn,getReshapedPermuted:()=>yn,getRowPartitionTypesHelper:()=>cn,getSliceBeginCoords:()=>bn,getSliceSize:()=>vn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Yn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>jn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Kn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Zn,getSparseReshapeInputOutputMismatchErrorMessage:()=>tr,getSparseReshapeInputOutputMultipleErrorMessage:()=>er,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Jn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Xn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ar,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>nr,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>rr,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>sr,getUndoAxesPermutation:()=>nn.gx,isIdentityPermutation:()=>Vn,log:()=>Tn.R,mergeRealAndImagArrays:()=>Nn,prepareAndValidate:()=>Nt,prepareSplitSize:()=>Hn,segment_util:()=>c,shouldFuse:()=>ln.zE,slice_util:()=>Rt,splitRealAndImagArrays:()=>Bn,stridesOrDilationsArePositive:()=>on.qk,tupleValuesAreOne:()=>on.Dh,upcastType:()=>Kt.Tu,validateDefaultValueShape:()=>hn,validateInput:()=>Bt.validateInput,validateUpdateShape:()=>Bt.validateUpdateShape,warn:()=>Tn.i});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>dr.c7,nonMaxSuppressionV4Impl:()=>dr.ZS,nonMaxSuppressionV5Impl:()=>dr.ut,whereImpl:()=>hr.Y});var p=n(5964);let A;function f(e){A=e}function g(e){if(void 0!==A)return A;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function m(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var y=n(5615);const b=(0,y._K)();b.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),b.registerFlag("IS_BROWSER",(()=>m())),b.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),b.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),b.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),b.registerFlag("PROD",(()=>!1)),b.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>b.getBool("DEBUG"))),b.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),b.registerFlag("IS_TEST",(()=>!1)),b.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>b.getBool("DEBUG"))),b.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),b.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),b.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var v=n(5829);class I{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==I.instance&&(I.instance=new I),I.instance}static registerSaveRouter(e){I.getInstance().saveRouters.push(e)}static registerLoadRouter(e){I.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return I.getHandlers(e,"save")}static getLoadHandlers(e,t){return I.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?I.getInstance().loadRouters:I.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const x=e=>I.registerSaveRouter(e),w=e=>I.registerLoadRouter(e),k=e=>I.getSaveHandlers(e),C=(e,t)=>I.getLoadHandlers(e,t);var E=n(3395);const S="tensorflowjs",T="models_store",N="model_info_store";function B(){if(!(0,y._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function R(e){const t=e.result;t.createObjectStore(T,{keyPath:"modelPath"}),t.createObjectStore(N,{keyPath:"modelPath"})}class D{constructor(e){if(this.indexedDB=B(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(T,"readonly"),r=t.objectStore(T).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=E.D.join(t.weightData);const r=(0,v.oR)(t),i=s.transaction(N,"readwrite");let o,l,u=i.objectStore(N);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(a){return n(a)}o.onsuccess=()=>{l=s.transaction(T,"readwrite");const o=l.objectStore(T);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(a){return n(a)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{u=i.objectStore(N);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(c.error)),t.onerror=e=>(s.close(),n(c.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}D.URL_SCHEME="indexeddb://";const F=e=>{return(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(D.URL_SCHEME)?(t=e.slice(D.URL_SCHEME.length),new D(t)):null;var t};I.registerSaveRouter(F),I.registerLoadRouter(F);class ${constructor(){this.indexedDB=B()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(S,1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(N,"readonly"),a=s.objectStore(N).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(D.URL_SCHEME)?t.slice(D.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(N,"readwrite"),i=a.objectStore(N),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(T,"readwrite");const r=l.objectStore(T).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}var _=n(7738);const M="/",O="tensorflowjs_models",Q="info",L="model_topology",z="weight_specs",P="weight_data",G="model_metadata";function U(e){return{info:[O,e,Q].join(M),topology:[O,e,L].join(M),weightSpecs:[O,e,z].join(M),weightData:[O,e,P].join(M),modelMetadata:[O,e,G].join(M)}}function W(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function V(e){const t=e.split(M);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(M)}class q{constructor(e){if(!(0,y._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=U(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=(0,v.oR)(e),a=E.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,v.l3)(a));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw W(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,v.jf)(a),t}}q.URL_SCHEME="localstorage://";const H=e=>{return(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};I.registerSaveRouter(H),I.registerLoadRouter(H);class Y{constructor(){(0,_.vA)((0,y._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,_.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=O+M,n=M+Q;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[V(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=U(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return W(n),r}}const j="://";class K{constructor(){this.managers={}}static getInstance(){return null==K.instance&&(K.instance=new K),K.instance}static registerManager(e,t){(0,_.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(j)&&(e=e.slice(0,e.indexOf(j))),(0,_.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=K.getInstance();(0,_.vA)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=K.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(K.getInstance().managers)}}function J(e){if(-1===e.indexOf(j))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${K.getSchemes().join(",")}`);return{scheme:e.split(j)[0],path:e.split(j)[1]}}async function X(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,_.vA)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=I.getLoadHandlers(e);(0,_.vA)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,_.vA)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=I.getSaveHandlers(t);(0,_.vA)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,_.vA)(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=J(e).scheme,l=J(e).path,u=o===J(e).scheme,c=await s.load();n&&u&&await K.getManager(o).removeModel(l);const d=await i.save(c);return n&&!u&&await K.getManager(o).removeModel(l),d.modelArtifactsInfo}async function Z(){const e=K.getSchemes(),t={};for(const n of e){const e=await K.getManager(n).listModels();for(const r in e){t[n+j+r]=e[r]}}return t}async function ee(e){const t=J(e);return K.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return X(e,t,!1)}async function ne(e,t){return X(e,t,!0)}var re=n(1871);class se{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,y._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,re.Y)(e)}}if((0,y._K)().get("IS_BROWSER")){(0,y._K)().setPlatform("browser",new se);try{K.registerManager(q.URL_SCHEME,new Y)}catch(Ar){}try{K.registerManager(D.URL_SCHEME,new $)}catch(Ar){}}const ae=()=>n(8661);let ie;class oe{constructor(){this.util=n(9282),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,y._K)().global.fetch?(0,y._K)().global.fetch(e,t):(null==ie&&(ie=ae()),ie(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,y._K)().get("IS_NODE")&&!(0,y._K)().get("IS_BROWSER")&&(0,y._K)().setPlatform("node",new oe);var le=n(8603),ue=n(3098),ce=n(1012),de=n(3942),he=n(206);(0,p.Ye)();const pe={buffer:le.r,cast:ue.w,clone:ce.o,print:de.y};(0,he.Q5)(pe);var Ae=n(5462),fe=n(1410),ge=n(470),me=n(667),ye=n(4551),be=n(4018),ve=n(6834),Ie=n(5431),xe=n(8965);const we=new Map,ke=new Map;class Ce{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ee{constructor(){this.classNameMap={}}static getMap(){return null==Ee.instance&&(Ee.instance=new Ee),Ee.instance}static register(e){Ee.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Se(e,t,n){(0,_.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,_.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,_.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const r=t+">"+n;return Ee.register(e),we.set(r,e),ke.set(e,r),e}function Te(e){return ke.has(e)?ke.get(e):e.className}class Ne extends Ce{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return(0,Ae.AS)(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Ie.y7)(e,t)}dispose(){null!=this.iterations_&&(0,Ae.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,xe.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ne,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Be extends Ne{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Ae.DZ)((()=>(0,ve.P)(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Ae.DZ)((()=>(0,ve.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,Ae.DZ)((()=>{const e=(0,fe.W)((0,me.l)(i,this.rho),(0,me.l)((0,be.E)(a),1-this.rho)),t=(0,me.l)((0,ge.y)((0,ye.R)((0,fe.W)(o,this.epsilon)),(0,ye.R)((0,fe.W)(i,this.epsilon))),a),n=(0,fe.W)((0,me.l)(o,this.rho),(0,me.l)((0,be.E)(t),1-this.rho));i.assign(e),o.assign(n);const s=(0,fe.W)((0,me.l)(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Ae.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,Ae.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Re=n(2140);class De extends Ne{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Ae.DZ)((()=>(0,Re.G)(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;(0,Ae.DZ)((()=>{const e=(0,fe.W)(a,(0,be.E)(s));a.assign(e);const t=(0,fe.W)((0,me.l)((0,ge.y)(s,(0,ye.R)((0,fe.W)(e,p.T2.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Ae.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var Fe=n(731),$e=n(2583);class _e extends Ne{static get className(){return"Adam"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Ae.DZ)((()=>{this.accBeta1=(0,xe.d)(t).variable(),this.accBeta2=(0,xe.d)(n).variable()})),null==r&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ae.DZ)((()=>{const n=(0,$e.j)(1,this.accBeta1),r=(0,$e.j)(1,this.accBeta2);t.forEach(((t,s)=>{const a=p.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,Ae.DZ)((()=>(0,ve.P)(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:(0,Ae.DZ)((()=>(0,ve.P)(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=(0,fe.W)((0,me.l)(l,this.beta1),(0,me.l)(o,1-this.beta1)),d=(0,fe.W)((0,me.l)(u,this.beta2),(0,me.l)((0,be.E)(o),1-this.beta2)),h=(0,ge.y)(c,n),A=(0,ge.y)(d,r);l.assign(c),u.assign(d);const f=(0,fe.W)((0,me.l)((0,ge.y)(h,(0,fe.W)((0,ye.R)(A),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,me.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,me.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Ae.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Ae.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Ae.DZ)((()=>{this.accBeta1.assign((0,Fe.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Fe.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Me=n(9633),Oe=n(9115);class Qe extends Ne{static get className(){return"Adamax"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Ae.DZ)((()=>{this.iteration=(0,xe.d)(0).variable(),this.accBeta1=(0,xe.d)(t).variable()})),null==r&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ae.DZ)((()=>{const n=(0,$e.j)(1,this.accBeta1),r=(0,ge.y)(-this.learningRate,(0,fe.W)((0,me.l)(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=p.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,ve.P)(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,ve.P)(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=(0,fe.W)((0,me.l)(l,this.beta1),(0,me.l)(o,1-this.beta1)),d=(0,me.l)(u,this.beta2),h=(0,Me.t)(o),A=(0,Oe.P)(d,h);l.assign(c),u.assign(A);const f=(0,fe.W)((0,me.l)((0,ge.y)(r,n),(0,ge.y)(c,(0,fe.W)(A,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,fe.W)(this.iteration,1)),this.accBeta1.assign((0,me.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Ae.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Ae.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Le extends Ne{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=p.T2.registeredVariables[t];(0,Ae.DZ)((()=>{const e=(0,fe.W)((0,me.l)(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Ae.aC)((0,xe.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ze extends Le{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,xe.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Ae.DZ)((()=>(0,ve.P)(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,Ae.DZ)((()=>{let e;const t=(0,fe.W)((0,me.l)(this.m,s),a);e=this.useNesterov?(0,fe.W)((0,me.l)(this.c,(0,fe.W)(a,(0,me.l)(t,this.m))),r):(0,fe.W)((0,me.l)(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Ae.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Pe extends Ne{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=p.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Ae.DZ)((()=>(0,ve.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Ae.DZ)((()=>(0,ve.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Ae.DZ)((()=>(0,ve.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,Ae.DZ)((()=>{const e=(0,fe.W)((0,me.l)(i,this.decay),(0,me.l)((0,be.E)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=(0,fe.W)((0,me.l)(t,this.decay),(0,me.l)(a,1-this.decay)),l=(0,ge.y)((0,me.l)(a,this.learningRate),(0,ye.R)((0,$e.j)(e,(0,fe.W)((0,be.E)(s),this.epsilon)))),u=(0,fe.W)((0,me.l)(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=(0,$e.j)(r,u);r.assign(c)}else{const e=(0,fe.W)((0,me.l)(i,this.decay),(0,me.l)((0,be.E)(a),1-this.decay)),t=(0,fe.W)((0,me.l)(o,this.momentum),(0,ge.y)((0,me.l)(a,this.learningRate),(0,ye.R)((0,fe.W)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,$e.j)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Ae.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Ae.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Ae.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ge=[Be,De,_e,Qe,ze,Pe,Le];function Ue(e){return new Promise((e=>setTimeout(e))).then(e)}class We{constructor(e){if(!(0,y._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(We.URL_SCHEME)&&(e=e.slice(We.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=E.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=(0,v.zV)(e,t),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await Ue((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ue((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,v.oR)(e)}}}}We.URL_SCHEME="downloads://";class Ve{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=(0,v.Ej)(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,v.P8)(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=(0,v.P8)(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function qe(e){return new Ve(e)}function He(e,t,n,r){!function(e){(0,_.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,_.vA)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,_.vA)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,_.vA)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}I.registerSaveRouter((e=>(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(We.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new We(e)}(e.slice(We.URL_SCHEME.length)):null));var Ye=n(3066);async function je(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,y._K)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await He(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await He(s,t.onProgress,.5,1)}async function Ke(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Je((e=>je(e,{requestInit:r})))(e,t,n)}function Je(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Ye.i[l]*_.Ze(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let h=0;return l.forEach((e=>{const n=t[e].paths.length,r=new E.D(c.slice(h,h+n));a[e].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,v.CY)(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]})),h+=n})),d}}class Xe{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,_.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,y._K)().platform.fetch,(0,_.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,_.vA)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=(0,v.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=E.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:(0,v.oR)(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,v.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,v.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?(0,y._K)().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,v.Xf)(e),await je(t,this.loadOptions)]}}function Ze(e){return null!=e.match(Xe.URL_SCHEME_REGEX)}Xe.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ze(e))):Ze(e),n)return tt(e,t)}return null};function tt(e,t){return new Xe(e,t)}function nt(e,t){return tt(e,t)}I.registerSaveRouter(et),I.registerLoadRouter(et);class rt{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class st{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class at{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function it(e,t,n,r){return new at(ot(...arguments))}function ot(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new rt(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function lt(e){return new st(e)}function ut(e){return new st(e)}var ct=n(5836),dt=n(2994),ht=n(6649),pt=n(2732),At=n(5970);const ft=(0,pt.op)({confusionMatrix_:function(e,t,n){const r=(0,ct.YT)(e,"labels","confusionMatrix"),s=(0,ct.YT)(t,"predictions","confusionMatrix");_.vA(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),_.vA(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),_.vA(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),_.vA(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),_.vA(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=(0,ht.M)((0,ue.w)(r,"int32"),n),i=(0,ht.M)((0,ue.w)(s,"int32"),n),o=(0,At.m)(a),l=(0,dt.N)(o,i);return(0,ue.w)(l,"int32")}});var gt=n(2701),mt=n(1146),yt=n(9603),bt=n(9851);let vt,It=!1;function xt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=(0,yt._5)(mt.awo,p.T2.backendName)){const n={pixels:e},r={numChannels:t};return p.T2.runKernel(mt.awo,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==vt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");vt=new OffscreenCanvas(1,1).getContext("2d")}else vt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});vt.canvas.width=l,vt.canvas.height=u,vt.drawImage(e,0,0,l,u),c=vt.getImageData(0,0,l,u).data}if(4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}const h=[u,l,t];return(0,bt.$)(d,h,"int32")}function wt(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function kt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,y._K)().getBool("WRAP_TO_IMAGEBITMAP")&&wt(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return xt(n,t)}function Ct(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Et(e,t){let n=(0,ct.YT)(e,"img","toPixels");if(!(e instanceof he.qY)){const e=n;n=(0,ue.w)(e,"int32"),e.dispose()}Ct(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=i[u*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!It){null!=(0,yt._5)(mt.XmO,p.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),It=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function St(e,t,n){let r=(0,ct.YT)(e,"img","draw");if(!(e instanceof he.qY)){const e=r;r=(0,ue.w)(e,"int32"),e.dispose()}Ct(r),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null===n||void 0===n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};p.T2.runKernel(mt.XmO,s,a)}const Tt=(0,pt.op)({fromPixels_:xt});function Nt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,_.Ze)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let d=0;d<s.length-1;++d)i*=s[d];const o=e.shape,l=s.slice();l.pop();let u=1;for(let d=a;d<n;++d)u*=o[d],l.push(o[d]);const c=[...(0,_.Ur)(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}var Bt=n(7195),Rt=n(5770),Dt=n(5116),Ft=n(9801);const $t=.001,_t=.1;function Mt(e,t,n){return null==n&&(n=Ot()),Qt(e,t,((e,t)=>Gt(e,t,n)))}function Ot(){return 32===p.T2.backend.floatPrecision()?$t:_t}function Qt(e,t,n){let r=!0;if(((0,Ft.isTypedArray)(e)||(0,Ft.isTypedArray)(t))&&(r=!1),(0,Ft.isTypedArray)(e)&&(0,Ft.isTypedArray)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ct.MZ)(e),r=(0,ct.MZ)(t);if(!(0,_.r1)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=(0,Ft.isTypedArray)(e)?e:(0,Ft.flatten)(e),a=(0,Ft.isTypedArray)(t)?t:(0,Ft.flatten)(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let i=0;i<a.length;++i){const e=s[i],t=a[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!==typeof expect&&expect().nothing()}function Lt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function zt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,_.Kg)(e)||(0,_.Kg)(e[0])||(0,_.Kg)(t)||(0,_.Kg)(t[0])?Qt(e,n,((e,t)=>e==t)):Qt(e,t,((e,t)=>Gt(e,t,0)))}function Pt(e,t,n){if(null==n&&(n=Ot()),!Gt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!==typeof expect&&expect().nothing()}function Gt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ut(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Wt(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)}function Vt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Vt(n):e[t]=(0,Ft.encodeString)(n)}return e}function qt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Ht(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Yt="4.22.0";class jt{static sgd(e){return new Le(e)}static momentum(e,t){return new ze(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Pe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new _e(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Be(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Qe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new De(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Kt=n(2307),Jt=n(457),Xt=n(6235);const Zt=jt,en="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function tn(){return new Promise((e=>en((()=>e()))))}var nn=n(379);function rn(e,t){const n=e[0].length;e.forEach(((e,t)=>{_.vA(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),_.vA(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)_.vA(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function sn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var an,on=n(714),ln=n(3193);function un(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function cn(e){const t={FIRST_DIM_SIZE:an.FIRST_DIM_SIZE,VALUE_ROWIDS:an.VALUE_ROWIDS,ROW_LENGTHS:an.ROW_LENGTHS,ROW_SPLITS:an.ROW_SPLITS,ROW_LIMITS:an.ROW_LIMITS,ROW_STARTS:an.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function dn(e){return 0===e.length?0:e[0]===an.FIRST_DIM_SIZE?e.length-1:e.length}function hn(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(an||(an={}));const pn=30;function An(e){return e<=pn?e:(0,_.lK)(e,Math.floor(Math.sqrt(e)))}function fn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function gn(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function mn(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{const r=[],s=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?s.push(n):r.push(n);n.push(...r),n.push(0),n.push(...s)}return n}function yn(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function bn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function vn(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}var In=n(6653);const xn=.3275911,wn=.254829592,kn=-.284496736,Cn=1.421413741,En=-1.453152027,Sn=1.061405429;var Tn=n(5348);function Nn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Bn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Rn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Dn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Fn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function $n(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function _n(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Mn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const On="->",Qn=/->/g,Ln=",",zn="...";function Pn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Qn,"").length)/On.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${On}").`);const[r,s]=e.split(On);(0,_.vA)(-1===r.indexOf(zn),(()=>`The ellipsis notation ("${zn}") is not supported yet.`));const a=r.split(Ln),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<s.length;++d){const e=s[d];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===o.indexOf(e)&&e!==Ln&&o.push(e)}const l=new Array(a.length);for(let d=0;d<i;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<a[d].length;++e)l[d].push(o.indexOf(a[d][e]))}const u=o.length,c=[];for(let d=s.length;d<u;++d)c.push(d);return{allDims:o,summedDims:c,idDims:l}}function Gn(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Un(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:(0,_.vA)(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Wn(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const e=qn(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(r[i].push(t),a.push(t))}return{path:n,steps:r}}function Vn(e){return e.every(((e,t)=>e===t))}function qn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Hn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)(0,_.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,_.vA)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,_.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Yn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function jn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Kn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Jn(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Xn(e,t){return`size ${e} must be non-negative, not ${t}`}function Zn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function er(e,t){return`Input to reshape is a SparseTensor with ${(0,_.Ze)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,_.Ze)(t)}. inputShape=${e} outputShape= ${t}`}function tr(e,t){return`Input to reshape is a tensor with ${(0,_.Ze)(e)} dense values, but the requested shape has ${(0,_.Ze)(t)}. inputShape=${e} outputShape=${t}`}function nr(){return"segment ids must be >= 0"}function rr(){return"segment ids are not increasing"}function sr(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ar(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function ir(e,t){let n,r=!1;for(e<=pn?(n=e,r=!0):n=(0,_.lK)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,_.lK)(e,n+1);return n}function or(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function lr(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let d=0;d<r;++d)o.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<n;d++)o.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<s;d++)o.push(t.shape[d]);for(let d=n+1;d<a;d++)o.push(e.shape[d]),c*=e.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function ur(e){try{return e.map((e=>(0,Ft.decodeString)(e)))}catch(Ar){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Ar}`)}}function cr(e){return e.map((e=>(0,Ft.encodeString)(e)))}var dr=n(4188),hr=n(9742),pr=n(1102);!function(){for(const e of Ge)Se(e)}()},172:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(3098);const o=(0,n(2732).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=(0,a.YT)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.T2.runKernel(s.kdj,l,u)}})},178:(e,t,n)=>{"use strict";n.d(t,{Y:()=>l});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(3098);const l=(0,n(2732).op)({erf_:function(e){let t=(0,a.YT)(e,"x","erf");i.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.w)(t,"float32"));const n={x:t};return r.T2.runKernel(s._s9,n)}})},206:(e,t,n)=>{"use strict";n.d(t,{qY:()=>y,yl:()=>d,rT:()=>v,tp:()=>b,B4:()=>m,Q5:()=>g,qP:()=>f});var r=n(3790),s=n(7738);function a(e,t,n,r){const a=(0,s.Ur)(t),o=function(e,t,n,r){const a=(0,s.Ze)(t),o=r[r.length-1],l=new Array(o).fill(0),c=t.length,d="complex64"===n?u(e):e;if(c>1)for(let s=0;s<a/o;s++){const e=s*o;for(let t=0;t<o;t++)l[t]=Math.max(l[t],i(d[e+t],0,n).length)}return l}(e,t,n,a),c=t.length,d=l(e,t,n,a,o),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${c}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map((e=>"    "+e)).join("\n")),h.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,s.Kg)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,s.av)(r,t)}function o(e){return 0===e?"false":"true"}function l(e,t,n,r,s){let a=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[i(u(e)[0],0,n)]}return"bool"===n?[o(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*c;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-3)*c,d*c));return"complex64"===n&&(r=u(r),a=u(a)),["["+r.map(((e,t)=>i(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,s[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?u(e):Array.from(e)).map(((e,t)=>i(e,s[t],n))).join(", ")+"]"]}const p=t.slice(1),A=r.slice(1),f=r[0]*c,g=[];if(d>20){for(let t=0;t<3;t++){const r=t*f,a=r+f;g.push(...l(e.slice(r,a),p,n,A,s,!1))}g.push("...");for(let t=d-3;t<d;t++){const r=t*f,a=r+f;g.push(...l(e.slice(r,a),p,n,A,s,t===d-1))}}else for(let i=0;i<d;i++){const t=i*f,r=t+f;g.push(...l(e.slice(t,r),p,n,A,s,i===d-1))}const m=2===h?",":"";g[0]="["+(d>0?g[0]+m:"");for(let i=1;i<g.length-1;i++)g[i]=" "+g[i]+m;let y=",\n";for(let i=2;i<h;i++)y+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":y),g}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(9801);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.Ze(e),null!=n){const e=n.length;s.vA(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.Ab(t,this.size),this.strides=(0,s.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),s.vA(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const a of t){if(a<0||a>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,A=null;function f(e){h=e}function g(e){p=e}function m(e){A=e}class y{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.Ze(e),this.strides=(0,s.Ur)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function b(){return(0,r.m)("Tensor",(()=>y))}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),b();class v extends y{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.r1(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},226:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f=Object.assign,g={};function m(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||A}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||A}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=m.prototype;var v=b.prototype=new y;v.constructor=b,f(v,m.prototype),v.isPureReactComponent=!0;var I=Array.isArray,x=Object.prototype.hasOwnProperty,w={current:null},k={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,r){var s,a={},i=null,o=null;if(null!=t)for(s in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)x.call(t,s)&&!k.hasOwnProperty(s)&&(a[s]=t[s]);var l=arguments.length-2;if(1===l)a.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];a.children=u}if(e&&e.defaultProps)for(s in l=e.defaultProps)void 0===a[s]&&(a[s]=l[s]);return{$$typeof:n,type:e,key:i,ref:o,props:a,_owner:w.current}}function E(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var S=/\/+/g;function T(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,s,a,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return i=i(l=e),e=""===a?"."+T(l,0):a,I(i)?(s="",null!=e&&(s=e.replace(S,"$&/")+"/"),N(i,t,s,"",(function(e){return e}))):null!=i&&(E(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,s+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(S,"$&/")+"/")+e)),t.push(i)),1;if(l=0,a=""===a?".":a+":",I(e))for(var u=0;u<e.length;u++){var c=a+T(o=e[u],u);l+=N(o,t,s,c,i)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=N(o=o.value,t,s,c=a+T(o,u++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function B(e,t,n){if(null==e)return e;var r=[],s=0;return N(e,r,"","",(function(e){return t.call(n,e,s++)})),r}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var D={current:null},F={transition:null},$={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:F,ReactCurrentOwner:w};function _(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:B,forEach:function(e,t,n){B(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return B(e,(function(){t++})),t},toArray:function(e){return B(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=m,t.Fragment=s,t.Profiler=i,t.PureComponent=b,t.StrictMode=a,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=$,t.act=_,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=f({},e.props),a=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=w.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)x.call(t,u)&&!k.hasOwnProperty(u)&&(s[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)s.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];s.children=l}return{$$typeof:n,type:e.type,key:a,ref:i,props:s,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=F.transition;F.transition={};try{e()}finally{F.transition=t}},t.unstable_act=_,t.useCallback=function(e,t){return D.current.useCallback(e,t)},t.useContext=function(e){return D.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return D.current.useDeferredValue(e)},t.useEffect=function(e,t){return D.current.useEffect(e,t)},t.useId=function(){return D.current.useId()},t.useImperativeHandle=function(e,t,n){return D.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return D.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return D.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return D.current.useMemo(e,t)},t.useReducer=function(e,t,n){return D.current.useReducer(e,t,n)},t.useRef=function(e){return D.current.useRef(e)},t.useState=function(e){return D.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return D.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return D.current.useTransition()},t.version="18.3.1"},306:(e,t,n)=>{"use strict";var r=n(9643),s=n(1261);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},A={};function f(e,t,n,r,s,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new f(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new f(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new f(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new f(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new f(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new f(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new f(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new f(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new f(e,5,!1,e.toLowerCase(),null,!1,!1)}));var m=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,t,n,r){var s=g.hasOwnProperty(t)?g[t]:null;(null!==s?0!==s.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,s,r)&&(n=null),r||null===s?function(e){return!!d.call(A,e)||!d.call(p,e)&&(h.test(e)?A[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=null===n?3!==s.type&&"":n:(t=s.attributeName,r=s.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(s=s.type)||4===s&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(m,y);g[t]=new f(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(m,y);g[t]=new f(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(m,y);g[t]=new f(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new f(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new f("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new f(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,I=Symbol.for("react.element"),x=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),k=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),S=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),N=Symbol.for("react.suspense"),B=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),D=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var $=Symbol.iterator;function _(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=$&&e[$]||e["@@iterator"])?e:null}var M,O=Object.assign;function Q(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var L=!1;function z(e,t){if(!e||L)return"";L=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var s=u.stack.split("\n"),a=r.stack.split("\n"),i=s.length-1,o=a.length-1;1<=i&&0<=o&&s[i]!==a[o];)o--;for(;1<=i&&0<=o;i--,o--)if(s[i]!==a[o]){if(1!==i||1!==o)do{if(i--,0>--o||s[i]!==a[o]){var l="\n"+s[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=o);break}}}finally{L=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?Q(e):""}function P(e){switch(e.tag){case 5:return Q(e.type);case 16:return Q("Lazy");case 13:return Q("Suspense");case 19:return Q("SuspenseList");case 0:case 2:case 15:return e=z(e.type,!1);case 11:return e=z(e.type.render,!1);case 1:return e=z(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case w:return"Fragment";case x:return"Portal";case C:return"Profiler";case k:return"StrictMode";case N:return"Suspense";case B:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case S:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:G(e.type)||"Memo";case D:t=e._payload,e=e._init;try{return G(e(t))}catch(n){}}return null}function U(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return G(t);case 8:return t===k?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function W(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function V(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=V(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var s=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function H(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=V(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Y(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function j(e,t){var n=t.checked;return O({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=W(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function J(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function X(e,t){J(e,t);var n=W(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,W(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Y(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&r&&(e[n].defaultSelected=!0)}else{for(n=""+W(n),t=null,s=0;s<e.length;s++){if(e[s].value===n)return e[s].selected=!0,void(r&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return O({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:W(n)}}function ae(e,t){var n=W(t.value),r=W(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ae=["Webkit","ms","Moz","O"];function fe(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),s=fe(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,s):e[n]=s}}Object.keys(pe).forEach((function(e){Ae.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var me=O({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(me[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(a(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function Ie(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var xe=null,we=null,ke=null;function Ce(e){if(e=bs(e)){if("function"!==typeof xe)throw Error(a(280));var t=e.stateNode;t&&(t=Is(t),xe(e.stateNode,e.type,t))}}function Ee(e){we?ke?ke.push(e):ke=[e]:we=e}function Se(){if(we){var e=we,t=ke;if(ke=we=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Te(e,t){return e(t)}function Ne(){}var Be=!1;function Re(e,t,n){if(Be)return e(t,n);Be=!0;try{return Te(e,t,n)}finally{Be=!1,(null!==we||null!==ke)&&(Ne(),Se())}}function De(e,t){var n=e.stateNode;if(null===n)return null;var r=Is(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(a(231,t,typeof n));return n}var Fe=!1;if(c)try{var $e={};Object.defineProperty($e,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",$e,$e),window.removeEventListener("test",$e,$e)}catch(ce){Fe=!1}function _e(e,t,n,r,s,a,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Me=!1,Oe=null,Qe=!1,Le=null,ze={onError:function(e){Me=!0,Oe=e}};function Pe(e,t,n,r,s,a,i,o,l){Me=!1,Oe=null,_e.apply(ze,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ue(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function We(e){if(Ge(e)!==e)throw Error(a(188))}function Ve(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var s=n.return;if(null===s)break;var i=s.alternate;if(null===i){if(null!==(r=s.return)){n=r;continue}break}if(s.child===i.child){for(i=s.child;i;){if(i===n)return We(s),e;if(i===r)return We(s),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=s,r=i;else{for(var o=!1,l=s.child;l;){if(l===n){o=!0,n=s,r=i;break}if(l===r){o=!0,r=s,n=i;break}l=l.sibling}if(!o){for(l=i.child;l;){if(l===n){o=!0,n=i,r=s;break}if(l===r){o=!0,r=i,n=s;break}l=l.sibling}if(!o)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var He=s.unstable_scheduleCallback,Ye=s.unstable_cancelCallback,je=s.unstable_shouldYield,Ke=s.unstable_requestPaint,Je=s.unstable_now,Xe=s.unstable_getCurrentPriorityLevel,Ze=s.unstable_ImmediatePriority,et=s.unstable_UserBlockingPriority,tt=s.unstable_NormalPriority,nt=s.unstable_LowPriority,rt=s.unstable_IdlePriority,st=null,at=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,s=e.suspendedLanes,a=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~s;0!==o?r=dt(o):0!==(a&=i)&&(r=dt(a))}else 0!==(i=n&~s)?r=dt(i):0!==a&&(r=dt(a));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&s)&&((s=r&-r)>=(a=t&-t)||16===s&&0!==(4194240&a)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)s=1<<(n=31-it(t)),r|=e[n],t&=~s;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function At(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ft(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function mt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),s=1<<r;s&t|e[r]&t&&(e[r]|=t),n&=~s}}var bt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var It,xt,wt,kt,Ct,Et=!1,St=[],Tt=null,Nt=null,Bt=null,Rt=new Map,Dt=new Map,Ft=[],$t="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function _t(e,t){switch(e){case"focusin":case"focusout":Tt=null;break;case"dragenter":case"dragleave":Nt=null;break;case"mouseover":case"mouseout":Bt=null;break;case"pointerover":case"pointerout":Rt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Dt.delete(t.pointerId)}}function Mt(e,t,n,r,s,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[s]},null!==t&&(null!==(t=bs(t))&&xt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==s&&-1===t.indexOf(s)&&t.push(s),e)}function Ot(e){var t=ys(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ue(n)))return e.blockedOn=t,void Ct(e.priority,(function(){wt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Qt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=bs(n))&&xt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);ve=r,n.target.dispatchEvent(r),ve=null,t.shift()}return!0}function Lt(e,t,n){Qt(e)&&n.delete(t)}function zt(){Et=!1,null!==Tt&&Qt(Tt)&&(Tt=null),null!==Nt&&Qt(Nt)&&(Nt=null),null!==Bt&&Qt(Bt)&&(Bt=null),Rt.forEach(Lt),Dt.forEach(Lt)}function Pt(e,t){e.blockedOn===t&&(e.blockedOn=null,Et||(Et=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,zt)))}function Gt(e){function t(t){return Pt(t,e)}if(0<St.length){Pt(St[0],e);for(var n=1;n<St.length;n++){var r=St[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Tt&&Pt(Tt,e),null!==Nt&&Pt(Nt,e),null!==Bt&&Pt(Bt,e),Rt.forEach(t),Dt.forEach(t),n=0;n<Ft.length;n++)(r=Ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ft.length&&null===(n=Ft[0]).blockedOn;)Ot(n),null===n.blockedOn&&Ft.shift()}var Ut=v.ReactCurrentBatchConfig,Wt=!0;function Vt(e,t,n,r){var s=bt,a=Ut.transition;Ut.transition=null;try{bt=1,Ht(e,t,n,r)}finally{bt=s,Ut.transition=a}}function qt(e,t,n,r){var s=bt,a=Ut.transition;Ut.transition=null;try{bt=4,Ht(e,t,n,r)}finally{bt=s,Ut.transition=a}}function Ht(e,t,n,r){if(Wt){var s=jt(e,t,n,r);if(null===s)Wr(e,t,r,Yt,n),_t(e,r);else if(function(e,t,n,r,s){switch(t){case"focusin":return Tt=Mt(Tt,e,t,n,r,s),!0;case"dragenter":return Nt=Mt(Nt,e,t,n,r,s),!0;case"mouseover":return Bt=Mt(Bt,e,t,n,r,s),!0;case"pointerover":var a=s.pointerId;return Rt.set(a,Mt(Rt.get(a)||null,e,t,n,r,s)),!0;case"gotpointercapture":return a=s.pointerId,Dt.set(a,Mt(Dt.get(a)||null,e,t,n,r,s)),!0}return!1}(s,e,t,n,r))r.stopPropagation();else if(_t(e,r),4&t&&-1<$t.indexOf(e)){for(;null!==s;){var a=bs(s);if(null!==a&&It(a),null===(a=jt(e,t,n,r))&&Wr(e,t,r,Yt,n),a===s)break;s=a}null!==s&&r.stopPropagation()}else Wr(e,t,r,null,n)}}var Yt=null;function jt(e,t,n,r){if(Yt=null,null!==(e=ys(e=Ie(r))))if(null===(t=Ge(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ue(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Yt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Jt=null,Xt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Xt,r=n.length,s="value"in Jt?Jt.value:Jt.textContent,a=s.length;for(e=0;e<r&&n[e]===s[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===s[a-t];t++);return Zt=s.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function sn(e){function t(t,n,r,s,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=s,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(s):s[i]);return this.isDefaultPrevented=(null!=s.defaultPrevented?s.defaultPrevented:!1===s.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return O(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,on,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=sn(un),dn=O({},un,{view:0,detail:0}),hn=sn(dn),pn=O({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(an=e.screenX-ln.screenX,on=e.screenY-ln.screenY):on=an=0,ln=e),an)},movementY:function(e){return"movementY"in e?e.movementY:on}}),An=sn(pn),fn=sn(O({},pn,{dataTransfer:0})),gn=sn(O({},dn,{relatedTarget:0})),mn=sn(O({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=O({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=sn(yn),vn=sn(O({},un,{data:0})),In={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},wn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function kn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=wn[e])&&!!t[e]}function Cn(){return kn}var En=O({},dn,{key:function(e){if(e.key){var t=In[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Sn=sn(En),Tn=sn(O({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=sn(O({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Bn=sn(O({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=O({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dn=sn(Rn),Fn=[9,13,27,32],$n=c&&"CompositionEvent"in window,_n=null;c&&"documentMode"in document&&(_n=document.documentMode);var Mn=c&&"TextEvent"in window&&!_n,On=c&&(!$n||_n&&8<_n&&11>=_n),Qn=String.fromCharCode(32),Ln=!1;function zn(e,t){switch(e){case"keyup":return-1!==Fn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Pn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Gn=!1;var Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function Vn(e,t,n,r){Ee(r),0<(t=qr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var qn=null,Hn=null;function Yn(e){Qr(e,0)}function jn(e){if(H(vs(e)))return e}function Kn(e,t){if("change"===e)return t}var Jn=!1;if(c){var Xn;if(c){var Zn="oninput"in document;if(!Zn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Zn="function"===typeof er.oninput}Xn=Zn}else Xn=!1;Jn=Xn&&(!document.documentMode||9<document.documentMode)}function tr(){qn&&(qn.detachEvent("onpropertychange",nr),Hn=qn=null)}function nr(e){if("value"===e.propertyName&&jn(Hn)){var t=[];Vn(t,Hn,e,Ie(e)),Re(Yn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Hn=n,(qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function sr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return jn(Hn)}function ar(e,t){if("click"===e)return jn(t)}function ir(e,t){if("input"===e||"change"===e)return jn(t)}var or="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function lr(e,t){if(or(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var s=n[r];if(!d.call(t,s)||!or(e[s],t[s]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hr(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=Y((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Ar(e){var t=hr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var s=n.textContent.length,a=Math.min(r.start,s);r=void 0===r.end?a:Math.min(r.end,s),!e.extend&&a>r&&(s=r,r=a,a=s),s=cr(n,a);var i=cr(n,r);s&&i&&(1!==e.rangeCount||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(s.node,s.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var fr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,mr=null,yr=null,br=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==gr||gr!==Y(r)||("selectionStart"in(r=gr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&lr(yr,r)||(yr=r,0<(r=qr(mr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function Ir(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xr={animationend:Ir("Animation","AnimationEnd"),animationiteration:Ir("Animation","AnimationIteration"),animationstart:Ir("Animation","AnimationStart"),transitionend:Ir("Transition","TransitionEnd")},wr={},kr={};function Cr(e){if(wr[e])return wr[e];if(!xr[e])return e;var t,n=xr[e];for(t in n)if(n.hasOwnProperty(t)&&t in kr)return wr[e]=n[t];return e}c&&(kr=document.createElement("div").style,"AnimationEvent"in window||(delete xr.animationend.animation,delete xr.animationiteration.animation,delete xr.animationstart.animation),"TransitionEvent"in window||delete xr.transitionend.transition);var Er=Cr("animationend"),Sr=Cr("animationiteration"),Tr=Cr("animationstart"),Nr=Cr("transitionend"),Br=new Map,Rr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Dr(e,t){Br.set(e,t),l(t,[e])}for(var Fr=0;Fr<Rr.length;Fr++){var $r=Rr[Fr];Dr($r.toLowerCase(),"on"+($r[0].toUpperCase()+$r.slice(1)))}Dr(Er,"onAnimationEnd"),Dr(Sr,"onAnimationIteration"),Dr(Tr,"onAnimationStart"),Dr("dblclick","onDoubleClick"),Dr("focusin","onFocus"),Dr("focusout","onBlur"),Dr(Nr,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var _r="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(_r));function Or(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,s,i,o,l,u){if(Pe.apply(this,arguments),Me){if(!Me)throw Error(a(198));var c=Oe;Me=!1,Oe=null,Qe||(Qe=!0,Le=c)}}(r,t,void 0,e),e.currentTarget=null}function Qr(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],s=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==a&&s.isPropagationStopped())break e;Or(s,o,u),a=l}else for(i=0;i<r.length;i++){if(l=(o=r[i]).instance,u=o.currentTarget,o=o.listener,l!==a&&s.isPropagationStopped())break e;Or(s,o,u),a=l}}}if(Qe)throw e=Le,Qe=!1,Le=null,e}function Lr(e,t){var n=t[fs];void 0===n&&(n=t[fs]=new Set);var r=e+"__bubble";n.has(r)||(Ur(t,e,2,!1),n.add(r))}function zr(e,t,n){var r=0;t&&(r|=4),Ur(n,e,r,t)}var Pr="_reactListening"+Math.random().toString(36).slice(2);function Gr(e){if(!e[Pr]){e[Pr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||zr(t,!1,e),zr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Pr]||(t[Pr]=!0,zr("selectionchange",!1,t))}}function Ur(e,t,n,r){switch(Kt(t)){case 1:var s=Vt;break;case 4:s=qt;break;default:s=Ht}n=s.bind(null,t,n,e),s=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(s=!0),r?void 0!==s?e.addEventListener(t,n,{capture:!0,passive:s}):e.addEventListener(t,n,!0):void 0!==s?e.addEventListener(t,n,{passive:s}):e.addEventListener(t,n,!1)}function Wr(e,t,n,r,s){var a=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===s||8===o.nodeType&&o.parentNode===s)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===s||8===l.nodeType&&l.parentNode===s))return;i=i.return}for(;null!==o;){if(null===(i=ys(o)))return;if(5===(l=i.tag)||6===l){r=a=i;continue e}o=o.parentNode}}r=r.return}Re((function(){var r=a,s=Ie(n),i=[];e:{var o=Br.get(e);if(void 0!==o){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Sn;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=An;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Nn;break;case Er:case Sr:case Tr:l=mn;break;case Nr:l=Bn;break;case"scroll":l=hn;break;case"wheel":l=Dn;break;case"copy":case"cut":case"paste":l=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Tn}var c=0!==(4&t),d=!c&&"scroll"===e,h=c?null!==o?o+"Capture":null:o;c=[];for(var p,A=r;null!==A;){var f=(p=A).stateNode;if(5===p.tag&&null!==f&&(p=f,null!==h&&(null!=(f=De(A,h))&&c.push(Vr(A,f,p)))),d)break;A=A.return}0<c.length&&(o=new l(o,u,null,n,s),i.push({event:o,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===ve||!(u=n.relatedTarget||n.fromElement)||!ys(u)&&!u[As])&&(l||o)&&(o=s.window===s?s:(o=s.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ys(u):null)&&(u!==(d=Ge(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=An,f="onMouseLeave",h="onMouseEnter",A="mouse","pointerout"!==e&&"pointerover"!==e||(c=Tn,f="onPointerLeave",h="onPointerEnter",A="pointer"),d=null==l?o:vs(l),p=null==u?o:vs(u),(o=new c(f,A+"leave",l,n,s)).target=d,o.relatedTarget=p,f=null,ys(s)===r&&((c=new c(h,A+"enter",u,n,s)).target=p,c.relatedTarget=d,f=c),d=f,l&&u)e:{for(h=u,A=0,p=c=l;p;p=Hr(p))A++;for(p=0,f=h;f;f=Hr(f))p++;for(;0<A-p;)c=Hr(c),A--;for(;0<p-A;)h=Hr(h),p--;for(;A--;){if(c===h||null!==h&&c===h.alternate)break e;c=Hr(c),h=Hr(h)}c=null}else c=null;null!==l&&Yr(i,o,l,c,!1),null!==u&&null!==d&&Yr(i,d,u,c,!0)}if("select"===(l=(o=r?vs(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Kn;else if(Wn(o))if(Jn)g=ir;else{g=sr;var m=rr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=ar);switch(g&&(g=g(e,r))?Vn(i,g,n,s):(m&&m(e,o,r),"focusout"===e&&(m=o._wrapperState)&&m.controlled&&"number"===o.type&&ee(o,"number",o.value)),m=r?vs(r):window,e){case"focusin":(Wn(m)||"true"===m.contentEditable)&&(gr=m,mr=r,yr=null);break;case"focusout":yr=mr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,vr(i,n,s);break;case"selectionchange":if(fr)break;case"keydown":case"keyup":vr(i,n,s)}var y;if($n)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Gn?zn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(On&&"ko"!==n.locale&&(Gn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Gn&&(y=en()):(Xt="value"in(Jt=s)?Jt.value:Jt.textContent,Gn=!0)),0<(m=qr(r,b)).length&&(b=new vn(b,e,null,n,s),i.push({event:b,listeners:m}),y?b.data=y:null!==(y=Pn(n))&&(b.data=y))),(y=Mn?function(e,t){switch(e){case"compositionend":return Pn(t);case"keypress":return 32!==t.which?null:(Ln=!0,Qn);case"textInput":return(e=t.data)===Qn&&Ln?null:e;default:return null}}(e,n):function(e,t){if(Gn)return"compositionend"===e||!$n&&zn(e,t)?(e=en(),Zt=Xt=Jt=null,Gn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return On&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=qr(r,"onBeforeInput")).length&&(s=new vn("onBeforeInput","beforeinput",null,n,s),i.push({event:s,listeners:r}),s.data=y))}Qr(i,t)}))}function Vr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var s=e,a=s.stateNode;5===s.tag&&null!==a&&(s=a,null!=(a=De(e,n))&&r.unshift(Vr(e,a,s)),null!=(a=De(e,t))&&r.push(Vr(e,a,s))),e=e.return}return r}function Hr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,t,n,r,s){for(var a=t._reactName,i=[];null!==n&&n!==r;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==u&&(o=u,s?null!=(l=De(n,a))&&i.unshift(Vr(n,l,o)):s||null!=(l=De(n,a))&&i.push(Vr(n,l,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var jr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function Jr(e){return("string"===typeof e?e:""+e).replace(jr,"\n").replace(Kr,"")}function Xr(e,t,n){if(t=Jr(t),Jr(e)!==t&&n)throw Error(a(425))}function Zr(){}var es=null,ts=null;function ns(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var rs="function"===typeof setTimeout?setTimeout:void 0,ss="function"===typeof clearTimeout?clearTimeout:void 0,as="function"===typeof Promise?Promise:void 0,is="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof as?function(e){return as.resolve(null).then(e).catch(os)}:rs;function os(e){setTimeout((function(){throw e}))}function ls(e,t){var n=t,r=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&8===s.nodeType)if("/$"===(n=s.data)){if(0===r)return e.removeChild(s),void Gt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=s}while(n);Gt(t)}function us(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cs(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ds=Math.random().toString(36).slice(2),hs="__reactFiber$"+ds,ps="__reactProps$"+ds,As="__reactContainer$"+ds,fs="__reactEvents$"+ds,gs="__reactListeners$"+ds,ms="__reactHandles$"+ds;function ys(e){var t=e[hs];if(t)return t;for(var n=e.parentNode;n;){if(t=n[As]||n[hs]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cs(e);null!==e;){if(n=e[hs])return n;e=cs(e)}return t}n=(e=n).parentNode}return null}function bs(e){return!(e=e[hs]||e[As])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vs(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Is(e){return e[ps]||null}var xs=[],ws=-1;function ks(e){return{current:e}}function Cs(e){0>ws||(e.current=xs[ws],xs[ws]=null,ws--)}function Es(e,t){ws++,xs[ws]=e.current,e.current=t}var Ss={},Ts=ks(Ss),Ns=ks(!1),Bs=Ss;function Rs(e,t){var n=e.type.contextTypes;if(!n)return Ss;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var s,a={};for(s in n)a[s]=t[s];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ds(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Fs(){Cs(Ns),Cs(Ts)}function $s(e,t,n){if(Ts.current!==Ss)throw Error(a(168));Es(Ts,t),Es(Ns,n)}function _s(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var s in r=r.getChildContext())if(!(s in t))throw Error(a(108,U(e)||"Unknown",s));return O({},n,r)}function Ms(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ss,Bs=Ts.current,Es(Ts,e),Es(Ns,Ns.current),!0}function Os(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=_s(e,t,Bs),r.__reactInternalMemoizedMergedChildContext=e,Cs(Ns),Cs(Ts),Es(Ts,e)):Cs(Ns),Es(Ns,n)}var Qs=null,Ls=!1,zs=!1;function Ps(e){null===Qs?Qs=[e]:Qs.push(e)}function Gs(){if(!zs&&null!==Qs){zs=!0;var e=0,t=bt;try{var n=Qs;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Qs=null,Ls=!1}catch(s){throw null!==Qs&&(Qs=Qs.slice(e+1)),He(Ze,Gs),s}finally{bt=t,zs=!1}}return null}var Us=[],Ws=0,Vs=null,qs=0,Hs=[],Ys=0,js=null,Ks=1,Js="";function Xs(e,t){Us[Ws++]=qs,Us[Ws++]=Vs,Vs=e,qs=t}function Zs(e,t,n){Hs[Ys++]=Ks,Hs[Ys++]=Js,Hs[Ys++]=js,js=e;var r=Ks;e=Js;var s=32-it(r)-1;r&=~(1<<s),n+=1;var a=32-it(t)+s;if(30<a){var i=s-s%5;a=(r&(1<<i)-1).toString(32),r>>=i,s-=i,Ks=1<<32-it(t)+s|n<<s|r,Js=a+e}else Ks=1<<a|n<<s|r,Js=e}function ea(e){null!==e.return&&(Xs(e,1),Zs(e,1,0))}function ta(e){for(;e===Vs;)Vs=Us[--Ws],Us[Ws]=null,qs=Us[--Ws],Us[Ws]=null;for(;e===js;)js=Hs[--Ys],Hs[Ys]=null,Js=Hs[--Ys],Hs[Ys]=null,Ks=Hs[--Ys],Hs[Ys]=null}var na=null,ra=null,sa=!1,aa=null;function ia(e,t){var n=Ru(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function oa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,na=e,ra=us(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,na=e,ra=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==js?{id:Ks,overflow:Js}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ru(18,null,null,0)).stateNode=t,n.return=e,e.child=n,na=e,ra=null,!0);default:return!1}}function la(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ua(e){if(sa){var t=ra;if(t){var n=t;if(!oa(e,t)){if(la(e))throw Error(a(418));t=us(n.nextSibling);var r=na;t&&oa(e,t)?ia(r,n):(e.flags=-4097&e.flags|2,sa=!1,na=e)}}else{if(la(e))throw Error(a(418));e.flags=-4097&e.flags|2,sa=!1,na=e}}}function ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;na=e}function da(e){if(e!==na)return!1;if(!sa)return ca(e),sa=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ns(e.type,e.memoizedProps)),t&&(t=ra)){if(la(e))throw ha(),Error(a(418));for(;t;)ia(e,t),t=us(t.nextSibling)}if(ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ra=us(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ra=null}}else ra=na?us(e.stateNode.nextSibling):null;return!0}function ha(){for(var e=ra;e;)e=us(e.nextSibling)}function pa(){ra=na=null,sa=!1}function Aa(e){null===aa?aa=[e]:aa.push(e)}var fa=v.ReactCurrentBatchConfig;function ga(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var s=r,i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=s.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function ma(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ya(e){return(0,e._init)(e._payload)}function ba(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Fu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Ou(n,e.mode,r)).return=e,t):((t=s(t,n)).return=e,t)}function u(e,t,n,r){var a=n.type;return a===w?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===D&&ya(a)===t.type)?((r=s(t,n.props)).ref=ga(e,t,n),r.return=e,r):((r=$u(n.type,n.key,n.props,null,e.mode,r)).ref=ga(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Qu(n,e.mode,r)).return=e,t):((t=s(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=_u(n,e.mode,r,a)).return=e,t):((t=s(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Ou(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case I:return(n=$u(t.type,t.key,t.props,null,e.mode,n)).ref=ga(e,null,t),n.return=e,n;case x:return(t=Qu(t,e.mode,n)).return=e,t;case D:return h(e,(0,t._init)(t._payload),n)}if(te(t)||_(t))return(t=_u(t,e.mode,n,null)).return=e,t;ma(e,t)}return null}function p(e,t,n,r){var s=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==s?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case I:return n.key===s?u(e,t,n,r):null;case x:return n.key===s?c(e,t,n,r):null;case D:return p(e,t,(s=n._init)(n._payload),r)}if(te(n)||_(n))return null!==s?null:d(e,t,n,r,null);ma(e,n)}return null}function A(e,t,n,r,s){if("string"===typeof r&&""!==r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,s);if("object"===typeof r&&null!==r){switch(r.$$typeof){case I:return u(t,e=e.get(null===r.key?n:r.key)||null,r,s);case x:return c(t,e=e.get(null===r.key?n:r.key)||null,r,s);case D:return A(e,t,n,(0,r._init)(r._payload),s)}if(te(r)||_(r))return d(t,e=e.get(n)||null,r,s,null);ma(t,r)}return null}function f(s,a,o,l){for(var u=null,c=null,d=a,f=a=0,g=null;null!==d&&f<o.length;f++){d.index>f?(g=d,d=null):g=d.sibling;var m=p(s,d,o[f],l);if(null===m){null===d&&(d=g);break}e&&d&&null===m.alternate&&t(s,d),a=i(m,a,f),null===c?u=m:c.sibling=m,c=m,d=g}if(f===o.length)return n(s,d),sa&&Xs(s,f),u;if(null===d){for(;f<o.length;f++)null!==(d=h(s,o[f],l))&&(a=i(d,a,f),null===c?u=d:c.sibling=d,c=d);return sa&&Xs(s,f),u}for(d=r(s,d);f<o.length;f++)null!==(g=A(d,s,f,o[f],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?f:g.key),a=i(g,a,f),null===c?u=g:c.sibling=g,c=g);return e&&d.forEach((function(e){return t(s,e)})),sa&&Xs(s,f),u}function g(s,o,l,u){var c=_(l);if("function"!==typeof c)throw Error(a(150));if(null==(l=c.call(l)))throw Error(a(151));for(var d=c=null,f=o,g=o=0,m=null,y=l.next();null!==f&&!y.done;g++,y=l.next()){f.index>g?(m=f,f=null):m=f.sibling;var b=p(s,f,y.value,u);if(null===b){null===f&&(f=m);break}e&&f&&null===b.alternate&&t(s,f),o=i(b,o,g),null===d?c=b:d.sibling=b,d=b,f=m}if(y.done)return n(s,f),sa&&Xs(s,g),c;if(null===f){for(;!y.done;g++,y=l.next())null!==(y=h(s,y.value,u))&&(o=i(y,o,g),null===d?c=y:d.sibling=y,d=y);return sa&&Xs(s,g),c}for(f=r(s,f);!y.done;g++,y=l.next())null!==(y=A(f,s,g,y.value,u))&&(e&&null!==y.alternate&&f.delete(null===y.key?g:y.key),o=i(y,o,g),null===d?c=y:d.sibling=y,d=y);return e&&f.forEach((function(e){return t(s,e)})),sa&&Xs(s,g),c}return function e(r,a,i,l){if("object"===typeof i&&null!==i&&i.type===w&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case I:e:{for(var u=i.key,c=a;null!==c;){if(c.key===u){if((u=i.type)===w){if(7===c.tag){n(r,c.sibling),(a=s(c,i.props.children)).return=r,r=a;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===D&&ya(u)===c.type){n(r,c.sibling),(a=s(c,i.props)).ref=ga(r,c,i),a.return=r,r=a;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===w?((a=_u(i.props.children,r.mode,l,i.key)).return=r,r=a):((l=$u(i.type,i.key,i.props,null,r.mode,l)).ref=ga(r,a,i),l.return=r,r=l)}return o(r);case x:e:{for(c=i.key;null!==a;){if(a.key===c){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){n(r,a.sibling),(a=s(a,i.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=Qu(i,r.mode,l)).return=r,r=a}return o(r);case D:return e(r,a,(c=i._init)(i._payload),l)}if(te(i))return f(r,a,i,l);if(_(i))return g(r,a,i,l);ma(r,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==a&&6===a.tag?(n(r,a.sibling),(a=s(a,i)).return=r,r=a):(n(r,a),(a=Ou(i,r.mode,l)).return=r,r=a),o(r)):n(r,a)}}var va=ba(!0),Ia=ba(!1),xa=ks(null),wa=null,ka=null,Ca=null;function Ea(){Ca=ka=wa=null}function Sa(e){var t=xa.current;Cs(xa),e._currentValue=t}function Ta(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Na(e,t){wa=e,Ca=ka=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(bo=!0),e.firstContext=null)}function Ba(e){var t=e._currentValue;if(Ca!==e)if(e={context:e,memoizedValue:t,next:null},null===ka){if(null===wa)throw Error(a(308));ka=e,wa.dependencies={lanes:0,firstContext:e}}else ka=ka.next=e;return t}var Ra=null;function Da(e){null===Ra?Ra=[e]:Ra.push(e)}function Fa(e,t,n,r){var s=t.interleaved;return null===s?(n.next=n,Da(t)):(n.next=s.next,s.next=n),t.interleaved=n,$a(e,r)}function $a(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var _a=!1;function Ma(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Oa(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Qa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function La(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&Tl)){var s=r.pending;return null===s?t.next=t:(t.next=s.next,s.next=t),r.pending=t,$a(e,n)}return null===(s=r.interleaved)?(t.next=t,Da(r)):(t.next=s.next,s.next=t),r.interleaved=t,$a(e,n)}function za(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Pa(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var s=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?s=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?s=a=t:a=a.next=t}else s=a=t;return n={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ga(e,t,n,r){var s=e.updateQueue;_a=!1;var a=s.firstBaseUpdate,i=s.lastBaseUpdate,o=s.shared.pending;if(null!==o){s.shared.pending=null;var l=o,u=l.next;l.next=null,null===i?a=u:i.next=u,i=l;var c=e.alternate;null!==c&&((o=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===o?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(null!==a){var d=s.baseState;for(i=0,c=u=l=null,o=a;;){var h=o.lane,p=o.eventTime;if((r&h)===h){null!==c&&(c=c.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var A=e,f=o;switch(h=t,p=n,f.tag){case 1:if("function"===typeof(A=f.payload)){d=A.call(p,d,h);break e}d=A;break e;case 3:A.flags=-65537&A.flags|128;case 0:if(null===(h="function"===typeof(A=f.payload)?A.call(p,d,h):A)||void 0===h)break e;d=O({},d,h);break e;case 2:_a=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(h=s.effects)?s.effects=[o]:h.push(o))}else p={eventTime:p,lane:h,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(u=c=p,l=d):c=c.next=p,i|=h;if(null===(o=o.next)){if(null===(o=s.shared.pending))break;o=(h=o).next,h.next=null,s.lastBaseUpdate=h,s.shared.pending=null}}if(null===c&&(l=d),s.baseState=l,s.firstBaseUpdate=u,s.lastBaseUpdate=c,null!==(t=s.shared.interleaved)){s=t;do{i|=s.lane,s=s.next}while(s!==t)}else null===a&&(s.shared.lanes=0);Ml|=i,e.lanes=i,e.memoizedState=d}}function Ua(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],s=r.callback;if(null!==s){if(r.callback=null,r=n,"function"!==typeof s)throw Error(a(191,s));s.call(r)}}}var Wa={},Va=ks(Wa),qa=ks(Wa),Ha=ks(Wa);function Ya(e){if(e===Wa)throw Error(a(174));return e}function ja(e,t){switch(Es(Ha,t),Es(qa,e),Es(Va,Wa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Cs(Va),Es(Va,t)}function Ka(){Cs(Va),Cs(qa),Cs(Ha)}function Ja(e){Ya(Ha.current);var t=Ya(Va.current),n=le(t,e.type);t!==n&&(Es(qa,e),Es(Va,n))}function Xa(e){qa.current===e&&(Cs(Va),Cs(qa))}var Za=ks(0);function ei(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ti=[];function ni(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var ri=v.ReactCurrentDispatcher,si=v.ReactCurrentBatchConfig,ai=0,ii=null,oi=null,li=null,ui=!1,ci=!1,di=0,hi=0;function pi(){throw Error(a(321))}function Ai(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function fi(e,t,n,r,s,i){if(ai=i,ii=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ri.current=null===e||null===e.memoizedState?Xi:Zi,e=n(r,s),ci){i=0;do{if(ci=!1,di=0,25<=i)throw Error(a(301));i+=1,li=oi=null,t.updateQueue=null,ri.current=eo,e=n(r,s)}while(ci)}if(ri.current=Ji,t=null!==oi&&null!==oi.next,ai=0,li=oi=ii=null,ui=!1,t)throw Error(a(300));return e}function gi(){var e=0!==di;return di=0,e}function mi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===li?ii.memoizedState=li=e:li=li.next=e,li}function yi(){if(null===oi){var e=ii.alternate;e=null!==e?e.memoizedState:null}else e=oi.next;var t=null===li?ii.memoizedState:li.next;if(null!==t)li=t,oi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(oi=e).memoizedState,baseState:oi.baseState,baseQueue:oi.baseQueue,queue:oi.queue,next:null},null===li?ii.memoizedState=li=e:li=li.next=e}return li}function bi(e,t){return"function"===typeof t?t(e):t}function vi(e){var t=yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=oi,s=r.baseQueue,i=n.pending;if(null!==i){if(null!==s){var o=s.next;s.next=i.next,i.next=o}r.baseQueue=s=i,n.pending=null}if(null!==s){i=s.next,r=r.baseState;var l=o=null,u=null,c=i;do{var d=c.lane;if((ai&d)===d)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var h={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=h,o=r):u=u.next=h,ii.lanes|=d,Ml|=d}c=c.next}while(null!==c&&c!==i);null===u?o=r:u.next=l,or(r,t.memoizedState)||(bo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){s=e;do{i=s.lane,ii.lanes|=i,Ml|=i,s=s.next}while(s!==e)}else null===s&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ii(e){var t=yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,s=n.pending,i=t.memoizedState;if(null!==s){n.pending=null;var o=s=s.next;do{i=e(i,o.action),o=o.next}while(o!==s);or(i,t.memoizedState)||(bo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function xi(){}function wi(e,t){var n=ii,r=yi(),s=t(),i=!or(r.memoizedState,s);if(i&&(r.memoizedState=s,bo=!0),r=r.queue,_i(Ei.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==li&&1&li.memoizedState.tag){if(n.flags|=2048,Bi(9,Ci.bind(null,n,r,s,t),void 0,null),null===Nl)throw Error(a(349));0!==(30&ai)||ki(n,t,s)}return s}function ki(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ci(e,t,n,r){t.value=n,t.getSnapshot=r,Si(t)&&Ti(e)}function Ei(e,t,n){return n((function(){Si(t)&&Ti(e)}))}function Si(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!or(e,n)}catch(r){return!0}}function Ti(e){var t=$a(e,1);null!==t&&nu(t,e,1,-1)}function Ni(e){var t=mi();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:bi,lastRenderedState:e},t.queue=e,e=e.dispatch=Hi.bind(null,ii,e),[t.memoizedState,e]}function Bi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ri(){return yi().memoizedState}function Di(e,t,n,r){var s=mi();ii.flags|=e,s.memoizedState=Bi(1|t,n,void 0,void 0===r?null:r)}function Fi(e,t,n,r){var s=yi();r=void 0===r?null:r;var a=void 0;if(null!==oi){var i=oi.memoizedState;if(a=i.destroy,null!==r&&Ai(r,i.deps))return void(s.memoizedState=Bi(t,n,a,r))}ii.flags|=e,s.memoizedState=Bi(1|t,n,a,r)}function $i(e,t){return Di(8390656,8,e,t)}function _i(e,t){return Fi(2048,8,e,t)}function Mi(e,t){return Fi(4,2,e,t)}function Oi(e,t){return Fi(4,4,e,t)}function Qi(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Li(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Fi(4,4,Qi.bind(null,t,e),n)}function zi(){}function Pi(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ai(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Gi(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ai(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ui(e,t,n){return 0===(21&ai)?(e.baseState&&(e.baseState=!1,bo=!0),e.memoizedState=n):(or(n,t)||(n=ft(),ii.lanes|=n,Ml|=n,e.baseState=!0),t)}function Wi(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=si.transition;si.transition={};try{e(!1),t()}finally{bt=n,si.transition=r}}function Vi(){return yi().memoizedState}function qi(e,t,n){var r=tu(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Yi(e))ji(t,n);else if(null!==(n=Fa(e,t,n,r))){nu(n,e,r,eu()),Ki(n,t,r)}}function Hi(e,t,n){var r=tu(e),s={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yi(e))ji(t,s);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=a(i,n);if(s.hasEagerState=!0,s.eagerState=o,or(o,i)){var l=t.interleaved;return null===l?(s.next=s,Da(t)):(s.next=l.next,l.next=s),void(t.interleaved=s)}}catch(u){}null!==(n=Fa(e,t,s,r))&&(nu(n,e,r,s=eu()),Ki(n,t,r))}}function Yi(e){var t=e.alternate;return e===ii||null!==t&&t===ii}function ji(e,t){ci=ui=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Ki(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var Ji={readContext:Ba,useCallback:pi,useContext:pi,useEffect:pi,useImperativeHandle:pi,useInsertionEffect:pi,useLayoutEffect:pi,useMemo:pi,useReducer:pi,useRef:pi,useState:pi,useDebugValue:pi,useDeferredValue:pi,useTransition:pi,useMutableSource:pi,useSyncExternalStore:pi,useId:pi,unstable_isNewReconciler:!1},Xi={readContext:Ba,useCallback:function(e,t){return mi().memoizedState=[e,void 0===t?null:t],e},useContext:Ba,useEffect:$i,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Di(4194308,4,Qi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Di(4194308,4,e,t)},useInsertionEffect:function(e,t){return Di(4,2,e,t)},useMemo:function(e,t){var n=mi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=mi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=qi.bind(null,ii,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},mi().memoizedState=e},useState:Ni,useDebugValue:zi,useDeferredValue:function(e){return mi().memoizedState=e},useTransition:function(){var e=Ni(!1),t=e[0];return e=Wi.bind(null,e[1]),mi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ii,s=mi();if(sa){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===Nl)throw Error(a(349));0!==(30&ai)||ki(r,t,n)}s.memoizedState=n;var i={value:n,getSnapshot:t};return s.queue=i,$i(Ei.bind(null,r,i,e),[e]),r.flags|=2048,Bi(9,Ci.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=mi(),t=Nl.identifierPrefix;if(sa){var n=Js;t=":"+t+"R"+(n=(Ks&~(1<<32-it(Ks)-1)).toString(32)+n),0<(n=di++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=hi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Zi={readContext:Ba,useCallback:Pi,useContext:Ba,useEffect:_i,useImperativeHandle:Li,useInsertionEffect:Mi,useLayoutEffect:Oi,useMemo:Gi,useReducer:vi,useRef:Ri,useState:function(){return vi(bi)},useDebugValue:zi,useDeferredValue:function(e){return Ui(yi(),oi.memoizedState,e)},useTransition:function(){return[vi(bi)[0],yi().memoizedState]},useMutableSource:xi,useSyncExternalStore:wi,useId:Vi,unstable_isNewReconciler:!1},eo={readContext:Ba,useCallback:Pi,useContext:Ba,useEffect:_i,useImperativeHandle:Li,useInsertionEffect:Mi,useLayoutEffect:Oi,useMemo:Gi,useReducer:Ii,useRef:Ri,useState:function(){return Ii(bi)},useDebugValue:zi,useDeferredValue:function(e){var t=yi();return null===oi?t.memoizedState=e:Ui(t,oi.memoizedState,e)},useTransition:function(){return[Ii(bi)[0],yi().memoizedState]},useMutableSource:xi,useSyncExternalStore:wi,useId:Vi,unstable_isNewReconciler:!1};function to(e,t){if(e&&e.defaultProps){for(var n in t=O({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function no(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:O({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ro={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=eu(),s=tu(e),a=Qa(r,s);a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=La(e,a,s))&&(nu(t,e,s,r),za(t,e,s))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=eu(),s=tu(e),a=Qa(r,s);a.tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=La(e,a,s))&&(nu(t,e,s,r),za(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),r=tu(e),s=Qa(n,r);s.tag=2,void 0!==t&&null!==t&&(s.callback=t),null!==(t=La(e,s,r))&&(nu(t,e,r,n),za(t,e,r))}};function so(e,t,n,r,s,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!lr(n,r)||!lr(s,a))}function ao(e,t,n){var r=!1,s=Ss,a=t.contextType;return"object"===typeof a&&null!==a?a=Ba(a):(s=Ds(t)?Bs:Ts.current,a=(r=null!==(r=t.contextTypes)&&void 0!==r)?Rs(e,s):Ss),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ro,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=a),t}function io(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ro.enqueueReplaceState(t,t.state,null)}function oo(e,t,n,r){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs={},Ma(e);var a=t.contextType;"object"===typeof a&&null!==a?s.context=Ba(a):(a=Ds(t)?Bs:Ts.current,s.context=Rs(e,a)),s.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(no(e,t,a,n),s.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(t=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&ro.enqueueReplaceState(s,s.state,null),Ga(e,n,s,r),s.state=e.memoizedState),"function"===typeof s.componentDidMount&&(e.flags|=4194308)}function lo(e,t){try{var n="",r=t;do{n+=P(r),r=r.return}while(r);var s=n}catch(a){s="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:t,stack:s,digest:null}}function uo(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function co(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var ho="function"===typeof WeakMap?WeakMap:Map;function po(e,t,n){(n=Qa(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,Vl=r),co(0,t)},n}function Ao(e,t,n){(n=Qa(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var s=t.value;n.payload=function(){return r(s)},n.callback=function(){co(0,t)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(n.callback=function(){co(0,t),"function"!==typeof r&&(null===ql?ql=new Set([this]):ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function fo(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new ho;var s=new Set;r.set(t,s)}else void 0===(s=r.get(t))&&(s=new Set,r.set(t,s));s.has(n)||(s.add(n),e=Cu.bind(null,e,t,n),t.then(e,e))}function go(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function mo(e,t,n,r,s){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Qa(-1,1)).tag=2,La(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var yo=v.ReactCurrentOwner,bo=!1;function vo(e,t,n,r){t.child=null===e?Ia(t,null,n,r):va(t,e.child,n,r)}function Io(e,t,n,r,s){n=n.render;var a=t.ref;return Na(t,s),r=fi(e,t,n,r,a,s),n=gi(),null===e||bo?(sa&&n&&ea(t),t.flags|=1,vo(e,t,r,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Wo(e,t,s))}function xo(e,t,n,r,s){if(null===e){var a=n.type;return"function"!==typeof a||Du(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$u(n.type,null,r,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,wo(e,t,a,r,s))}if(a=e.child,0===(e.lanes&s)){var i=a.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(i,r)&&e.ref===t.ref)return Wo(e,t,s)}return t.flags|=1,(e=Fu(a,r)).ref=t.ref,e.return=t,t.child=e}function wo(e,t,n,r,s){if(null!==e){var a=e.memoizedProps;if(lr(a,r)&&e.ref===t.ref){if(bo=!1,t.pendingProps=r=a,0===(e.lanes&s))return t.lanes=e.lanes,Wo(e,t,s);0!==(131072&e.flags)&&(bo=!0)}}return Eo(e,t,n,r,s)}function ko(e,t,n){var r=t.pendingProps,s=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Es(Fl,Dl),Dl|=n;else{if(0===(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Es(Fl,Dl),Dl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:n,Es(Fl,Dl),Dl|=r}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,Es(Fl,Dl),Dl|=r;return vo(e,t,s,n),t.child}function Co(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Eo(e,t,n,r,s){var a=Ds(n)?Bs:Ts.current;return a=Rs(t,a),Na(t,s),n=fi(e,t,n,r,a,s),r=gi(),null===e||bo?(sa&&r&&ea(t),t.flags|=1,vo(e,t,n,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Wo(e,t,s))}function So(e,t,n,r,s){if(Ds(n)){var a=!0;Ms(t)}else a=!1;if(Na(t,s),null===t.stateNode)Uo(e,t),ao(t,n,r),oo(t,n,r,s),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;"object"===typeof u&&null!==u?u=Ba(u):u=Rs(t,u=Ds(n)?Bs:Ts.current);var c=n.getDerivedStateFromProps,d="function"===typeof c||"function"===typeof i.getSnapshotBeforeUpdate;d||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==r||l!==u)&&io(t,i,r,u),_a=!1;var h=t.memoizedState;i.state=h,Ga(t,r,i,s),l=t.memoizedState,o!==r||h!==l||Ns.current||_a?("function"===typeof c&&(no(t,n,c,r),l=t.memoizedState),(o=_a||so(t,n,o,r,h,l,u))?(d||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4194308)):("function"===typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=o):("function"===typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Oa(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:to(t.type,o),i.props=u,d=t.pendingProps,h=i.context,"object"===typeof(l=n.contextType)&&null!==l?l=Ba(l):l=Rs(t,l=Ds(n)?Bs:Ts.current);var p=n.getDerivedStateFromProps;(c="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==d||h!==l)&&io(t,i,r,l),_a=!1,h=t.memoizedState,i.state=h,Ga(t,r,i,s);var A=t.memoizedState;o!==d||h!==A||Ns.current||_a?("function"===typeof p&&(no(t,n,p,r),A=t.memoizedState),(u=_a||so(t,n,u,r,h,A,l)||!1)?(c||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,A,l),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,A,l)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=A),i.props=r,i.state=A,i.context=l,r=u):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),r=!1)}return To(e,t,n,r,a,s)}function To(e,t,n,r,s,a){Co(e,t);var i=0!==(128&t.flags);if(!r&&!i)return s&&Os(t,n,!1),Wo(e,t,a);r=t.stateNode,yo.current=t;var o=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=va(t,e.child,null,a),t.child=va(t,null,o,a)):vo(e,t,o,a),t.memoizedState=r.state,s&&Os(t,n,!0),t.child}function No(e){var t=e.stateNode;t.pendingContext?$s(0,t.pendingContext,t.pendingContext!==t.context):t.context&&$s(0,t.context,!1),ja(e,t.containerInfo)}function Bo(e,t,n,r,s){return pa(),Aa(s),t.flags|=256,vo(e,t,n,r),t.child}var Ro,Do,Fo,$o,_o={dehydrated:null,treeContext:null,retryLane:0};function Mo(e){return{baseLanes:e,cachePool:null,transitions:null}}function Oo(e,t,n){var r,s=t.pendingProps,i=Za.current,o=!1,l=0!==(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!==(2&i)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Es(Za,1&i),null===e)return ua(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=s.children,e=s.fallback,o?(s=t.mode,o=t.child,l={mode:"hidden",children:l},0===(1&s)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Mu(l,s,0,null),e=_u(e,s,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Mo(n),t.memoizedState=_o,e):Qo(t,l));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,s,i,o){if(n)return 256&t.flags?(t.flags&=-257,Lo(e,t,o,r=uo(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,s=t.mode,r=Mu({mode:"visible",children:r.children},s,0,null),(i=_u(i,s,o,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!==(1&t.mode)&&va(t,e.child,null,o),t.child.memoizedState=Mo(o),t.memoizedState=_o,i);if(0===(1&t.mode))return Lo(e,t,o,null);if("$!"===s.data){if(r=s.nextSibling&&s.nextSibling.dataset)var l=r.dgst;return r=l,Lo(e,t,o,r=uo(i=Error(a(419)),r,void 0))}if(l=0!==(o&e.childLanes),bo||l){if(null!==(r=Nl)){switch(o&-o){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!==(s&(r.suspendedLanes|o))?0:s)&&s!==i.retryLane&&(i.retryLane=s,$a(e,s),nu(r,e,s,-1))}return fu(),Lo(e,t,o,r=uo(Error(a(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Su.bind(null,e),s._reactRetry=t,null):(e=i.treeContext,ra=us(s.nextSibling),na=t,sa=!0,aa=null,null!==e&&(Hs[Ys++]=Ks,Hs[Ys++]=Js,Hs[Ys++]=js,Ks=e.id,Js=e.overflow,js=t),t=Qo(t,r.children),t.flags|=4096,t)}(e,t,l,s,r,i,n);if(o){o=s.fallback,l=t.mode,r=(i=e.child).sibling;var u={mode:"hidden",children:s.children};return 0===(1&l)&&t.child!==i?((s=t.child).childLanes=0,s.pendingProps=u,t.deletions=null):(s=Fu(i,u)).subtreeFlags=14680064&i.subtreeFlags,null!==r?o=Fu(r,o):(o=_u(o,l,n,null)).flags|=2,o.return=t,s.return=t,s.sibling=o,t.child=s,s=o,o=t.child,l=null===(l=e.child.memoizedState)?Mo(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~n,t.memoizedState=_o,s}return e=(o=e.child).sibling,s=Fu(o,{mode:"visible",children:s.children}),0===(1&t.mode)&&(s.lanes=n),s.return=t,s.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=s,t.memoizedState=null,s}function Qo(e,t){return(t=Mu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Lo(e,t,n,r){return null!==r&&Aa(r),va(t,e.child,null,n),(e=Qo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function zo(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Ta(e.return,t,n)}function Po(e,t,n,r,s){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:s}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=s)}function Go(e,t,n){var r=t.pendingProps,s=r.revealOrder,a=r.tail;if(vo(e,t,r.children,n),0!==(2&(r=Za.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&zo(e,n,t);else if(19===e.tag)zo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Es(Za,r),0===(1&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;null!==n;)null!==(e=n.alternate)&&null===ei(e)&&(s=n),n=n.sibling;null===(n=s)?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),Po(t,!1,s,n,a);break;case"backwards":for(n=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===ei(e)){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}Po(t,!0,n,null,a);break;case"together":Po(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Uo(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Wo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Fu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Vo(e,t){if(!sa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function qo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=14680064&s.subtreeFlags,r|=14680064&s.flags,s.return=e,s=s.sibling;else for(s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Ho(e,t,n){var r=t.pendingProps;switch(ta(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qo(t),null;case 1:case 17:return Ds(t.type)&&Fs(),qo(t),null;case 3:return r=t.stateNode,Ka(),Cs(Ns),Cs(Ts),ni(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(da(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==aa&&(iu(aa),aa=null))),Do(e,t),qo(t),null;case 5:Xa(t);var s=Ya(Ha.current);if(n=t.type,null!==e&&null!=t.stateNode)Fo(e,t,n,r,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return qo(t),null}if(e=Ya(Va.current),da(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[hs]=t,r[ps]=i,e=0!==(1&t.mode),n){case"dialog":Lr("cancel",r),Lr("close",r);break;case"iframe":case"object":case"embed":Lr("load",r);break;case"video":case"audio":for(s=0;s<_r.length;s++)Lr(_r[s],r);break;case"source":Lr("error",r);break;case"img":case"image":case"link":Lr("error",r),Lr("load",r);break;case"details":Lr("toggle",r);break;case"input":K(r,i),Lr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Lr("invalid",r);break;case"textarea":se(r,i),Lr("invalid",r)}for(var l in ye(n,i),s=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"===typeof u?r.textContent!==u&&(!0!==i.suppressHydrationWarning&&Xr(r.textContent,u,e),s=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(!0!==i.suppressHydrationWarning&&Xr(r.textContent,u,e),s=["children",""+u]):o.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Lr("scroll",r)}switch(n){case"input":q(r),Z(r,i,!0);break;case"textarea":q(r),ie(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=Zr)}r=s,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===s.nodeType?s:s.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[hs]=t,e[ps]=r,Ro(e,t,!1,!1),t.stateNode=e;e:{switch(l=be(n,r),n){case"dialog":Lr("cancel",e),Lr("close",e),s=r;break;case"iframe":case"object":case"embed":Lr("load",e),s=r;break;case"video":case"audio":for(s=0;s<_r.length;s++)Lr(_r[s],e);s=r;break;case"source":Lr("error",e),s=r;break;case"img":case"image":case"link":Lr("error",e),Lr("load",e),s=r;break;case"details":Lr("toggle",e),s=r;break;case"input":K(e,r),s=j(e,r),Lr("invalid",e);break;case"option":default:s=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=O({},r,{value:void 0}),Lr("invalid",e);break;case"textarea":se(e,r),s=re(e,r),Lr("invalid",e)}for(i in ye(n,s),u=s)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?ge(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===i?"string"===typeof c?("textarea"!==n||""!==c)&&he(e,c):"number"===typeof c&&he(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Lr("scroll",e):null!=c&&b(e,i,c,l))}switch(n){case"input":q(e),Z(e,r,!1);break;case"textarea":q(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+W(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof s.onClick&&(e.onclick=Zr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qo(t),null;case 6:if(e&&null!=t.stateNode)$o(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(a(166));if(n=Ya(Ha.current),Ya(Va.current),da(t)){if(r=t.stateNode,n=t.memoizedProps,r[hs]=t,(i=r.nodeValue!==n)&&null!==(e=na))switch(e.tag){case 3:Xr(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xr(r.nodeValue,n,0!==(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[hs]=t,t.stateNode=r}return qo(t),null;case 13:if(Cs(Za),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(sa&&null!==ra&&0!==(1&t.mode)&&0===(128&t.flags))ha(),pa(),t.flags|=98560,i=!1;else if(i=da(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(a(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(a(317));i[hs]=t}else pa(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qo(t),i=!1}else null!==aa&&(iu(aa),aa=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&Za.current)?0===$l&&($l=3):fu())),null!==t.updateQueue&&(t.flags|=4),qo(t),null);case 4:return Ka(),Do(e,t),null===e&&Gr(t.stateNode.containerInfo),qo(t),null;case 10:return Sa(t.type._context),qo(t),null;case 19:if(Cs(Za),null===(i=t.memoizedState))return qo(t),null;if(r=0!==(128&t.flags),null===(l=i.rendering))if(r)Vo(i,!1);else{if(0!==$l||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ei(e))){for(t.flags|=128,Vo(i,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Es(Za,1&Za.current|2),t.child}e=e.sibling}null!==i.tail&&Je()>Gl&&(t.flags|=128,r=!0,Vo(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ei(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Vo(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!sa)return qo(t),null}else 2*Je()-i.renderingStartTime>Gl&&1073741824!==n&&(t.flags|=128,r=!0,Vo(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Je(),t.sibling=null,n=Za.current,Es(Za,r?1&n|2:1&n),t):(qo(t),null);case 22:case 23:return du(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&Dl)&&(qo(t),6&t.subtreeFlags&&(t.flags|=8192)):qo(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Yo(e,t){switch(ta(t),t.tag){case 1:return Ds(t.type)&&Fs(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Ka(),Cs(Ns),Cs(Ts),ni(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Xa(t),null;case 13:if(Cs(Za),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));pa()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Cs(Za),null;case 4:return Ka(),null;case 10:return Sa(t.type._context),null;case 22:case 23:return du(),null;default:return null}}Ro=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Do=function(){},Fo=function(e,t,n,r){var s=e.memoizedProps;if(s!==r){e=t.stateNode,Ya(Va.current);var a,i=null;switch(n){case"input":s=j(e,s),r=j(e,r),i=[];break;case"select":s=O({},s,{value:void 0}),r=O({},r,{value:void 0}),i=[];break;case"textarea":s=re(e,s),r=re(e,r),i=[];break;default:"function"!==typeof s.onClick&&"function"===typeof r.onClick&&(e.onclick=Zr)}for(c in ye(n,r),n=null,s)if(!r.hasOwnProperty(c)&&s.hasOwnProperty(c)&&null!=s[c])if("style"===c){var l=s[c];for(a in l)l.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(o.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=s?s[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(a in l)!l.hasOwnProperty(a)||u&&u.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in u)u.hasOwnProperty(a)&&l[a]!==u[a]&&(n||(n={}),n[a]=u[a])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(o.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Lr("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},$o=function(e,t,n,r){n!==r&&(t.flags|=4)};var jo=!1,Ko=!1,Jo="function"===typeof WeakSet?WeakSet:Set,Xo=null;function Zo(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){ku(e,t,r)}else n.current=null}function el(e,t,n){try{n()}catch(r){ku(e,t,r)}}var tl=!1;function nl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var s=r=r.next;do{if((s.tag&e)===e){var a=s.destroy;s.destroy=void 0,void 0!==a&&el(t,n,a)}s=s.next}while(s!==r)}}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function sl(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function al(e){var t=e.alternate;null!==t&&(e.alternate=null,al(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[hs],delete t[ps],delete t[fs],delete t[gs],delete t[ms])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function ol(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Zr));else if(4!==r&&null!==(e=e.child))for(ll(e,t,n),e=e.sibling;null!==e;)ll(e,t,n),e=e.sibling}function ul(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}var cl=null,dl=!1;function hl(e,t,n){for(n=n.child;null!==n;)pl(e,t,n),n=n.sibling}function pl(e,t,n){if(at&&"function"===typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(st,n)}catch(o){}switch(n.tag){case 5:Ko||Zo(n,t);case 6:var r=cl,s=dl;cl=null,hl(e,t,n),dl=s,null!==(cl=r)&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cl.removeChild(n.stateNode));break;case 18:null!==cl&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?ls(e.parentNode,n):1===e.nodeType&&ls(e,n),Gt(e)):ls(cl,n.stateNode));break;case 4:r=cl,s=dl,cl=n.stateNode.containerInfo,dl=!0,hl(e,t,n),cl=r,dl=s;break;case 0:case 11:case 14:case 15:if(!Ko&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){s=r=r.next;do{var a=s,i=a.destroy;a=a.tag,void 0!==i&&(0!==(2&a)||0!==(4&a))&&el(n,t,i),s=s.next}while(s!==r)}hl(e,t,n);break;case 1:if(!Ko&&(Zo(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(o){ku(n,t,o)}hl(e,t,n);break;case 21:hl(e,t,n);break;case 22:1&n.mode?(Ko=(r=Ko)||null!==n.memoizedState,hl(e,t,n),Ko=r):hl(e,t,n);break;default:hl(e,t,n)}}function Al(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Jo),t.forEach((function(t){var r=Tu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function fl(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var s=n[r];try{var i=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:cl=l.stateNode,dl=!1;break e;case 3:case 4:cl=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===cl)throw Error(a(160));pl(i,o,s),cl=null,dl=!1;var u=s.alternate;null!==u&&(u.return=null),s.return=null}catch(c){ku(s,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(fl(t,e),ml(e),4&r){try{nl(3,e,e.return),rl(3,e)}catch(g){ku(e,e.return,g)}try{nl(5,e,e.return)}catch(g){ku(e,e.return,g)}}break;case 1:fl(t,e),ml(e),512&r&&null!==n&&Zo(n,n.return);break;case 5:if(fl(t,e),ml(e),512&r&&null!==n&&Zo(n,n.return),32&e.flags){var s=e.stateNode;try{he(s,"")}catch(g){ku(e,e.return,g)}}if(4&r&&null!=(s=e.stateNode)){var i=e.memoizedProps,o=null!==n?n.memoizedProps:i,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===i.type&&null!=i.name&&J(s,i),be(l,o);var c=be(l,i);for(o=0;o<u.length;o+=2){var d=u[o],h=u[o+1];"style"===d?ge(s,h):"dangerouslySetInnerHTML"===d?de(s,h):"children"===d?he(s,h):b(s,d,h,c)}switch(l){case"input":X(s,i);break;case"textarea":ae(s,i);break;case"select":var p=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!i.multiple;var A=i.value;null!=A?ne(s,!!i.multiple,A,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(s,!!i.multiple,i.defaultValue,!0):ne(s,!!i.multiple,i.multiple?[]:"",!1))}s[ps]=i}catch(g){ku(e,e.return,g)}}break;case 6:if(fl(t,e),ml(e),4&r){if(null===e.stateNode)throw Error(a(162));s=e.stateNode,i=e.memoizedProps;try{s.nodeValue=i}catch(g){ku(e,e.return,g)}}break;case 3:if(fl(t,e),ml(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Gt(t.containerInfo)}catch(g){ku(e,e.return,g)}break;case 4:default:fl(t,e),ml(e);break;case 13:fl(t,e),ml(e),8192&(s=e.child).flags&&(i=null!==s.memoizedState,s.stateNode.isHidden=i,!i||null!==s.alternate&&null!==s.alternate.memoizedState||(Pl=Je())),4&r&&Al(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Ko=(c=Ko)||d,fl(t,e),Ko=c):fl(t,e),ml(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&0!==(1&e.mode))for(Xo=e,d=e.child;null!==d;){for(h=Xo=d;null!==Xo;){switch(A=(p=Xo).child,p.tag){case 0:case 11:case 14:case 15:nl(4,p,p.return);break;case 1:Zo(p,p.return);var f=p.stateNode;if("function"===typeof f.componentWillUnmount){r=p,n=p.return;try{t=r,f.props=t.memoizedProps,f.state=t.memoizedState,f.componentWillUnmount()}catch(g){ku(r,n,g)}}break;case 5:Zo(p,p.return);break;case 22:if(null!==p.memoizedState){Il(h);continue}}null!==A?(A.return=p,Xo=A):Il(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{s=h.stateNode,c?"function"===typeof(i=s.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=h.stateNode,o=void 0!==(u=h.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=fe("display",o))}catch(g){ku(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=c?"":h.memoizedProps}catch(g){ku(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:fl(t,e),ml(e),4&r&&Al(e);case 21:}}function ml(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(il(n)){var r=n;break e}n=n.return}throw Error(a(160))}switch(r.tag){case 5:var s=r.stateNode;32&r.flags&&(he(s,""),r.flags&=-33),ul(e,ol(e),s);break;case 3:case 4:var i=r.stateNode.containerInfo;ll(e,ol(e),i);break;default:throw Error(a(161))}}catch(o){ku(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yl(e,t,n){Xo=e,bl(e,t,n)}function bl(e,t,n){for(var r=0!==(1&e.mode);null!==Xo;){var s=Xo,a=s.child;if(22===s.tag&&r){var i=null!==s.memoizedState||jo;if(!i){var o=s.alternate,l=null!==o&&null!==o.memoizedState||Ko;o=jo;var u=Ko;if(jo=i,(Ko=l)&&!u)for(Xo=s;null!==Xo;)l=(i=Xo).child,22===i.tag&&null!==i.memoizedState?xl(s):null!==l?(l.return=i,Xo=l):xl(s);for(;null!==a;)Xo=a,bl(a,t,n),a=a.sibling;Xo=s,jo=o,Ko=u}vl(e)}else 0!==(8772&s.subtreeFlags)&&null!==a?(a.return=s,Xo=a):vl(e)}}function vl(e){for(;null!==Xo;){var t=Xo;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Ko||rl(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Ko)if(null===n)r.componentDidMount();else{var s=t.elementType===t.type?n.memoizedProps:to(t.type,n.memoizedProps);r.componentDidUpdate(s,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Ua(t,i,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ua(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Gt(h)}}}break;default:throw Error(a(163))}Ko||512&t.flags&&sl(t)}catch(p){ku(t,t.return,p)}}if(t===e){Xo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Xo=n;break}Xo=t.return}}function Il(e){for(;null!==Xo;){var t=Xo;if(t===e){Xo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xo=n;break}Xo=t.return}}function xl(e){for(;null!==Xo;){var t=Xo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rl(4,t)}catch(l){ku(t,n,l)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var s=t.return;try{r.componentDidMount()}catch(l){ku(t,s,l)}}var a=t.return;try{sl(t)}catch(l){ku(t,a,l)}break;case 5:var i=t.return;try{sl(t)}catch(l){ku(t,i,l)}}}catch(l){ku(t,t.return,l)}if(t===e){Xo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Xo=o;break}Xo=t.return}}var wl,kl=Math.ceil,Cl=v.ReactCurrentDispatcher,El=v.ReactCurrentOwner,Sl=v.ReactCurrentBatchConfig,Tl=0,Nl=null,Bl=null,Rl=0,Dl=0,Fl=ks(0),$l=0,_l=null,Ml=0,Ol=0,Ql=0,Ll=null,zl=null,Pl=0,Gl=1/0,Ul=null,Wl=!1,Vl=null,ql=null,Hl=!1,Yl=null,jl=0,Kl=0,Jl=null,Xl=-1,Zl=0;function eu(){return 0!==(6&Tl)?Je():-1!==Xl?Xl:Xl=Je()}function tu(e){return 0===(1&e.mode)?1:0!==(2&Tl)&&0!==Rl?Rl&-Rl:null!==fa.transition?(0===Zl&&(Zl=ft()),Zl):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function nu(e,t,n,r){if(50<Kl)throw Kl=0,Jl=null,Error(a(185));mt(e,n,r),0!==(2&Tl)&&e===Nl||(e===Nl&&(0===(2&Tl)&&(Ol|=n),4===$l&&ou(e,Rl)),ru(e,r),1===n&&0===Tl&&0===(1&t.mode)&&(Gl=Je()+500,Ls&&Gs()))}function ru(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,s=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-it(a),o=1<<i,l=s[i];-1===l?0!==(o&n)&&0===(o&r)||(s[i]=pt(o,t)):l<=t&&(e.expiredLanes|=o),a&=~o}}(e,t);var r=ht(e,e===Nl?Rl:0);if(0===r)null!==n&&Ye(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ye(n),1===t)0===e.tag?function(e){Ls=!0,Ps(e)}(lu.bind(null,e)):Ps(lu.bind(null,e)),is((function(){0===(6&Tl)&&Gs()})),n=null;else{switch(vt(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Nu(n,su.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function su(e,t){if(Xl=-1,Zl=0,0!==(6&Tl))throw Error(a(327));var n=e.callbackNode;if(xu()&&e.callbackNode!==n)return null;var r=ht(e,e===Nl?Rl:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=gu(e,r);else{t=r;var s=Tl;Tl|=2;var i=Au();for(Nl===e&&Rl===t||(Ul=null,Gl=Je()+500,hu(e,t));;)try{yu();break}catch(l){pu(e,l)}Ea(),Cl.current=i,Tl=s,null!==Bl?t=0:(Nl=null,Rl=0,t=$l)}if(0!==t){if(2===t&&(0!==(s=At(e))&&(r=s,t=au(e,s))),1===t)throw n=_l,hu(e,0),ou(e,r),ru(e,Je()),n;if(6===t)ou(e,r);else{if(s=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var s=n[r],a=s.getSnapshot;s=s.value;try{if(!or(a(),s))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=gu(e,r))&&(0!==(i=At(e))&&(r=i,t=au(e,i))),1===t))throw n=_l,hu(e,0),ou(e,r),ru(e,Je()),n;switch(e.finishedWork=s,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:Iu(e,zl,Ul);break;case 3:if(ou(e,r),(130023424&r)===r&&10<(t=Pl+500-Je())){if(0!==ht(e,0))break;if(((s=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=rs(Iu.bind(null,e,zl,Ul),t);break}Iu(e,zl,Ul);break;case 4:if(ou(e,r),(4194240&r)===r)break;for(t=e.eventTimes,s=-1;0<r;){var o=31-it(r);i=1<<o,(o=t[o])>s&&(s=o),r&=~i}if(r=s,10<(r=(120>(r=Je()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*kl(r/1960))-r)){e.timeoutHandle=rs(Iu.bind(null,e,zl,Ul),r);break}Iu(e,zl,Ul);break;default:throw Error(a(329))}}}return ru(e,Je()),e.callbackNode===n?su.bind(null,e):null}function au(e,t){var n=Ll;return e.current.memoizedState.isDehydrated&&(hu(e,t).flags|=256),2!==(e=gu(e,t))&&(t=zl,zl=n,null!==t&&iu(t)),e}function iu(e){null===zl?zl=e:zl.push.apply(zl,e)}function ou(e,t){for(t&=~Ql,t&=~Ol,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function lu(e){if(0!==(6&Tl))throw Error(a(327));xu();var t=ht(e,0);if(0===(1&t))return ru(e,Je()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var r=At(e);0!==r&&(t=r,n=au(e,r))}if(1===n)throw n=_l,hu(e,0),ou(e,t),ru(e,Je()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Iu(e,zl,Ul),ru(e,Je()),null}function uu(e,t){var n=Tl;Tl|=1;try{return e(t)}finally{0===(Tl=n)&&(Gl=Je()+500,Ls&&Gs())}}function cu(e){null!==Yl&&0===Yl.tag&&0===(6&Tl)&&xu();var t=Tl;Tl|=1;var n=Sl.transition,r=bt;try{if(Sl.transition=null,bt=1,e)return e()}finally{bt=r,Sl.transition=n,0===(6&(Tl=t))&&Gs()}}function du(){Dl=Fl.current,Cs(Fl)}function hu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ss(n)),null!==Bl)for(n=Bl.return;null!==n;){var r=n;switch(ta(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Fs();break;case 3:Ka(),Cs(Ns),Cs(Ts),ni();break;case 5:Xa(r);break;case 4:Ka();break;case 13:case 19:Cs(Za);break;case 10:Sa(r.type._context);break;case 22:case 23:du()}n=n.return}if(Nl=e,Bl=e=Fu(e.current,null),Rl=Dl=t,$l=0,_l=null,Ql=Ol=Ml=0,zl=Ll=null,null!==Ra){for(t=0;t<Ra.length;t++)if(null!==(r=(n=Ra[t]).interleaved)){n.interleaved=null;var s=r.next,a=n.pending;if(null!==a){var i=a.next;a.next=s,r.next=i}n.pending=r}Ra=null}return e}function pu(e,t){for(;;){var n=Bl;try{if(Ea(),ri.current=Ji,ui){for(var r=ii.memoizedState;null!==r;){var s=r.queue;null!==s&&(s.pending=null),r=r.next}ui=!1}if(ai=0,li=oi=ii=null,ci=!1,di=0,El.current=null,null===n||null===n.return){$l=1,_l=t,Bl=null;break}e:{var i=e,o=n.return,l=n,u=t;if(t=Rl,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,d=l,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var A=go(o);if(null!==A){A.flags&=-257,mo(A,o,l,0,t),1&A.mode&&fo(i,c,t),u=c;var f=(t=A).updateQueue;if(null===f){var g=new Set;g.add(u),t.updateQueue=g}else f.add(u);break e}if(0===(1&t)){fo(i,c,t),fu();break e}u=Error(a(426))}else if(sa&&1&l.mode){var m=go(o);if(null!==m){0===(65536&m.flags)&&(m.flags|=256),mo(m,o,l,0,t),Aa(lo(u,l));break e}}i=u=lo(u,l),4!==$l&&($l=2),null===Ll?Ll=[i]:Ll.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Pa(i,po(0,u,t));break e;case 1:l=u;var y=i.type,b=i.stateNode;if(0===(128&i.flags)&&("function"===typeof y.getDerivedStateFromError||null!==b&&"function"===typeof b.componentDidCatch&&(null===ql||!ql.has(b)))){i.flags|=65536,t&=-t,i.lanes|=t,Pa(i,Ao(i,l,t));break e}}i=i.return}while(null!==i)}vu(n)}catch(v){t=v,Bl===n&&null!==n&&(Bl=n=n.return);continue}break}}function Au(){var e=Cl.current;return Cl.current=Ji,null===e?Ji:e}function fu(){0!==$l&&3!==$l&&2!==$l||($l=4),null===Nl||0===(268435455&Ml)&&0===(268435455&Ol)||ou(Nl,Rl)}function gu(e,t){var n=Tl;Tl|=2;var r=Au();for(Nl===e&&Rl===t||(Ul=null,hu(e,t));;)try{mu();break}catch(s){pu(e,s)}if(Ea(),Tl=n,Cl.current=r,null!==Bl)throw Error(a(261));return Nl=null,Rl=0,$l}function mu(){for(;null!==Bl;)bu(Bl)}function yu(){for(;null!==Bl&&!je();)bu(Bl)}function bu(e){var t=wl(e.alternate,e,Dl);e.memoizedProps=e.pendingProps,null===t?vu(e):Bl=t,El.current=null}function vu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Ho(n,t,Dl)))return void(Bl=n)}else{if(null!==(n=Yo(n,t)))return n.flags&=32767,void(Bl=n);if(null===e)return $l=6,void(Bl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Bl=t);Bl=t=e}while(null!==t);0===$l&&($l=5)}function Iu(e,t,n){var r=bt,s=Sl.transition;try{Sl.transition=null,bt=1,function(e,t,n,r){do{xu()}while(null!==Yl);if(0!==(6&Tl))throw Error(a(327));n=e.finishedWork;var s=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var s=31-it(n),a=1<<s;t[s]=0,r[s]=-1,e[s]=-1,n&=~a}}(e,i),e===Nl&&(Bl=Nl=null,Rl=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Hl||(Hl=!0,Nu(tt,(function(){return xu(),null}))),i=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||i){i=Sl.transition,Sl.transition=null;var o=bt;bt=1;var l=Tl;Tl|=4,El.current=null,function(e,t){if(es=Wt,pr(e=hr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var s=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(I){n=null;break e}var o=0,l=-1,u=-1,c=0,d=0,h=e,p=null;t:for(;;){for(var A;h!==n||0!==s&&3!==h.nodeType||(l=o+s),h!==i||0!==r&&3!==h.nodeType||(u=o+r),3===h.nodeType&&(o+=h.nodeValue.length),null!==(A=h.firstChild);)p=h,h=A;for(;;){if(h===e)break t;if(p===n&&++c===s&&(l=o),p===i&&++d===r&&(u=o),null!==(A=h.nextSibling))break;p=(h=p).parentNode}h=A}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ts={focusedElem:e,selectionRange:n},Wt=!1,Xo=t;null!==Xo;)if(e=(t=Xo).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Xo=e;else for(;null!==Xo;){t=Xo;try{var f=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==f){var g=f.memoizedProps,m=f.memoizedState,y=t.stateNode,b=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:to(t.type,g),m);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(a(163))}}catch(I){ku(t,t.return,I)}if(null!==(e=t.sibling)){e.return=t.return,Xo=e;break}Xo=t.return}f=tl,tl=!1}(e,n),gl(n,e),Ar(ts),Wt=!!es,ts=es=null,e.current=n,yl(n,e,s),Ke(),Tl=l,bt=o,Sl.transition=i}else e.current=n;if(Hl&&(Hl=!1,Yl=e,jl=s),i=e.pendingLanes,0===i&&(ql=null),function(e){if(at&&"function"===typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(st,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ru(e,Je()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)s=t[n],r(s.value,{componentStack:s.stack,digest:s.digest});if(Wl)throw Wl=!1,e=Vl,Vl=null,e;0!==(1&jl)&&0!==e.tag&&xu(),i=e.pendingLanes,0!==(1&i)?e===Jl?Kl++:(Kl=0,Jl=e):Kl=0,Gs()}(e,t,n,r)}finally{Sl.transition=s,bt=r}return null}function xu(){if(null!==Yl){var e=vt(jl),t=Sl.transition,n=bt;try{if(Sl.transition=null,bt=16>e?16:e,null===Yl)var r=!1;else{if(e=Yl,Yl=null,jl=0,0!==(6&Tl))throw Error(a(331));var s=Tl;for(Tl|=4,Xo=e.current;null!==Xo;){var i=Xo,o=i.child;if(0!==(16&Xo.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Xo=c;null!==Xo;){var d=Xo;switch(d.tag){case 0:case 11:case 15:nl(8,d,i)}var h=d.child;if(null!==h)h.return=d,Xo=h;else for(;null!==Xo;){var p=(d=Xo).sibling,A=d.return;if(al(d),d===c){Xo=null;break}if(null!==p){p.return=A,Xo=p;break}Xo=A}}}var f=i.alternate;if(null!==f){var g=f.child;if(null!==g){f.child=null;do{var m=g.sibling;g.sibling=null,g=m}while(null!==g)}}Xo=i}}if(0!==(2064&i.subtreeFlags)&&null!==o)o.return=i,Xo=o;else e:for(;null!==Xo;){if(0!==(2048&(i=Xo).flags))switch(i.tag){case 0:case 11:case 15:nl(9,i,i.return)}var y=i.sibling;if(null!==y){y.return=i.return,Xo=y;break e}Xo=i.return}}var b=e.current;for(Xo=b;null!==Xo;){var v=(o=Xo).child;if(0!==(2064&o.subtreeFlags)&&null!==v)v.return=o,Xo=v;else e:for(o=b;null!==Xo;){if(0!==(2048&(l=Xo).flags))try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(x){ku(l,l.return,x)}if(l===o){Xo=null;break e}var I=l.sibling;if(null!==I){I.return=l.return,Xo=I;break e}Xo=l.return}}if(Tl=s,Gs(),at&&"function"===typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(st,e)}catch(x){}r=!0}return r}finally{bt=n,Sl.transition=t}}return!1}function wu(e,t,n){e=La(e,t=po(0,t=lo(n,t),1),1),t=eu(),null!==e&&(mt(e,1,t),ru(e,t))}function ku(e,t,n){if(3===e.tag)wu(e,e,n);else for(;null!==t;){if(3===t.tag){wu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===ql||!ql.has(r))){t=La(t,e=Ao(t,e=lo(n,e),1),1),e=eu(),null!==t&&(mt(t,1,e),ru(t,e));break}}t=t.return}}function Cu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,Nl===e&&(Rl&n)===n&&(4===$l||3===$l&&(130023424&Rl)===Rl&&500>Je()-Pl?hu(e,0):Ql|=n),ru(e,t)}function Eu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=eu();null!==(e=$a(e,t))&&(mt(e,t,n),ru(e,n))}function Su(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Eu(e,n)}function Tu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,s=e.memoizedState;null!==s&&(n=s.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),Eu(e,n)}function Nu(e,t){return He(e,t)}function Bu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ru(e,t,n,r){return new Bu(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fu(e,t){var n=e.alternate;return null===n?((n=Ru(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $u(e,t,n,r,s,i){var o=2;if(r=e,"function"===typeof e)Du(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case w:return _u(n.children,s,i,t);case k:o=8,s|=8;break;case C:return(e=Ru(12,n,t,2|s)).elementType=C,e.lanes=i,e;case N:return(e=Ru(13,n,t,s)).elementType=N,e.lanes=i,e;case B:return(e=Ru(19,n,t,s)).elementType=B,e.lanes=i,e;case F:return Mu(n,s,i,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case E:o=10;break e;case S:o=9;break e;case T:o=11;break e;case R:o=14;break e;case D:o=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Ru(o,n,t,s)).elementType=e,t.type=r,t.lanes=i,t}function _u(e,t,n,r){return(e=Ru(7,e,r,t)).lanes=n,e}function Mu(e,t,n,r){return(e=Ru(22,e,r,t)).elementType=F,e.lanes=n,e.stateNode={isHidden:!1},e}function Ou(e,t,n){return(e=Ru(6,e,null,t)).lanes=n,e}function Qu(e,t,n){return(t=Ru(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Lu(e,t,n,r,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function zu(e,t,n,r,s,a,i,o,l){return e=new Lu(e,t,n,o,l),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Ru(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ma(a),e}function Pu(e){if(!e)return Ss;e:{if(Ge(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ds(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Ds(n))return _s(e,n,t)}return t}function Gu(e,t,n,r,s,a,i,o,l){return(e=zu(n,r,!0,e,0,a,0,o,l)).context=Pu(null),n=e.current,(a=Qa(r=eu(),s=tu(n))).callback=void 0!==t&&null!==t?t:null,La(n,a,s),e.current.lanes=s,mt(e,s,r),ru(e,r),e}function Uu(e,t,n,r){var s=t.current,a=eu(),i=tu(s);return n=Pu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Qa(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=La(s,t,i))&&(nu(e,s,i,a),za(e,s,i)),i}function Wu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qu(e,t){Vu(e,t),(e=e.alternate)&&Vu(e,t)}wl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ns.current)bo=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return bo=!1,function(e,t,n){switch(t.tag){case 3:No(t),pa();break;case 5:Ja(t);break;case 1:Ds(t.type)&&Ms(t);break;case 4:ja(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,s=t.memoizedProps.value;Es(xa,r._currentValue),r._currentValue=s;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Es(Za,1&Za.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Oo(e,t,n):(Es(Za,1&Za.current),null!==(e=Wo(e,t,n))?e.sibling:null);Es(Za,1&Za.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Go(e,t,n);t.flags|=128}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null,s.lastEffect=null),Es(Za,Za.current),r)break;return null;case 22:case 23:return t.lanes=0,ko(e,t,n)}return Wo(e,t,n)}(e,t,n);bo=0!==(131072&e.flags)}else bo=!1,sa&&0!==(1048576&t.flags)&&Zs(t,qs,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Uo(e,t),e=t.pendingProps;var s=Rs(t,Ts.current);Na(t,n),s=fi(null,t,r,e,s,n);var i=gi();return t.flags|=1,"object"===typeof s&&null!==s&&"function"===typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ds(r)?(i=!0,Ms(t)):i=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Ma(t),s.updater=ro,t.stateNode=s,s._reactInternals=t,oo(t,r,e,n),t=To(null,t,r,!0,i,n)):(t.tag=0,sa&&i&&ea(t),vo(null,t,s,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Uo(e,t),e=t.pendingProps,r=(s=r._init)(r._payload),t.type=r,s=t.tag=function(e){if("function"===typeof e)return Du(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===T)return 11;if(e===R)return 14}return 2}(r),e=to(r,e),s){case 0:t=Eo(null,t,r,e,n);break e;case 1:t=So(null,t,r,e,n);break e;case 11:t=Io(null,t,r,e,n);break e;case 14:t=xo(null,t,r,to(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,s=t.pendingProps,Eo(e,t,r,s=t.elementType===r?s:to(r,s),n);case 1:return r=t.type,s=t.pendingProps,So(e,t,r,s=t.elementType===r?s:to(r,s),n);case 3:e:{if(No(t),null===e)throw Error(a(387));r=t.pendingProps,s=(i=t.memoizedState).element,Oa(e,t),Ga(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Bo(e,t,r,n,s=lo(Error(a(423)),t));break e}if(r!==s){t=Bo(e,t,r,n,s=lo(Error(a(424)),t));break e}for(ra=us(t.stateNode.containerInfo.firstChild),na=t,sa=!0,aa=null,n=Ia(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pa(),r===s){t=Wo(e,t,n);break e}vo(e,t,r,n)}t=t.child}return t;case 5:return Ja(t),null===e&&ua(t),r=t.type,s=t.pendingProps,i=null!==e?e.memoizedProps:null,o=s.children,ns(r,s)?o=null:null!==i&&ns(r,i)&&(t.flags|=32),Co(e,t),vo(e,t,o,n),t.child;case 6:return null===e&&ua(t),null;case 13:return Oo(e,t,n);case 4:return ja(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=va(t,null,r,n):vo(e,t,r,n),t.child;case 11:return r=t.type,s=t.pendingProps,Io(e,t,r,s=t.elementType===r?s:to(r,s),n);case 7:return vo(e,t,t.pendingProps,n),t.child;case 8:case 12:return vo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,s=t.pendingProps,i=t.memoizedProps,o=s.value,Es(xa,r._currentValue),r._currentValue=o,null!==i)if(or(i.value,o)){if(i.children===s.children&&!Ns.current){t=Wo(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){o=i.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===i.tag){(u=Qa(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Ta(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(a(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Ta(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}vo(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,r=t.pendingProps.children,Na(t,n),r=r(s=Ba(s)),t.flags|=1,vo(e,t,r,n),t.child;case 14:return s=to(r=t.type,t.pendingProps),xo(e,t,r,s=to(r.type,s),n);case 15:return wo(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:to(r,s),Uo(e,t),t.tag=1,Ds(r)?(e=!0,Ms(t)):e=!1,Na(t,n),ao(t,r,s),oo(t,r,s,n),To(null,t,r,!0,e,n);case 19:return Go(e,t,n);case 22:return ko(e,t,n)}throw Error(a(156,t.tag))};var Hu="function"===typeof reportError?reportError:function(e){console.error(e)};function Yu(e){this._internalRoot=e}function ju(e){this._internalRoot=e}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Ju(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xu(){}function Zu(e,t,n,r,s){var a=n._reactRootContainer;if(a){var i=a;if("function"===typeof s){var o=s;s=function(){var e=Wu(i);o.call(e)}}Uu(t,i,e,s)}else i=function(e,t,n,r,s){if(s){if("function"===typeof r){var a=r;r=function(){var e=Wu(i);a.call(e)}}var i=Gu(t,r,e,0,null,!1,0,"",Xu);return e._reactRootContainer=i,e[As]=i.current,Gr(8===e.nodeType?e.parentNode:e),cu(),i}for(;s=e.lastChild;)e.removeChild(s);if("function"===typeof r){var o=r;r=function(){var e=Wu(l);o.call(e)}}var l=zu(e,0,!1,null,0,!1,0,"",Xu);return e._reactRootContainer=l,e[As]=l.current,Gr(8===e.nodeType?e.parentNode:e),cu((function(){Uu(t,l,n,r)})),l}(n,t,e,s,r);return Wu(i)}ju.prototype.render=Yu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Uu(e,t,null,null)},ju.prototype.unmount=Yu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cu((function(){Uu(null,e,null,null)})),t[As]=null}},ju.prototype.unstable_scheduleHydration=function(e){if(e){var t=kt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&0!==t&&t<Ft[n].priority;n++);Ft.splice(n,0,e),0===n&&Ot(e)}},It=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(yt(t,1|n),ru(t,Je()),0===(6&Tl)&&(Gl=Je()+500,Gs()))}break;case 13:cu((function(){var t=$a(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),qu(e,1)}},xt=function(e){if(13===e.tag){var t=$a(e,134217728);if(null!==t)nu(t,e,134217728,eu());qu(e,134217728)}},wt=function(e){if(13===e.tag){var t=tu(e),n=$a(e,t);if(null!==n)nu(n,e,t,eu());qu(e,t)}},kt=function(){return bt},Ct=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},xe=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var s=Is(r);if(!s)throw Error(a(90));H(r),X(r,s)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Te=uu,Ne=cu;var ec={usingClientEntryPoint:!1,Events:[bs,vs,Is,Ee,Se,uu]},tc={findFiberByHostInstance:ys,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ve(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{st=rc.inject(nc),at=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ku(t))throw Error(a(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Ku(e))throw Error(a(299));var n=!1,r="",s=Hu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=zu(e,1,!1,null,0,n,0,r,s),e[As]=t.current,Gr(8===e.nodeType?e.parentNode:e),new Yu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=Ve(t))?null:e.stateNode},t.flushSync=function(e){return cu(e)},t.hydrate=function(e,t,n){if(!Ju(t))throw Error(a(200));return Zu(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ku(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,s=!1,i="",o=Hu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(s=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Gu(t,null,e,1,null!=n?n:null,s,0,i,o),e[As]=t.current,Gr(e),r)for(e=0;e<r.length;e++)s=(s=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,s]:t.mutableSourceEagerHydrationData.push(n,s);return new ju(t)},t.render=function(e,t,n){if(!Ju(t))throw Error(a(200));return Zu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ju(e))throw Error(a(40));return!!e._reactRootContainer&&(cu((function(){Zu(null,null,e,!1,(function(){e._reactRootContainer=null,e[As]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ju(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return Zu(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},373:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({atan2_:function(e,t){let n=(0,i.YT)(e,"a","atan2"),o=(0,i.YT)(t,"b","atan2");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.lxb,l)}})},379:(e,t,n)=>{"use strict";n.d(t,{Em:()=>u,SM:()=>o,WC:()=>l,WH:()=>s,aF:()=>a,fK:()=>d,gx:()=>c,lb:()=>i});var r=n(7738);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function i(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function l(e,t,n){r.vA(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},382:()=>{},399:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,a.YT)(e,"x","expandDims","string_or_numeric");i.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},l={dim:t};return r.T2.runKernel(s.ybN,o,l)}})},441:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({mod_:function(e,t){let n=(0,i.YT)(e,"a","mod"),o=(0,i.YT)(t,"b","mod");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.BLA,l)}})},457:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>h.B,tnl:()=>s.t,HQu:()=>a.H,FqL:()=>i.F,WQq:()=>o.W,QiD:()=>p,Q7R:()=>A.Q,bzn:()=>f.b,FLi:()=>g.F,XRg:()=>m.X,qRo:()=>y.q,yHs:()=>b.y,rYl:()=>v.r,FPz:()=>I.F,rfv:()=>x.r,$jT:()=>w.$,sub:()=>S,lZX:()=>$,$v7:()=>M.$,BFc:()=>O,kSi:()=>Q,T5N:()=>L,GTe:()=>_.G,HbZ:()=>z,vjT:()=>P,ftb:()=>nr,ROE:()=>G,hOW:()=>U.h,ra8:()=>W.r,wgE:()=>k.w,mkO:()=>V.m,zQh:()=>q.z,o8B:()=>H.o,faB:()=>Y.f,xWs:()=>T.x,I1m:()=>j,RPU:()=>K,O5O:()=>J,P1l:()=>X,kA9:()=>Z.k,Xtf:()=>ee.X,wX9:()=>te.w,IPL:()=>ne,jIJ:()=>se,gnS:()=>ae.g,yIG:()=>ie.y,_jP:()=>hr,Lp0:()=>oe.L,rCv:()=>le.r,aOp:()=>ue,Rj8:()=>ce.R,Gl3:()=>de.G,smy:()=>he,X7t:()=>pe.X,y4m:()=>Ae.y,ek5:()=>fe.e,Omf:()=>ge.O,EZY:()=>cr,_3C:()=>me,Pqc:()=>ye.P,FJY:()=>dr,QP2:()=>be,LCg:()=>ve.L,Y12:()=>Ie.Y,p4S:()=>xe.p,oNF:()=>we.o,UG6:()=>ke.U,IYd:()=>Ce.I,y5U:()=>Se,hVP:()=>In.h,GSj:()=>Te.G,RIf:()=>Ne.R,wh_:()=>Be.w,cZk:()=>r,kgh:()=>Re.k,SY9:()=>ur,rhj:()=>De.r,DQN:()=>Fe.D,KGM:()=>xn.K,ngS:()=>$e.n,Slp:()=>gs,U4u:()=>pr,ggX:()=>wn.g,MIs:()=>_e.M,EN4:()=>Me.E,yrW:()=>Oe.y,H8d:()=>Qe.H,M7h:()=>Le.M,InN:()=>ze.I,mPL:()=>ms,mT8:()=>Pe,Kgs:()=>Ge.K,Rm2:()=>Ue.R,Kko:()=>We.K,nqI:()=>Ve.n,HPB:()=>qe.H,VZ:()=>He.V,n76:()=>Ye.n,NSZ:()=>je.N,ztW:()=>Ke.z,rxB:()=>Je.r,YYh:()=>ys,yzS:()=>et,NoW:()=>N.N,T9B:()=>tt.T,jgi:()=>nt.j,NYV:()=>rt,RO:()=>st,PhQ:()=>at.P,i2o:()=>it.i,OYQ:()=>ut,jkA:()=>ct.j,BpO:()=>dt.B,FFZ:()=>ht.F,ziu:()=>pt.z,Clk:()=>mt,CRk:()=>ir,lKK:()=>B.l,YDF:()=>yt,OjQ:()=>bt,HZy:()=>vt.H,xbf:()=>sr.x,Ec:()=>It.E,Mw0:()=>xt.M,SaS:()=>ot.S,P61:()=>wt.P,op:()=>h.op,X4o:()=>kt,eVF:()=>Ct.e,BZs:()=>Et,grY:()=>St,XHu:()=>Tt,WLX:()=>Nt,dzn:()=>Bt.d,n7C:()=>Rt.n,NsG:()=>Dt.N,yyV:()=>Ft.y,_eU:()=>$t._,whe:()=>_t,iyU:()=>Mt,Q0_:()=>Ot,_9M:()=>Qt,pR9:()=>Ut,FE$:()=>Wt,m0H:()=>Vt,YeY:()=>qt,HYA:()=>Ht,y17:()=>Yt,xav:()=>jt.x,VOZ:()=>Kt.V,VVh:()=>Jt.V,j__:()=>Xt.j,tQQ:()=>E.t,BEg:()=>Zt.B,QD2:()=>en,LMr:()=>tn,I2l:()=>nn,JYU:()=>rn,z8$:()=>kn.z,LIG:()=>sn.L,Z$r:()=>an.Z,d_2:()=>on.d,NFr:()=>or,sZg:()=>Ze,WfX:()=>ln.W,wdz:()=>un.w,F12:()=>cn,ry7:()=>R.r,_SZ:()=>dn._,vPA:()=>fs,F8e:()=>hn.F,L0l:()=>pn.L,dik:()=>D.d,Q$M:()=>An,zAd:()=>fn,wck:()=>gn,R0O:()=>mn,Vs9:()=>yn.V,lw0:()=>bn.l,eDJ:()=>vn.e,lMo:()=>bs,Zhr:()=>lr,lOn:()=>As,lDo:()=>Cn.l,RZD:()=>En.R,EwI:()=>ft.E,Pbu:()=>Sn.P,r2V:()=>Tn.r,t$z:()=>Nn.t,PMw:()=>Bn.P,Ym9:()=>Rn.Y,YjP:()=>vs,jbE:()=>gt.j,czq:()=>Dn.c,Mlm:()=>Fn.M,ymU:()=>F.y,OEK:()=>$n.O,tGX:()=>Mn,KtR:()=>On,$_$:()=>Qn.$,g9W:()=>Ln,Lpo:()=>zn,yxw:()=>Pn,NNh:()=>Un,Vsq:()=>Ee.V,rfw:()=>Wn.r,mgz:()=>rr.m,efE:()=>Vn,AmM:()=>qn.A,zAU:()=>Hn.z,K$i:()=>Yn.K,rni:()=>jn,bvq:()=>Kn,_M9:()=>Jn._,YJN:()=>Zn,Ul9:()=>er.U,POl:()=>tr.P});var r={};n.r(r),n.d(r,{conv2d:()=>br,depthwiseConv2d:()=>xr,matMul:()=>wr});var s=n(9633),a=n(8671),i=n(5631),o=n(1410),l=n(5964),u=n(1146),c=n(5836),d=n(7738),h=n(2732);const p=(0,h.op)({addN_:function(e){d.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.vA(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return l.T2.runKernel(u.EkD,r)}});var A=n(1698),f=n(3459),g=n(8964),m=n(6026),y=n(7402),b=n(3112),v=n(883),I=n(373),x=n(6491),w=n(1666),k=n(3098),C=n(714),E=n(3943);const S=(0,h.op)({avgPool3d_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=(0,c.YT)(e,"x","avgPool3d","float32");let o=i,h=!1;4===i.rank&&(h=!0,o=(0,E.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),d.vA("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,C.s_)("avgPool3d",r,s);const p={x:o},A={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let f=l.T2.runKernel(u.cS,p,A);return f=(0,k.w)(f,o.dtype),h?(0,E.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});var T=n(6949),N=n(2994),B=n(667),R=n(6845),D=n(4039),F=n(844);const $=(0,h.op)({basicLSTMCell_:function(e,t,n,r,s,a){const i=(0,c.YT)(e,"forgetBias","basicLSTMCell"),l=(0,c.YT)(t,"lstmKernel","basicLSTMCell"),u=(0,c.YT)(n,"lstmBias","basicLSTMCell"),d=(0,c.YT)(r,"data","basicLSTMCell"),h=(0,c.YT)(s,"c","basicLSTMCell"),p=(0,c.YT)(a,"h","basicLSTMCell"),A=(0,T.x)([d,p],1),f=(0,N.N)(A,l),g=(0,o.W)(f,u),m=g.shape[0],y=g.shape[1]/4,b=[m,y],v=(0,D.d)(g,[0,0],b),I=(0,D.d)(g,[0,y],b),x=(0,D.d)(g,[0,2*y],b),w=(0,D.d)(g,[0,3*y],b),k=(0,o.W)((0,B.l)((0,R.r)(v),(0,F.y)(I)),(0,B.l)(h,(0,R.r)((0,o.W)(i,x))));return[k,(0,B.l)((0,F.y)(k),(0,R.r)(w))]}});var _=n(6485),M=n(1245);const O=(0,h.op)({batchNorm2d_:function(e,t,n,r,s,a){const i=(0,c.YT)(e,"x","batchNorm"),o=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,h;return null!=s&&(u=(0,c.YT)(s,"scale","batchNorm")),null!=r&&(h=(0,c.YT)(r,"offset","batchNorm")),d.vA(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),d.vA(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),d.vA(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=h&&d.vA(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),(0,M.$)(i,o,l,h,u,a)}});const Q=(0,h.op)({batchNorm3d_:function(e,t,n,r,s,a){const i=(0,c.YT)(e,"x","batchNorm"),o=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,h;return null!=s&&(u=(0,c.YT)(s,"scale","batchNorm")),null!=r&&(h=(0,c.YT)(r,"offset","batchNorm")),d.vA(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),d.vA(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),d.vA(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=h&&d.vA(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),(0,M.$)(i,o,l,h,u,a)}});const L=(0,h.op)({batchNorm4d_:function(e,t,n,r,s,a){const i=(0,c.YT)(e,"x","batchNorm"),o=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,h;return null!=s&&(u=(0,c.YT)(s,"scale","batchNorm")),null!=r&&(h=(0,c.YT)(r,"offset","batchNorm")),d.vA(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),d.vA(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),d.vA(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=h&&d.vA(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),(0,M.$)(i,o,l,h,u,a)}});const z=(0,h.op)({bincount_:function(e,t,n){const r=(0,c.YT)(e,"x","bincount"),s=(0,c.YT)(t,"weights","bincount");d.vA("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return l.T2.runKernel(u.N4F,a,i)}});const P=(0,h.op)({bitwiseAnd_:function(e,t){const n=(0,c.YT)(e,"x","bitwiseAnd"),r=(0,c.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return l.T2.runKernel(u.HNs,s)}});const G=(0,h.op)({broadcastArgs_:function(e,t){const n=(0,c.YT)(e,"s0","broadcastArgs","int32"),r=(0,c.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return l.T2.runKernel(u.vj7,s)}});var U=n(5408),W=n(8603),V=n(2108),q=n(1101),H=n(1012),Y=n(8333);const j=(0,h.op)({concat1d_:function(e){return(0,T.x)(e,0)}});const K=(0,h.op)({concat2d_:function(e,t){return(0,T.x)(e,t)}});const J=(0,h.op)({concat3d_:function(e,t){return(0,T.x)(e,t)}});const X=(0,h.op)({concat4d_:function(e,t){return(0,T.x)(e,t)}});var Z=n(8278),ee=n(1489),te=n(537);const ne=(0,h.op)({conv3d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=(0,c.YT)(e,"x","conv3d"),o=(0,c.YT)(t,"filter","conv3d");let h=i,p=!1;4===i.rank&&(p=!0,h=(0,E.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===h.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${h.rank}.`)),d.vA(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),d.vA(h.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${h.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),d.vA((0,C.G0)(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),d.vA("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),d.vA((0,C.qk)(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.vA((0,C.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const A={x:h,filter:o},f={strides:n,pad:r,dataFormat:s,dilations:a},g=l.T2.runKernel(u.A1h,A,f);return p?(0,E.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var re=n(6418);const se=(0,h.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,c.YT)(e,"x","conv3dTranspose"),i=(0,c.YT)(t,"filter","conv3dTranspose");return(0,re.c)(n,a,i,r,s)}});var ae=n(7694),ie=n(4916),oe=n(4451),le=n(3159);const ue=(0,h.op)({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,c.YT)(e,"x","denseBincount"),a=(0,c.YT)(t,"weights","denseBincount");d.vA("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),d.vA(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return l.T2.runKernel(u.wNW,i,o)}});var ce=n(2815),de=n(1763);const he=(0,h.op)({diag_:function(e){const t={x:(0,c.YT)(e,"x","diag")};return l.T2.runKernel(u.ORI,t)}});var pe=n(6757),Ae=n(470),fe=n(3764),ge=n(8154);const me=(0,h.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const s=n.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"einsum"))),a={equation:e};return l.T2.runKernel(u.Qgm,s,a)}});var ye=n(5333);const be=(0,h.op)({ensureShape_:function(e,t){const n=(0,c.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var ve=n(8025),Ie=n(178),xe=n(3218),we=n(6782),ke=n(399),Ce=n(4400),Ee=n(4481);const Se=(0,h.op)({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const s=(0,W.r)([e,t],r),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=(0,E.t)(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,Ee.V)((0,ke.U)(i,0),[n[0],1,1]);if(2===n.length)return(0,Ee.V)((0,ke.U)((0,ke.U)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ee.V)((0,ke.U)((0,ke.U)((0,ke.U)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Te=n(2140),Ne=n(4243),Be=n(9188),Re=n(6186),De=n(2783),Fe=n(8404),$e=n(7359),_e=n(2987),Me=n(8013),Oe=n(2883),Qe=n(9588),Le=n(8200),ze=n(8819);function Pe(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return l.T2.runKernel(u.mnI,{},r)}var Ge=n(2688),Ue=n(815),We=n(5730),Ve=n(7520),qe=n(4402),He=n(2855),Ye=n(8372),je=n(5656),Ke=n(24),Je=n(1412);const Xe=2147483648;const Ze=(0,h.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=(0,c.YT)(e,"sortedSequence","searchSorted"),s=(0,c.YT)(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=(0,E.t)(r,[-1,a]),h=(0,E.t)(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(h.shape)>=Xe)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=Xe)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const p={sortedSequence:o,values:h},A={side:n};return l.T2.runKernel(u.uWl,p,A)}});function et(e,t){return Ze(e,t,"left")}var tt=n(2947),nt=n(1236);const rt=(0,h.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=(0,c.YT)(e,"x","maxPool3d");let o=i,h=!1;4===i.rank&&(h=!0,o=(0,E.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),d.vA("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),(0,C.s_)("maxPool3d",r,s);const p={x:o},A={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},f=l.T2.runKernel(u.ySp,p,A);return h?(0,E.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});const st=(0,h.op)({maxPoolWithArgmax_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const a={x:(0,c.YT)(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=l.T2.runKernel(u.TL8,a,i);return{result:o[0],indexes:o[1]}}});var at=n(9115),it=n(4956),ot=n(5632),lt=n(206);function ut(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,c.YT)(e,"x","meshgrid",e instanceof lt.qY?e.dtype:"float32");if(void 0===t)return[r];let s=(0,c.YT)(t,"y","meshgrid",t instanceof lt.qY?t.dtype:"float32");const a=(0,d.Ze)(r.shape),i=(0,d.Ze)(s.shape);return"xy"===n?(r=(0,E.t)(r,[1,-1]),s=(0,E.t)(s,[-1,1]),[(0,N.N)((0,ot.S)([i,1],r.dtype),r),(0,N.N)(s,(0,ot.S)([1,a],s.dtype))]):(r=(0,E.t)(r,[-1,1]),s=(0,E.t)(s,[1,-1]),[(0,N.N)(r,(0,ot.S)([1,i],r.dtype)),(0,N.N)((0,ot.S)([a,1],s.dtype),s)])}var ct=n(9121),dt=n(5225),ht=n(5940),pt=n(441),At=n(379),ft=n(4018),gt=n(2583);const mt=(0,h.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,c.YT)(e,"x","moments");const r=(0,d.Y6)(t,e.shape),s=(0,it.i)(e,r,n);let a=s.shape;n||(a=(0,At.SM)(s.shape,r));const i=(0,ft.E)((0,gt.j)((0,k.w)(e,"float32"),(0,E.t)(s,a)));return{mean:s,variance:(0,it.i)(i,r,n)}}});const yt=(0,h.op)({multiRNNCell_:function(e,t,n,r){const s=(0,c.YT)(t,"data","multiRNNCell"),a=(0,c.j1)(n,"c","multiRNNCell"),i=(0,c.j1)(r,"h","multiRNNCell");let o=s;const l=[];for(let c=0;c<e.length;c++){const t=e[c](o,a[c],i[c]);l.push(t[0]),l.push(t[1]),o=t[1]}const u=[],d=[];for(let c=0;c<l.length;c+=2)u.push(l[c]),d.push(l[c+1]);return[u,d]}});const bt=(0,h.op)({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,c.YT)(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?(0,E.t)(s,[1,-1]):s},d={numSamples:t,seed:n,normalized:r},h=l.T2.runKernel(u.WT3,o,d);return 1===i?(0,E.t)(h,[h.size]):h}});var vt=n(1835),It=n(1727),xt=n(6649),wt=n(9260);const kt=(0,h.op)({outerProduct_:function(e,t){const n=(0,c.YT)(e,"v1","outerProduct"),r=(0,c.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=(0,E.t)(n,[-1,1]),a=(0,E.t)(r,[1,-1]);return(0,N.N)(s,a)}});var Ct=n(4096);const Et=(0,h.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Ct.e)(e,[t],n)}});const St=(0,h.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ct.e)(e,t,n)}});const Tt=(0,h.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ct.e)(e,t,n)}});const Nt=(0,h.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ct.e)(e,t,n)}});var Bt=n(2383),Rt=n(731),Dt=n(9367),Ft=n(3942),$t=n(172);const _t=(0,h.op)({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,c.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,c.YT)(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=l.T2.runKernel(u.oJ2,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});const Mt=(0,h.op)({raggedRange_:function(e,t,n){const r=(0,c.YT)(e,"starts","raggedRange"),s={starts:r,limits:(0,c.YT)(t,"limits","raggedRange",r.dtype),deltas:(0,c.YT)(n,"deltas","raggedRange",r.dtype)},a=l.T2.runKernel(u.CQC,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}});const Ot=(0,h.op)({raggedTensorToTensor_:function(e,t,n,r,s){const a=(0,c.YT)(e,"shape","raggedTensorToTensor","int32"),i=(0,c.YT)(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:(0,c.YT)(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},d={rowPartitionTypes:s};return l.T2.runKernel(u.mH5,o,d)}});const Qt=(0,h.op)({rand_:function(e,t,n){(0,d.SA)(e);const r=(0,d.Ze)(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return l.T2.makeTensor(s,e,n)}});var Lt=n(8726);class zt{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Lt.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Pt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Lt.alea(s.toString()),this.randn=new zt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Gt{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Lt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ut=(0,h.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Pt(t,n,r,s),i=(0,W.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Wt=(0,h.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new zt(t,n,r,!1,s),i=(0,W.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Vt=(0,h.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Wt(e,0,1,t,n)}});const qt=(0,h.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const a=(0,W.r)(e,r),i=new Gt(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const Ht=(0,h.op)({randomUniformInt_:function(e,t,n,r){return qt(e,t,n,"int32",r)}});function Yt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return l.T2.runKernel(u.Q6t,{},s)}var jt=n(5645),Kt=n(9725),Jt=n(4923),Xt=n(9441),Zt=n(5443);const en=(0,h.op)({reverse1d_:function(e){const t=(0,c.YT)(e,"x","reverse");return d.vA(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Zt.B)(t,0)}});const tn=(0,h.op)({reverse2d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Zt.B)(n,t)}});const nn=(0,h.op)({reverse3d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Zt.B)(n,t)}});const rn=(0,h.op)({reverse4d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Zt.B)(n,t)}});var sn=n(2613),an=n(5009),on=n(8965),ln=n(7550),un=n(7381);const cn=async function(e,t){const n=(0,c.YT)(e,"x","setdiff1d"),r=(0,c.YT)(t,"y","setdiff1d");d.vA(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),d.vA(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),d.vA(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let c=0;c<s.length;c++)i.has(s[c])||o++;const l=new lt.yl([o],n.dtype),u=new lt.yl([o],"int32");for(let c=0,d=0;c<s.length;c++)i.has(s[c])||(l.values[d]=s[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]};var dn=n(6756),hn=n(6631),pn=n(8903);const An=(0,h.op)({slice1d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice1d");return d.vA(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,D.d)(r,[t],[n])}});const fn=(0,h.op)({slice2d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice2d");return d.vA(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,D.d)(r,t,n)}});const gn=(0,h.op)({slice3d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice3d");return d.vA(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,D.d)(r,t,n)}});const mn=(0,h.op)({slice4d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice4d");return d.vA(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,D.d)(r,t,n)}});var yn=n(4295),bn=n(4477),vn=n(7657),In=n(2094),xn=n(725),wn=n(4787),kn=n(3846),Cn=n(2885),En=n(4551),Sn=n(3032),Tn=n(3901),Nn=n(9165),Bn=n(903),Rn=n(5031),Dn=n(1710),Fn=n(4438),$n=n(4904),_n=n(6658);function Mn(e,t){(0,d.HO)(e);const n=(0,c.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,_n.Q)(e,null,n,t)}function On(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,c.MZ)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,_n.Q)(e,t,r,n)}var Qn=n(9851);function Ln(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,c.MZ)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,_n.Q)(e,t,r,n)}function zn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,c.MZ)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,_n.Q)(e,t,r,n)}function Pn(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,c.MZ)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,_n.Q)(e,t,r,n)}var Gn=n(7195);const Un=(0,h.op)({tensorScatterUpdate_:function(e,t,n){const r=(0,c.YT)(e,"tensor","tensorScatterupdate"),s=(0,c.YT)(t,"indices","tensorScatterupdate","int32"),a=(0,c.YT)(n,"updates","tensorScatterupdate");if(Gn.validateInput(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return l.T2.runKernel(u.X4r,i,{})}});var Wn=n(1461);const Vn=(0,h.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new zt(t,n,r,!0,s),i=(0,W.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});var qn=n(4454),Hn=n(7733),Yn=n(1240);function jn(e,t){return Ze(e,t,"right")}function Kn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return l.T2.makeVariable(e,t,n,r)}var Jn=n(4090),Xn=n(9742);const Zn=async function(e){const t=(0,c.YT)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,Xn.Y)(t.shape,n);return e!==t&&t.dispose(),r};var er=n(4098),tr=n(6834);const nr=async function(e,t,n){const r=(0,c.YT)(e,"tensor","boolMask"),s=(0,c.YT)(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;d.vA(i>0,(()=>"mask cannot be scalar")),d.O3(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let c=a;c<a+i;c++)l*=o[c];const u=o.slice(0,a).concat([l],o.slice(a+i)),h=(0,E.t)(r,u),p=(0,E.t)(s,[-1]),A=await Zn(p),f=(0,Tn.r)(A,[1]),g=(0,Re.k)(h,f,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),f.dispose(),h.dispose(),p.dispose(),A.dispose(),g};var rr=n(5970),sr=n(8227),ar=n(5116);const ir=(0,h.op)({movingAverage_:function(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const a=(0,c.YT)(e,"v","movingAverage"),i=(0,c.YT)(t,"x","movingAverage"),l=(0,c.YT)(n,"decay","movingAverage");(0,ar.assertTypesMatch)(a,i),d.vA(d.r1(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=(0,on.d)(1),h=(0,gt.j)(u,l);let p=(0,B.l)((0,gt.j)(i,a),h);if(s){d.vA(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,c.YT)(r,"step","movingAverage");p=(0,Ae.y)(p,(0,gt.j)(u,(0,Rt.n)(l,e)))}return(0,o.W)(a,p)}});const or=(0,h.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const r=(0,c.YT)(e,"indices","scatterND","int32"),s=(0,c.YT)(t,"updates","scatterND");Gn.validateInput(s,r,n);const a={indices:r,updates:s},i={shape:n};return l.T2.runKernel(u.pJc,a,i)}});const lr=(0,h.op)({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const s=(0,c.YT)(e,"sparseIndices","sparseToDense","int32"),a=(0,c.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),i=(0,c.YT)(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},h={outputShape:n};return l.T2.runKernel(u.jgd,o,h)}});const ur=(0,h.op)({gatherND_:function(e,t){const n=(0,c.YT)(t,"indices","gatherND","int32"),r={params:(0,c.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return l.T2.runKernel(u.O4G,r)}});const cr=(0,h.op)({dropout_:function(e,t,n,r){const s=(0,c.YT)(e,"x","dropout");if(d.vA("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),d.vA(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof lt.qY?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,l=(0,Ae.y)((0,Ne.R)((0,o.W)(qt(a,0,1,"float32",r),i)),i);return(0,B.l)(s,l)}});function dr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hr(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Mn(s,"float32")}const pr=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=(0,c.YT)(e,"predictions","inTopK"),s=(0,c.YT)(t,"targets","inTopK");(0,d.vA)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,d.vA)(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),(0,d.O3)(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];(0,d.vA)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[l,u]=[i.length/a,a],h=(0,d.ce)("bool",l);for(let c=0;c<l;c++){const e=c*u,t=i.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),h[c]=0;for(let s=0;s<n;s++)if(r[s].index===o[c]){h[c]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),(0,$n.O)(h,s.shape,"bool")};var Ar=n(5431),fr=n(2701),gr=n(5191),mr=n(7205),yr=n(3193);const br=(0,h.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:h,bias:p,activation:A="linear",preluActivationWeights:f,leakyreluAlpha:g}=e;if(A=A||"linear",!1===(0,yr.zE)(l.T2.state.gradientDepth,A)){d.vA("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=(0,ee.X)(t,n,r,s,a,i,h);return null!=p&&(e=(0,o.W)(e,p)),(0,yr.f2)(e,A,f,g)}const m=(0,c.YT)(t,"x","conv2d","float32"),y=(0,c.YT)(n,"filter","conv2d","float32");let b=m,v=!1;3===m.rank&&(v=!0,b=(0,E.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),d.vA(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),d.vA(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),C.s_("fused conv2d",s,h);const I="NHWC"===a?b.shape[3]:b.shape[1];d.vA(y.shape[2]===I,(()=>`Error in conv2d: depth of input (${I}) must match input depth for filter ${y.shape[2]}.`)),d.vA(C.G0(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`));const x=C.uf(b.shape,y.shape,r,i,s,h);let w,k;if(null!=p&&(w=(0,c.YT)(p,"bias","fused conv2d"),[w]=(0,ar.makeTypesMatch)(w,m),"NHWC"===a?fr.assertAndGetBroadcastShape(x.outShape,w.shape):(d.vA(w.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${w.shape.length}.`)),d.vA(0===w.shape.length||w.shape[0]===x.outChannels||1===w.shape[0],(()=>`Error in fused conv2d: bias shape (${w.shape}) is not compatible with the number of output channels (${x.outChannels})`)))),null!=f){const e=f.shape;if(d.vA(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)d.vA(1===e[0]||e[0]===x.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${x.outChannels}).`));else if(3===e.length)try{fr.assertAndGetBroadcastShape(e,x.outShape)}catch(B){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(t)}k=(0,c.YT)(f,"prelu weights","fused conv2d")}const S=(e,t)=>{d.vA("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[n,o,l,u]=t,c=(0,yr.XB)(e,l,A);d.vA(C.Dh(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[(0,mr.v)(o.shape,c,n,r,s),(0,gr.H)(o,c,n.shape,r,s)];if(null!=u){const e=(0,yr.Do)(u,c);h.push(e)}return h},T={x:b,filter:y,bias:w,preluActivationWeights:k},N={strides:r,pad:s,dataFormat:a,dilations:i,dimRoundingMode:h,activation:A,leakyreluAlpha:g};if(null==p){const e=(0,Ar._X)(((e,t,n)=>{let r=l.T2.runKernel(u.aAr,T,N);return n([t,e,r]),v&&(r=(0,E.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}));return e(b,y)}{const e=(0,Ar._X)(((e,t,n,r)=>{let s=l.T2.runKernel(u.aAr,T,N);return r([t,e,s,n]),v&&(s=(0,E.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return e(b,y,w)}}});var vr=n(4047),Ir=n(8685);const xr=(0,h.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:h,bias:p,activation:A="linear",preluActivationWeights:f,leakyreluAlpha:g}=e;if(!1===(0,yr.zE)(l.T2.state.gradientDepth,A)){let e=(0,de.G)(t,n,r,s,a,i,h);return null!=p&&(e=(0,o.W)(e,p)),(0,yr.f2)(e,A,f,g)}const m=(0,c.YT)(t,"x","depthwiseConv2d","float32"),y=(0,c.YT)(n,"filter","depthwiseConv2d","float32");let b=m,v=!1;3===m.rank&&(v=!0,b=(0,E.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),d.vA(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),d.vA(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),d.vA(b.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==i&&(i=[1,1]),d.vA(C.G0(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),C.s_("fused depthwiseConv2d",s,h);const I=C.uf(b.shape,y.shape,r,i,s,h,!0);let x,w;null!=p&&(x=(0,c.YT)(p,"bias","fused conv2d"),[x]=(0,ar.makeTypesMatch)(x,m),fr.assertAndGetBroadcastShape(I.outShape,x.shape)),null!=f&&(w=(0,c.YT)(f,"prelu weights","fused depthwiseConv2d"));const k=(e,t)=>{d.vA(C.Dh(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,a,o,l]=t,u=(0,yr.XB)(e,o,A),c=(0,Ir.l)(a.shape,u,n,r,s,i,h),p=(0,vr.x)(a,u,n.shape,r,s,i,h);if(null!=l){return[c,p,(0,yr.Do)(x,u)]}return[c,p]},S={x:b,filter:y,bias:x,preluActivationWeights:w},T={strides:r,pad:s,dataFormat:a,dilations:i,dimRoundingMode:h,activation:A,leakyreluAlpha:g};if(null==p){const e=(0,Ar._X)(((e,t,n)=>{let r=l.T2.runKernel(u.T7M,S,T);return n([t,e,r]),v&&(r=(0,E.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}}));return e(b,y)}{const e=(0,Ar._X)(((e,t,n,r)=>{let s=l.T2.runKernel(u.T7M,S,T);return r([t,e,s,n]),v&&(s=(0,E.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}}));return e(b,y,x)}}});const wr=(0,h.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:s=!1,bias:a,activation:i="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===(0,yr.zE)(l.T2.state.gradientDepth,i)){let e=(0,N.N)(t,n,r,s);return null!=a&&(e=(0,o.W)(e,a)),(0,yr.f2)(e,i,h,p)}let A=(0,c.YT)(t,"a","fused matMul"),f=(0,c.YT)(n,"b","fused matMul");[A,f]=(0,ar.makeTypesMatch)(A,f);const g=r?A.shape[A.rank-2]:A.shape[A.rank-1],m=s?f.shape[f.rank-1]:f.shape[f.rank-2],y=r?A.shape[A.rank-1]:A.shape[A.rank-2],b=s?f.shape[f.rank-2]:f.shape[f.rank-1],v=A.shape.slice(0,-2),I=f.shape.slice(0,-2),x=d.Ze(v),w=d.Ze(I);d.vA(g===m,(()=>`Error in fused matMul: inner shapes (${g}) and (${m}) of Tensors with shapes ${A.shape} and ${f.shape} and transposeA=${r} and transposeB=${s} must match.`));const k=fr.assertAndGetBroadcastShape(A.shape.slice(0,-2),f.shape.slice(0,-2)).concat([y,b]),C=r?(0,E.t)(A,[x,g,y]):(0,E.t)(A,[x,y,g]),S=s?(0,E.t)(f,[w,b,m]):(0,E.t)(f,[w,m,b]);let T,B;null!=a&&(T=(0,c.YT)(a,"bias","fused matMul"),[T]=(0,ar.makeTypesMatch)(T,A),fr.assertAndGetBroadcastShape(k,T.shape)),null!=h&&(B=(0,c.YT)(h,"prelu weights","fused matMul"));const R=(e,t)=>{const[n,o,l,u]=t,c=(0,yr.XB)((0,E.t)(e,l.shape),l,i);let d,h;if(r||s?!r&&s?(d=(0,N.N)(c,o,!1,!1),h=(0,N.N)(c,n,!0,!1)):r&&!s?(d=(0,N.N)(o,c,!1,!0),h=(0,N.N)(n,c,!1,!1)):(d=(0,N.N)(o,c,!0,!0),h=(0,N.N)(c,n,!0,!0)):(d=(0,N.N)(c,o,!1,!0),h=(0,N.N)(n,c,!0,!1)),null!=a){return[d,h,(0,yr.Do)(u,c)]}return[d,h]},D={a:C,b:S,bias:T,preluActivationWeights:B},F={transposeA:r,transposeB:s,activation:i,leakyreluAlpha:p};if(null==a){const e=(0,Ar._X)(((e,t,n)=>{const r=l.T2.runKernel(u.Dr,D,F);return n([e,t,r]),{value:(0,E.t)(r,k),gradFunc:R}}));return e(C,S)}{const e=(0,Ar._X)(((e,t,n,r)=>{const s=l.T2.runKernel(u.Dr,D,F);return r([e,t,s,n]),{value:(0,E.t)(s,k),gradFunc:R}}));return e(C,S,T)}}});const kr=(0,h.op)({hammingWindow_:function(e){return hr(e,.54,.46)}});const Cr=(0,h.op)({hannWindow_:function(e){return hr(e,.5,.5)}});const Er=(0,h.op)({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=0;const i=[];for(;a+t<=e.size;)i.push((0,D.d)(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=(0,T.x)([(0,D.d)(e,a,t-r),(0,Te.G)([r],s)]);i.push(o),a+=n}return 0===i.length?On([],[0,t]):(0,E.t)((0,T.x)(i),[i.length,t])}});const Sr=(0,h.op)({stft_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Cr;null==r&&(r=dr(t));const a=Er(e,t,n),i=(0,B.l)(a,s(t));return(0,kn.z)(i,r)}});const Tr=(0,h.op)({cropAndResize_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=(0,c.YT)(e,"image","cropAndResize"),o=(0,c.YT)(t,"boxes","cropAndResize","float32"),h=(0,c.YT)(n,"boxInd","cropAndResize","int32"),p=o.shape[0];d.vA(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),d.vA(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${o.shape}.`)),d.vA(1===h.rank&&h.shape[0]===p,(()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${o.shape}.`)),d.vA(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d.vA(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d.vA("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const A={image:i,boxes:o,boxInd:h},f={method:s,extrapolationValue:a,cropSize:r};return l.T2.runKernel(u.MRQ,A,f)}});const Nr=(0,h.op)({flipLeftRight_:function(e){const t=(0,c.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return l.T2.runKernel(u.BxF,n,{})}});const Br=(0,h.op)({grayscaleToRGB_:function(e){const t=(0,c.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,(0,Ee.V)(t,s)}});const Rr=(0,h.op)({rgbToGrayscale_:function(e){const t=(0,c.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=(0,k.w)(t,"float32"),i=Mn([.2989,.587,.114]);let o;switch(t.rank){case 2:o=me("ij,j->i",a,i);break;case 3:o=me("ijk,k->ij",a,i);break;case 4:o=me("ijkl,l->ijk",a,i);break;case 5:o=me("ijklm,m->ijkl",a,i);break;case 6:o=me("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=(0,ke.U)(o,-1),(0,k.w)(o,s)}});const Dr=(0,h.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,c.YT)(e,"image","rotateWithOffset","float32");d.vA(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return l.T2.runKernel(u.BK4,a,i)}});function Fr(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),d.vA(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d.vA(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),d.vA(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),d.vA(1===t.rank,(()=>"scores must be a 1D tensor")),d.vA(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),d.vA(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const $r=(0,h.op)({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=(0,c.YT)(e,"boxes","nonMaxSuppression","float32"),i=(0,c.YT)(t,"scores","nonMaxSuppression","float32"),o=Fr(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const d={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return l.T2.runKernel(u.SDM,{boxes:a,scores:i},d)}});var _r=n(4188);const Mr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),o=Fr(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h}=(0,_r.c7)(u,d,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Mn(h,"int32")};const Or=(0,h.op)({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=(0,c.YT)(e,"boxes","nonMaxSuppression"),o=(0,c.YT)(t,"scores","nonMaxSuppression"),d=Fr(i,o,n,r,s,a);n=d.maxOutputSize,r=d.iouThreshold,s=d.scoreThreshold,a=d.softNmsSigma;const h={boxes:i,scores:o},p={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},A=l.T2.runKernel(u.e0f,h,p);return{selectedIndices:A[0],selectedScores:A[1]}}});const Qr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),l=Fr(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),d=u[0],h=u[1],{selectedIndices:p,selectedScores:A}=(0,_r.ut)(d,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Mn(p,"int32"),selectedScores:Mn(A)}};const Lr=(0,h.op)({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,c.YT)(e,"boxes","nonMaxSuppression"),o=(0,c.YT)(t,"scores","nonMaxSuppression"),d=Fr(i,o,n,r,s,null),h={boxes:i,scores:o},p={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:a},A=l.T2.runKernel(u.Zl4,h,p);return{selectedIndices:A[0],validOutputs:A[1]}}});const zr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),l=Fr(i,o,n,r,s,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[p,A]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:g}=(0,_r.ZS)(p,A,u,d,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Mn(f,"int32"),validOutputs:(0,on.d)(g,"int32")}};var Pr=n(3054),Gr=n(6927);const Ur=(0,h.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,c.YT)(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,l,u,h,p=(0,B.l)(Mn([r]),255);if(d.vA(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),d.vA(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),d.vA("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),d.vA("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,l,u]=(0,Cn.l)(s,[1,1,1],-1);const e=(0,B.l)(i,.2989),t=(0,B.l)(l,.587),n=(0,B.l)(u,.114);h=(0,o.W)((0,o.W)(e,t),n)}else h=e;if("otsu"===t){p=function(e,t){let n,r,s,a,i,l,u=Mn([-1]),c=Mn([0]),d=Mn([0]);for(let h=0;h<e.size-1;h++){n=(0,D.d)(e,0,h+1),r=(0,D.d)(e,h+1),i=(0,Ae.y)((0,Dn.c)(n),t),l=(0,Ae.y)((0,Dn.c)(r),t);const p=(0,Dn.c)((0,B.l)(n,Yt(0,n.size)));s=(0,Ae.y)(p,(0,Dn.c)(n));const A=(0,Te.G)(r.shape,n.size),f=(0,o.W)(Yt(0,r.size),A),g=(0,B.l)(r,f);a=(0,Ae.y)((0,Dn.c)(g),(0,Dn.c)(r));const m=(0,gt.j)(s,a),y=(0,gt.j)(s,a),b=(0,B.l)(i,l);d=(0,B.l)((0,B.l)(b,m),y);const v=(0,De.r)(d,c);c=(0,Jn._)(v,d,c),u=(0,Jn._)(v,Mn([h]),u)}return u}(z((0,k.w)((0,sn.L)(h),"int32"),(0,$n.O)([]),256),a)}const A=n?(0,ze.I)(h,p):(0,De.r)(h,p);return(0,k.w)((0,B.l)(A,255),"int32")}});const Wr=(0,h.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5?arguments[5]:void 0;const i=(0,c.YT)(e,"image","transform","float32"),o=(0,c.YT)(t,"transforms","transform","float32");d.vA(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),d.vA(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.vA(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const h={image:i,transforms:o},p={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return l.T2.runKernel(u.dLy,h,p)}});const Vr=(0,h.op)({bandPart_:function(e,t,n){const r=(0,c.YT)(e,"a","bandPart");(0,d.vA)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,l;"number"===typeof t?((0,d.vA)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,d.vA)(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=(0,c.YT)(t<0?a:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=(0,Jn._)((0,Le.M)(t,0),a,(0,dt.B)(t,a))),"number"===typeof n?((0,d.vA)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,d.vA)(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=(0,c.YT)(n<0?i:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=(0,Jn._)((0,Le.M)(n,0),i,(0,dt.B)(n,i)));const u=(0,E.t)(Yt(0,a,1,"int32"),[-1,1]),h=Yt(0,i,1,"int32"),p=(0,gt.j)(u,h),A=(0,Ye.n)((0,ze.I)(p,o),(0,Fe.D)(p,(0,vt.H)(l))),f=(0,er.U)([a,i],r.dtype);return(0,E.t)((0,Nn.t)((0,Yn.K)((0,E.t)(r,[-1,a,i])).map((e=>(0,Jn._)(A,e,f)))),s)}});const qr=(0,h.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Cn.l)(e,e.shape[0],0).map((e=>(0,Tn.r)(e,[0])));(0,d.vA)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(l.T2.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=(0,B.l)((0,Dn.c)((0,B.l)(n[t],e)),n[t]);e=(0,gt.j)(e,r)}return(0,Ae.y)(e,(0,sr.x)(e,"euclidean"))})));return t?(0,Nn.t)(n,0):n}});var Hr=n(5462);function Yr(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return l.T2.tidy((()=>{(0,d.vA)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Se(n),a=(0,H.o)(e);const i=On([[1]],[1,1]);let o=(0,H.o)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,c=s;[o,a,s]=l.T2.tidy((()=>{const t=(0,D.d)(a,[e,e],[n-e,1]),l=(0,sr.x)(t),u=(0,D.d)(a,[e,e],[1,1]),c=(0,Jn._)((0,De.r)(u,0),On([[-1]]),On([[1]])),d=(0,gt.j)(u,(0,B.l)(c,l)),h=(0,Ae.y)(t,d);o=1===h.shape[0]?(0,H.o)(i):(0,T.x)([i,(0,D.d)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,vt.H)((0,Ae.y)((0,N.N)(c,d),l)),A=(0,D.d)(a,[e,0],[n-e,r]),f=(0,B.l)(p,o),g=(0,rr.m)(o);if(0===e)a=(0,gt.j)(A,(0,N.N)(f,(0,N.N)(g,A)));else{const t=(0,gt.j)(A,(0,N.N)(f,(0,N.N)(g,A)));a=(0,T.x)([(0,D.d)(a,[0,0],[e,r]),t],0)}const m=(0,rr.m)(f),y=(0,D.d)(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,gt.j)(y,(0,N.N)((0,N.N)(y,o),m));else{const t=(0,gt.j)(y,(0,N.N)((0,N.N)(y,o),m));s=(0,T.x)([(0,D.d)(s,[0,0],[n,e]),t],1)}return[o,a,s]})),(0,Hr.AS)([t,u,c])}return!t&&n>r&&(s=(0,D.d)(s,[0,0],[n,r]),a=(0,D.d)(a,[0,0],[r,r])),[s,a]}))}const jr=(0,h.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Yr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,Yn.K)((0,E.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=Yr(e,t);s.push(n),a.push(r)}));return[(0,E.t)((0,Nn.t)(s,0),e.shape),(0,E.t)((0,Nn.t)(a,0),e.shape)]}}});var Kr=n(6235);const Jr=(0,h.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Kr.i.SUM_BY_NONZERO_WEIGHTS;const r=(0,c.YT)(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=(0,c.YT)(t,"weights","computeWeightedLoss"));const a=null==s?r:(0,B.l)(r,s);if(n===Kr.i.NONE)return a;if(n===Kr.i.SUM)return(0,Dn.c)(a);if(n===Kr.i.MEAN){if(null==s)return(0,it.i)(a);{const e=r.size/s.size,t=(0,Ae.y)((0,Dn.c)(a),(0,Dn.c)(s));return e>1?(0,Ae.y)(t,(0,on.d)(e)):t}}if(n===Kr.i.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,Ae.y)((0,Dn.c)(a),(0,on.d)(r.size));{const e=(0,B.l)(s,(0,ot.S)(r.shape)),t=(0,k.w)((0,Dn.c)((0,It.E)(e,(0,on.d)(0))),"float32");return(0,Ae.y)((0,Dn.c)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const Xr=(0,h.op)({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Kr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,c.YT)(e,"labels","absoluteDifference"),i=(0,c.YT)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,c.YT)(n,"weights","absoluteDifference")),(0,d.O3)(a.shape,i.shape,"Error in absoluteDifference: ");const l=(0,s.t)((0,gt.j)(a,i));return Jr(l,o,r)}});const Zr=(0,h.op)({cosineDistance_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,c.YT)(e,"labels","cosineDistance"),i=(0,c.YT)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,c.YT)(r,"weights","cosineDistance")),(0,d.O3)(a.shape,i.shape,"Error in cosineDistance: ");const l=(0,on.d)(1),u=(0,gt.j)(l,(0,Dn.c)((0,B.l)(a,i),n,!0));return Jr(u,o,s)}});const es=(0,h.op)({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Kr.i.SUM_BY_NONZERO_WEIGHTS,s=(0,c.YT)(e,"labels","hingeLoss");const a=(0,c.YT)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,c.YT)(n,"weights","hingeLoss")),(0,d.O3)(s.shape,a.shape,"Error in hingeLoss: ");const o=(0,on.d)(1);s=(0,gt.j)((0,B.l)((0,on.d)(2),s),o);const l=(0,Jt.V)((0,gt.j)(o,(0,B.l)(s,a)));return Jr(l,i,r)}});const ts=(0,h.op)({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kr.i.SUM_BY_NONZERO_WEIGHTS;const i=(0,c.YT)(e,"labels","huberLoss"),l=(0,c.YT)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,c.YT)(n,"weights","huberLoss")),(0,d.O3)(i.shape,l.shape,"Error in huberLoss: ");const h=(0,on.d)(r),p=(0,s.t)((0,gt.j)(l,i)),A=(0,dt.B)(p,h),f=(0,gt.j)(p,A),g=(0,o.W)((0,B.l)((0,on.d)(.5),(0,ft.E)(A)),(0,B.l)(h,f));return Jr(g,u,a)}});const ns=(0,h.op)({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,c.YT)(e,"labels","logLoss"),i=(0,c.YT)(t,"predictions","logLoss");let l=null;null!=n&&(l=(0,c.YT)(n,"weights","logLoss")),(0,d.O3)(a.shape,i.shape,"Error in logLoss: ");const u=(0,on.d)(1),h=(0,on.d)(r),p=(0,vt.H)((0,B.l)(a,(0,Ue.R)((0,o.W)(i,h)))),A=(0,B.l)((0,gt.j)(u,a),(0,Ue.R)((0,o.W)((0,gt.j)(u,i),h))),f=(0,gt.j)(p,A);return Jr(f,l,s)}});const rs=(0,h.op)({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Kr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,c.YT)(e,"labels","meanSquaredError"),a=(0,c.YT)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,c.YT)(n,"weights","meanSquaredError")),(0,d.O3)(s.shape,a.shape,"Error in meanSquaredError: ");const o=(0,Sn.P)(s,a);return Jr(o,i,r)}});const ss=(0,h.op)({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kr.i.SUM_BY_NONZERO_WEIGHTS,i=(0,c.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const l=(0,c.YT)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,c.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(i.shape,l.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(.5);i=(0,o.W)((0,B.l)(i,(0,gt.j)(t,e)),(0,B.l)(n,e))}const h=function(e,t){const n=(0,c.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,c.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,Jt.V)(r),i=(0,B.l)(r,n),l=(0,We.K)((0,we.o)((0,vt.H)((0,s.t)(r))));return(0,o.W)((0,gt.j)(a,i),l)}(i,l);return Jr(h,u,a)}});const as=(0,h.op)({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kr.i.SUM_BY_NONZERO_WEIGHTS,a=(0,c.YT)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,c.YT)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,c.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(a.shape[1]);a=(0,o.W)((0,B.l)(a,(0,gt.j)(t,e)),(0,Ae.y)(e,n))}const u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,Ar._X)(((e,t,r)=>{const s=(0,He.V)(t,[n],!0),a=(0,gt.j)((0,k.w)(t,"float32"),s);r([e,a]);const i=(0,vt.H)((0,B.l)(a,e));return{value:(0,Dn.c)(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=(0,At.SM)(e.shape,[n]);return[(0,B.l)((0,E.t)(e,a),(0,gt.j)((0,k.w)(r,"float32"),(0,we.o)(s))),(0,B.l)((0,E.t)(e,a),(0,gt.j)((0,we.o)(s),(0,k.w)(r,"float32")))]}}}));return r(e,t)}(a,i);return Jr(u,l,s)}});const is=(0,h.op)({sparseFillEmptyRows_:function(e,t,n,r){const s=(0,c.YT)(e,"indices","sparseFillEmptyRows","int32"),a=(0,c.YT)(t,"values","sparseFillEmptyRows"),i=(0,c.YT)(n,"denseShape","sparseFillEmptyRows","int32"),o=(0,c.YT)(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const d={indices:s,values:a,denseShape:i,defaultValue:o},h=l.T2.runKernel(u.C8s,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const os=(0,h.op)({sparseReshape_:function(e,t,n){const r=(0,c.YT)(e,"inputIndices","sparseReshape","int32"),s=(0,c.YT)(t,"inputShape","sparseReshape","int32"),a=(0,c.YT)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=l.T2.runKernel(u.BoJ,i);return{outputIndices:o[0],outputShape:o[1]}}});const ls=(0,h.op)({sparseSegmentMean_:function(e,t,n){const r=(0,c.YT)(e,"data","sparseSegmentMean"),s=(0,c.YT)(t,"indices","sparseSegmentMean","int32"),a=(0,c.YT)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return l.T2.runKernel(u.L6G,i)}});const us=(0,h.op)({sparseSegmentSum_:function(e,t,n){const r=(0,c.YT)(e,"data","sparseSegmentSum"),s=(0,c.YT)(t,"indices","sparseSegmentSum","int32"),a=(0,c.YT)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return l.T2.runKernel(u.DvZ,i)}});const cs=(0,h.op)({stringNGrams_:function(e,t,n,r,s,a,i,o){const d=(0,c.YT)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const h=(0,c.YT)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},A={data:d,dataSplits:h},f=l.T2.runKernel(u.YAb,A,p);return{nGrams:f[0],nGramsSplits:f[1]}}});const ds=(0,h.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=(0,c.YT)(e,"input","stringSplit","string"),s=(0,c.YT)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=l.T2.runKernel(u.iW0,i,a);return{indices:o[0],values:o[1],shape:o[2]}}});const hs=(0,h.op)({stringToHashBucketFast_:function(e,t){const n=(0,c.YT)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return l.T2.runKernel(u.$jE,s,r)}});const ps=(0,h.op)({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=(0,c.YT)(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return l.T2.runKernel(u.GZp,{x:s},a)}}),As={fft:In.h,ifft:xn.K,rfft:kn.z,irfft:wn.g},fs={hammingWindow:kr,hannWindow:Cr,frame:Er,stft:Sr},gs={flipLeftRight:Nr,grayscaleToRGB:Br,resizeNearestNeighbor:Gr.b,resizeBilinear:Pr.v,rgbToGrayscale:Rr,rotateWithOffset:Dr,cropAndResize:Tr,nonMaxSuppression:$r,nonMaxSuppressionAsync:Mr,nonMaxSuppressionWithScore:Or,nonMaxSuppressionWithScoreAsync:Qr,nonMaxSuppressionPadded:Lr,nonMaxSuppressionPaddedAsync:zr,threshold:Ur,transform:Wr},ms={bandPart:Vr,gramSchmidt:qr,qr:jr},ys={absoluteDifference:Xr,computeWeightedLoss:Jr,cosineDistance:Zr,hingeLoss:es,huberLoss:ts,logLoss:ns,meanSquaredError:rs,sigmoidCrossEntropy:ss,softmaxCrossEntropy:as},bs={sparseFillEmptyRows:is,sparseReshape:os,sparseSegmentMean:ls,sparseSegmentSum:us},vs={stringNGrams:cs,stringSplit:ds,stringToHashBucketFast:hs,staticRegexReplace:ps}},470:(e,t,n)=>{"use strict";n.d(t,{y:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(9188);const l=(0,n(2732).op)({div_:function(e,t){let n=(0,i.YT)(e,"a","div"),l=(0,i.YT)(t,"b","div");if([n,l]=(0,a.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,o.w)(n,l);const u={a:n,b:l};return r.T2.runKernel(s.sDr,u,{})}})},537:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(5836),s=n(7205);const a=(0,n(2732).op)({conv2dTranspose_:function(e,t,n,a,i,o){const l=(0,r.YT)(e,"x","conv2dTranspose"),u=(0,r.YT)(t,"filter","conv2dTranspose");return(0,s.v)(n,l,u,a,i,"NHWC",o)}})},667:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({mul_:function(e,t){let n=(0,i.YT)(e,"a","mul"),o=(0,i.YT)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.xu7,l)}})},714:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>m,Dh:()=>A,E6:()=>a,G0:()=>f,G8:()=>u,YQ:()=>s,l5:()=>i,p$:()=>l,qk:()=>g,s_:()=>y,uf:()=>o});var r=n(7738);function s(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5?arguments[5]:void 0;return o(e,[...t,e[3]],n,a,r,null,null,m(s))}function a(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[l,u]=c(t);let d;if("channelsLast"===i)d=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);d=[l,u,e[1],e[1]]}return o(e,d,n,r,s,a,!1,i)}function i(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,u,c]=d(t);let h,p;if("NDHWC"===i)p="channelsLast",h=[o,u,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",h=[o,u,c,e[1],e[1]]}return l(e,h,n,r,s,!1,p,a)}function o(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,d,A,f]=[-1,-1,-1,-1];if("channelsLast"===o)[l,d,A,f]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,f,d,A]=e}const[g,m,,y]=t,[b,v]=c(n),[I,x]=c(r),w=h(g,I),k=h(m,x),{padInfo:C,outHeight:E,outWidth:S}=function(e,t,n,r,s,a,i,o,l){let c,d,h;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=u(e,t,n));const a=e[0],i=e[1],o=p((a-t+2*r)/n+1,s),l=p((i-t+2*r)/n+1,s);return[o,l]}([t,n],a,r,e,o);d=s[0],h=s[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(d-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),u=e-l,p=Math.floor(o/2);c={top:l,bottom:u,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],A="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:A,left:f,right:g,type:0===u&&0===A&&0===f&&0===g?"VALID":"EXPLICIT"},d=p((t-a+u+A)/r+1,o),h=p((n-i+f+g)/s+1,o)}}return{padInfo:c,outHeight:d,outWidth:h}}(s,d,A,b,v,w,k,a,o),T=i?y*f:y;let N;return"channelsFirst"===o?N=[l,T,E,S]:"channelsLast"===o&&(N=[l,E,S,T]),{batchSize:l,dataFormat:o,inHeight:d,inWidth:A,inChannels:f,outHeight:E,outWidth:S,outChannels:T,padInfo:C,strideHeight:b,strideWidth:v,filterHeight:g,filterWidth:m,effectiveFilterHeight:w,effectiveFilterWidth:k,dilationHeight:I,dilationWidth:x,inShape:e,outShape:N,filterShape:t}}function l(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,c,A,f,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,A,f,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,c,A,f]=e}const[m,y,b,,v]=t,[I,x,w]=d(n),[k,C,E]=d(r),S=h(m,k),T=h(y,C),N=h(b,E),{padInfo:B,outDepth:R,outHeight:D,outWidth:F}=function(e,t,n,r,s,a,i,o,l,c,d){let h,A,f,g;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=u(e,t[0],r[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*s>=t[o]&&(i[o]=p((e[o]-t[o]+2*s)/r[o]+1,a));return i}([t,n,r,1],[o,l,c],1,[s,a,i],e,d);A=m[0],f=m[1],g=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{A=Math.ceil(t/s),f=Math.ceil(n/a),g=Math.ceil(r/i);const e=(A-1)*s+o-t,u=(f-1)*a+l-n,d=(g-1)*i+c-r,p=Math.floor(e/2),m=e-p,y=Math.floor(u/2),b=u-y,v=Math.floor(d/2);h={top:y,bottom:b,left:v,right:d-v,front:p,back:m,type:"SAME"}}}return{padInfo:h,outDepth:A,outHeight:f,outWidth:g}}(s,c,A,f,I,x,w,S,T,N,o),$=a?v*g:v;let _;return"channelsFirst"===i?_=[l,$,R,D,F]:"channelsLast"===i&&(_=[l,R,D,F,$]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:A,inWidth:f,inChannels:g,outDepth:R,outHeight:D,outWidth:F,outChannels:$,padInfo:B,strideDepth:I,strideHeight:x,strideWidth:w,filterDepth:m,filterHeight:y,filterWidth:b,effectiveFilterDepth:S,effectiveFilterHeight:T,effectiveFilterWidth:N,dilationDepth:k,dilationHeight:C,dilationWidth:E,inShape:e,outShape:_,filterShape:t}}function u(e,t,n){const r=h(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function A(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function f(e,t){return A(e)||A(t)}function g(e){return c(e).every((e=>e>0))}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},725:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(5964),s=n(1146),a=n(7738);const i=(0,n(2732).op)({ifft_:function(e){(0,a.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(s.OAQ,t)}})},731:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({pow_:function(e,t){let n=(0,i.YT)(e,"base","pow"),o=(0,i.YT)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.pyJ,l)}})},815:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({log_:function(e){const t={x:(0,a.YT)(e,"x","log","float32")};return r.T2.runKernel(s.tG8,t)}})},844:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({tanh_:function(e){const t={x:(0,a.YT)(e,"x","tanh","float32")};return r.T2.runKernel(s.iuW,t)}})},883:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({atan_:function(e){const t={x:(0,a.YT)(e,"x","atan")};return r.T2.runKernel(s.TyE,t)}})},903:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,a.YT)(e,"x","step")},i={alpha:t};return r.T2.runKernel(s.pnw,n,i)}})},1012:(e,t,n)=>{"use strict";n.d(t,{o:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({clone_:function(e){const t={x:(0,a.YT)(e,"x","clone","string_or_numeric")};return r.T2.runKernel(s.lzr,t)}})},1054:()=>{},1101:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(2140);const l=(0,n(2732).op)({clipByValue_:function(e,t,n){const l=(0,a.YT)(e,"x","clipByValue");if(i.vA(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,o.G)(l.shape,t,l.dtype);const u={x:l},c={clipValueMin:t,clipValueMax:n};return r.T2.runKernel(s.vaV,u,c)}})},1102:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>r,uI:()=>s});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}createTensorFromGPUData(e,t,n){return a("createTensorFromGPUData")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},1146:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>D,$jE:()=>nn,$zE:()=>R,A1h:()=>M,A8B:()=>Gt,BK4:()=>yn,BLA:()=>Je,BRl:()=>ae,Blb:()=>Ut,BoJ:()=>qt,BxF:()=>de,C8s:()=>Vt,CQC:()=>At,Cg$:()=>Be,CwD:()=>Se,D7i:()=>Et,Ddj:()=>Kt,Dr:()=>bn,DvZ:()=>Yt,E3$:()=>we,EkD:()=>o,ElG:()=>pe,EwU:()=>dn,FAs:()=>on,FCQ:()=>kt,FSt:()=>u,Fin:()=>Lt,GZp:()=>Xt,HNs:()=>k,Ik2:()=>x,J3C:()=>Mt,JiE:()=>$t,Jp_:()=>c,KXH:()=>S,L6G:()=>Ht,LB5:()=>C,LDN:()=>Pe,LG0:()=>je,LRy:()=>mt,LWX:()=>at,LXA:()=>Fe,M6A:()=>Jt,MRQ:()=>U,Mn0:()=>L,MnK:()=>z,N4F:()=>w,Ncv:()=>dt,O4G:()=>ge,OAQ:()=>ve,ODT:()=>lt,OMN:()=>i,ORI:()=>j,PH8:()=>a,P_L:()=>Ct,Pah:()=>ne,PbM:()=>rn,Q6t:()=>gt,QDP:()=>T,QKF:()=>h,Qgm:()=>te,R23:()=>vt,RMm:()=>An,RUm:()=>Re,RW8:()=>$e,RXX:()=>Ue,SDM:()=>nt,SQl:()=>ce,T7M:()=>In,TBb:()=>ln,TL8:()=>qe,TMz:()=>V,TOR:()=>Tt,ToN:()=>Qe,TyE:()=>A,UcO:()=>Zt,VAI:()=>ze,VCH:()=>y,Vvy:()=>s,WRv:()=>Le,WT3:()=>Xe,WuN:()=>Pt,X$8:()=>H,X0$:()=>Ce,X4r:()=>Bt,XQy:()=>xt,XhZ:()=>me,XmO:()=>Z,YAb:()=>en,YVe:()=>Ot,ZgB:()=>he,Zl4:()=>rt,_s9:()=>se,aAr:()=>vn,awo:()=>mn,bCz:()=>ut,bP9:()=>J,cHb:()=>Ve,cS:()=>b,dFH:()=>zt,dLy:()=>un,dXR:()=>hn,dv8:()=>Ie,e0f:()=>st,epO:()=>p,fUj:()=>bt,g5A:()=>He,gC7:()=>Q,gIW:()=>xe,hVg:()=>St,hgw:()=>wt,ho8:()=>m,hql:()=>_t,huO:()=>yt,i5R:()=>Ae,iGz:()=>O,iPs:()=>ke,iW0:()=>tn,iuW:()=>an,jAQ:()=>I,jM4:()=>Oe,jOE:()=>It,jfg:()=>_,jgd:()=>jt,jj_:()=>P,jxD:()=>K,kdj:()=>ht,l0G:()=>et,l6P:()=>Dt,lLS:()=>ye,lNG:()=>Ye,ljI:()=>r,lxb:()=>g,lzr:()=>be,mH5:()=>ft,mIA:()=>Ee,mM$:()=>ot,mnI:()=>Te,mxL:()=>fe,nVu:()=>Y,nY8:()=>G,nZd:()=>De,oFs:()=>sn,oJ2:()=>pt,ox3:()=>ie,p2J:()=>F,pJc:()=>Nt,pPe:()=>pn,p_m:()=>d,pk0:()=>X,pnw:()=>gn,pr3:()=>B,pyJ:()=>ct,rFG:()=>Wt,rFm:()=>$,rGP:()=>ue,rsH:()=>re,sDr:()=>ee,t3d:()=>Ge,tG8:()=>Ne,tGH:()=>q,u$b:()=>Ft,u8Z:()=>l,uWl:()=>Rt,urI:()=>it,vI1:()=>Qt,vaV:()=>N,vj7:()=>E,wNW:()=>W,wwC:()=>v,wx0:()=>cn,x7F:()=>Ke,xJ3:()=>fn,xu7:()=>Ze,yPW:()=>Me,ySp:()=>We,ybN:()=>oe,ybj:()=>le,ylV:()=>tt,zP9:()=>f,zfU:()=>_e});const r="Abs",s="Acos",a="Acosh",i="Add",o="AddN",l="All",u="Any",c="ArgMax",d="ArgMin",h="Asin",p="Asinh",A="Atan",f="Atanh",g="Atan2",m="AvgPool",y="AvgPoolGrad",b="AvgPool3D",v="AvgPool3DGrad",I="BatchMatMul",x="BatchToSpaceND",w="Bincount",k="BitwiseAnd",C="BroadcastTo",E="BroadcastArgs",S="Cast",T="Ceil",N="ClipByValue",B="Complex",R="ComplexAbs",D="Concat",F="Conv2D",$="Conv2DBackpropFilter",_="Conv2DBackpropInput",M="Conv3D",O="Conv3DBackpropFilterV2",Q="Conv3DBackpropInputV2",L="Cos",z="Cosh",P="Cumprod",G="Cumsum",U="CropAndResize",W="DenseBincount",V="DepthToSpace",q="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",Y="DepthwiseConv2dNativeBackpropInput",j="Diag",K="Dilation2D",J="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Z="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",se="Erf",ae="Equal",ie="Exp",oe="ExpandDims",le="Expm1",ue="FFT",ce="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",Ae="FusedBatchNorm",fe="GatherV2",ge="GatherNd",me="Greater",ye="GreaterEqual",be="Identity",ve="IFFT",Ie="Imag",xe="IsFinite",we="IsInf",ke="IsNan",Ce="LeakyRelu",Ee="Less",Se="LessEqual",Te="LinSpace",Ne="Log",Be="Log1p",Re="LogicalAnd",De="LogicalNot",Fe="LogicalOr",$e="LogicalXor",_e="LogSoftmax",Me="LowerBound",Oe="LRN",Qe="LRNGrad",Le="MatrixBandPart",ze="Max",Pe="Maximum",Ge="MaxPool",Ue="MaxPoolGrad",We="MaxPool3D",Ve="MaxPool3DGrad",qe="MaxPoolWithArgmax",He="Mean",Ye="Min",je="Minimum",Ke="MirrorPad",Je="Mod",Xe="Multinomial",Ze="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",rt="NonMaxSuppressionV4",st="NonMaxSuppressionV5",at="OnesLike",it="OneHot",ot="Pack",lt="PadV2",ut="Pool",ct="Pow",dt="Prelu",ht="Prod",pt="RaggedGather",At="RaggedRange",ft="RaggedTensorToTensor",gt="Range",mt="Real",yt="Reciprocal",bt="Relu",vt="Reshape",It="ResizeNearestNeighbor",xt="ResizeNearestNeighborGrad",wt="ResizeBilinear",kt="ResizeBilinearGrad",Ct="Relu6",Et="Reverse",St="Round",Tt="Rsqrt",Nt="ScatterNd",Bt="TensorScatterUpdate",Rt="SearchSorted",Dt="Select",Ft="Selu",$t="Slice",_t="Sin",Mt="Sinh",Ot="Sign",Qt="Sigmoid",Lt="Softplus",zt="Sqrt",Pt="Sum",Gt="SpaceToBatchND",Ut="SplitV",Wt="Softmax",Vt="SparseFillEmptyRows",qt="SparseReshape",Ht="SparseSegmentMean",Yt="SparseSegmentSum",jt="SparseToDense",Kt="SquaredDifference",Jt="Square",Xt="StaticRegexReplace",Zt="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",rn="Sub",sn="Tan",an="Tanh",on="Tile",ln="TopK",un="Transform",cn="Transpose",dn="Unique",hn="Unpack",pn="UnsortedSegmentSum",An="UpperBound",fn="ZerosLike",gn="Step",mn="FromPixels",yn="RotateWithOffset",bn="_FusedMatMul",vn="FusedConv2D",In="FusedDepthwiseConv2D"},1236:(e,t,n)=>{"use strict";n.d(t,{j:()=>c});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(714),l=n(2732),u=n(3943);const c=(0,l.op)({maxPool_:function(e,t,n,l,c){const d=(0,a.YT)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,u.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.vA(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),i.vA(o.G0(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.s_("maxPool",l,c);const A={x:h},f={filterSize:t,strides:n,pad:l,dimRoundingMode:c},g=r.T2.runKernel(s.t3d,A,f);return p?(0,u.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},1240:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,a.YT)(e,"x","unstack","string_or_numeric");i.vA(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},l={axis:t};return r.T2.runKernel(s.dXR,o,l)}})},1241:(e,t,n)=>{"use strict";var r=n(9643),s=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,a={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)i.call(t,r)&&!l.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:s,type:e,key:u,ref:c,props:a,_owner:o.current}}t.jsx=u,t.jsxs=u},1245:(e,t,n)=>{"use strict";n.d(t,{$:()=>l});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(3943);const l=(0,n(2732).op)({batchNorm_:function(e,t,n,l,u,c){null==c&&(c=.001);const d=(0,a.YT)(e,"x","batchNorm"),h=(0,a.YT)(t,"mean","batchNorm"),p=(0,a.YT)(n,"variance","batchNorm");let A,f;null!=u&&(A=(0,a.YT)(u,"scale","batchNorm")),null!=l&&(f=(0,a.YT)(l,"offset","batchNorm")),i.vA(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.vA(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.vA(null==A||h.rank===A.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.t)(e,[1,1,1,e.size]):2===e.rank?(0,o.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:A,offset:f,mean:h,variance:p},m={varianceEpsilon:c},y=r.T2.runKernel(s.i5R,g,m);return(0,o.t)(y,d.shape)}})},1261:(e,t,n)=>{"use strict";e.exports=n(3498)},1288:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},1410:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({add_:function(e,t){let n=(0,i.YT)(e,"a","add"),o=(0,i.YT)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.OMN,l)}})},1412:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(5836),s=n(2701),a=n(8372),i=n(5656),o=n(24);const l=(0,n(2732).op)({logicalXor_:function(e,t){const n=(0,r.YT)(e,"a","logicalXor","bool"),l=(0,r.YT)(t,"b","logicalXor","bool");return(0,s.assertAndGetBroadcastShape)(n.shape,l.shape),(0,a.n)((0,o.z)(e,t),(0,i.N)((0,a.n)(e,t)))}})},1461:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const i=(0,a.YT)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const l={x:i},u={k:t,sorted:n},[c,d]=r.T2.runKernel(s.TBb,l,u);return{values:c,indices:d}}})},1489:(e,t,n)=>{"use strict";n.d(t,{X:()=>c});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(714),l=n(2732),u=n(3943);const c=(0,l.op)({conv2d_:function(e,t,n,l){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,a.YT)(e,"x","conv2d","float32"),A=(0,a.YT)(t,"filter","conv2d","float32");let f=p,g=!1;3===p.rank&&(g=!0,f=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.vA(4===f.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${f.rank}.`)),i.vA(4===A.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${A.rank}.`)),o.s_("conv2d",l,h);const m="NHWC"===c?f.shape[3]:f.shape[1];i.vA(m===A.shape[2],(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${A.shape[2]}.`)),i.vA(o.G0(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.vA(o.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),i.vA(o.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const y={x:f,filter:A},b={strides:n,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h},v=r.T2.runKernel(s.p2J,y,b);return g?(0,u.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1666:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(3098),l=n(714),u=n(2732),c=n(3943);const d=(0,u.op)({avgPool_:function(e,t,n,u,d){const h=(0,a.YT)(e,"x","avgPool","float32");i.vA(l.G0(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=h,A=!1;3===h.rank&&(A=!0,p=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.vA(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),l.s_("avgPool",u,d);const f={x:p},g={filterSize:t,strides:n,pad:u,dimRoundingMode:d};let m=r.T2.runKernel(s.ho8,f,g);return m=(0,o.w)(m,h.dtype),A?(0,c.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},1698:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,a.YT)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.T2.runKernel(s.u8Z,i,o)}})},1710:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(3098);const o=(0,n(2732).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=(0,a.YT)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.T2.runKernel(s.WuN,l,u)}})},1715:()=>{},1727:(e,t,n)=>{"use strict";n.d(t,{E:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701);const l=(0,n(2732).op)({notEqual_:function(e,t){let n=(0,i.YT)(e,"a","notEqual","string_or_numeric"),l=(0,i.YT)(t,"b","notEqual","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(s.ylV,u)}})},1763:(e,t,n)=>{"use strict";n.d(t,{G:()=>c});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(714),l=n(2732),u=n(3943);const c=(0,l.op)({depthwiseConv2d_:function(e,t,n,l){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,a.YT)(e,"x","depthwiseConv2d","float32"),A=(0,a.YT)(t,"filter","depthwiseConv2d","float32");let f=p,g=!1;3===p.rank&&(g=!0,f=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.vA(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.vA(4===A.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${A.rank}.`));const m="NHWC"===c?f.shape[3]:f.shape[1];i.vA(m===A.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${A.shape[2]}.`)),o.s_("depthwiseConv2d",l,h);const y={x:f,filter:A},b={strides:n,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h},v=r.T2.runKernel(s.tGH,y,b);return g?(0,u.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1835:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({neg_:function(e){const t={x:(0,a.YT)(e,"x","neg")};return r.T2.runKernel(s.l0G,t)}})},1871:(e,t,n)=>{"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>r})},2094:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(5964),s=n(1146),a=n(7738);const i=(0,n(2732).op)({fft_:function(e){(0,a.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(s.rGP,t)}})},2108:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({ceil_:function(e){const t={x:(0,a.YT)(e,"x","ceil","float32")};return r.T2.runKernel(s.QDP,t)}})},2140:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(5964),s=n(1146),a=n(7738);function i(e,t,n){(0,a.SA)(e);const i={shape:e,value:t,dtype:n=n||(0,a.X$)(t)};return r.T2.runKernel(s.SQl,{},i)}},2307:(e,t,n)=>{"use strict";var r,s,a,i,o;n.d(t,{Nw:()=>h,Oj:()=>d,Tu:()=>u,ch:()=>c,rg:()=>r}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const l={float32:i,int32:s,bool:a,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},2383:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var r=n(5836),s=n(7738),a=n(1666),i=n(6485),o=n(714),l=n(1236),u=n(2732),c=n(3943),d=n(7657);const h=(0,u.op)({pool_:function(e,t,n,u,h,p,A){null==h&&(h=[1,1]),null==p&&(p=1),0===u&&(u="valid");const f=(0,r.YT)(e,"x","maxPool");let g=f,m=!1;3===f.rank&&(m=!0,g=(0,c.t)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),s.vA(o.G0(p,h),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`));const y=o.E6(g.shape,t,p,h,u),b=[y.dilationHeight,y.dilationWidth];let v;v="same"===u?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([y.filterHeight,y.filterWidth],b):[[0,0],[0,0]];const I=1===b[0]&&1===b[1],[x,w]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([y.inHeight,y.inWidth],b,v),k=I?u:"valid",C=I?g:(0,d.e)(g,b,x),E=("avg"===n?()=>(0,a.$)(C,t,p,k,A):()=>(0,l.j)(C,t,p,k,A))(),S=I?E:(0,i.G)(E,b,w);return m?(0,c.t)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},2583:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({sub_:function(e,t){let n=(0,i.YT)(e,"a","sub"),o=(0,i.YT)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.PbM,l)}})},2613:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({round_:function(e){const t={x:(0,a.YT)(e,"x","round")};return r.T2.runKernel(s.hVg,t)}})},2688:(e,t,n)=>{"use strict";n.d(t,{K:()=>u});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(2732),l=n(3943);const u=(0,o.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const c=(0,a.YT)(e,"x","localResponseNormalization");i.vA(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.vA(i.E6(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=c,h=!1;3===c.rank&&(h=!0,d=(0,l.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const p={x:d},A={depthRadius:t,bias:n,alpha:o,beta:u},f=r.T2.runKernel(s.jM4,p,A);return h?(0,l.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2701:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>a,getBroadcastDims:()=>r,getReductionAxes:()=>s})},2732:(e,t,n)=>{"use strict";n.d(t,{B:()=>a,op:()=>i});var r=n(5964),s=n(7738);const a="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const o=function(){r.T2.startScope(n);try{const e=i(...arguments);return(0,s.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),r.T2.endScope(e),e}catch(e){throw r.T2.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},2783:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701);const l=(0,n(2732).op)({greater_:function(e,t){let n=(0,i.YT)(e,"a","greater","string_or_numeric"),l=(0,i.YT)(t,"b","greater","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(s.XhZ,u)}})},2815:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const o=(0,a.YT)(e,"x","depthToSpace","float32"),l="NHWC"===n?o.shape[1]:o.shape[2],u="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.vA(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.vA(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.vA(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.vA(c%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const d={x:o},h={blockSize:t,dataFormat:n};return r.T2.runKernel(s.TMz,d,h)}})},2855:(e,t,n)=>{"use strict";n.d(t,{V:()=>A});var r=n(5836),s=n(7738),a=n(1410),i=n(379),o=n(6782),l=n(815),u=n(2947),c=n(2732),d=n(3943),h=n(2583),p=n(1710);const A=(0,c.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const c=(0,r.YT)(e,"x","logSumExp"),A=(0,s.Y6)(t,c.shape),f=(0,u.T)(c,A,!0),g=(0,h.j)(c,f),m=(0,o.o)(g),y=(0,p.c)(m,A),b=(0,l.R)(y),v=(0,a.W)((0,d.t)(f,b.shape),b);if(n){const e=(0,i.SM)(v.shape,A);return(0,d.t)(v,e)}return v}})},2883:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({isNaN_:function(e){const t={x:(0,a.YT)(e,"x","isNaN")};return r.T2.runKernel(s.iPs,t)}})},2885:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const i={x:(0,a.YT)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.T2.runKernel(s.Blb,i,o)}})},2947:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,a.YT)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.T2.runKernel(s.VAI,i,o)}})},2987:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({isFinite_:function(e){const t={x:(0,a.YT)(e,"x","isFinite")};return r.T2.runKernel(s.gIW,t)}})},2994:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],l=(0,i.YT)(e,"a","matMul"),u=(0,i.YT)(t,"b","matMul");[l,u]=(0,a.makeTypesMatch)(l,u);const c={a:l,b:u},d={transposeA:n,transposeB:o};return r.T2.runKernel(s.jAQ,c,d)}})},3032:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701);const l=(0,n(2732).op)({squaredDifference_:function(e,t){let n=(0,i.YT)(e,"a","squaredDifference"),l=(0,i.YT)(t,"b","squaredDifference");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(s.Ddj,u,{})}})},3054:(e,t,n)=>{"use strict";n.d(t,{v:()=>u});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(2732),l=n(3943);const u=(0,o.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=(0,a.YT)(e,"images","resizeBilinear");i.vA(3===u.rank||4===u.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.vA(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.vA(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},A=r.T2.runKernel(s.hgw,h,p);return d?(0,l.t)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},3066:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},3098:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({cast_:function(e,t){const n=(0,a.YT)(e,"x","cast");if(!i.xn(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},l={dtype:t};return r.T2.runKernel(s.KXH,o,l)}})},3112:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({asinh_:function(e){const t={x:(0,a.YT)(e,"x","asinh")};return r.T2.runKernel(s.epO,t)}})},3159:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o={x:(0,a.YT)(e,"x","cumsum")},l={axis:t,exclusive:n,reverse:i};return r.T2.runKernel(s.nY8,o,l)}})},3186:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},3193:(e,t,n)=>{"use strict";n.d(t,{Do:()=>f,XB:()=>A,f2:()=>g,zE:()=>m});var r=n(2701),s=n(5333),a=n(9588),i=n(667),o=n(9367),l=n(4923),u=n(9441),c=n(3943),d=n(6845),h=n(903),p=n(1710);function A(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.l)(e,(0,h.P)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function f(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,p.c)(n,s)),(0,c.t)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,l.V)(e);if("elu"===t)return(0,s.P)(e);if("relu6"===t)return(0,u.j)(e);if("prelu"===t)return(0,o.N)(e,n);if("leakyrelu"===t)return(0,a.H)(e,r);if("sigmoid"===t)return(0,d.r)(e);throw new Error(`Unknown fused activation ${t}.`)}const m=(e,t)=>!(e>0)||"linear"===t},3218:(e,t,n)=>{"use strict";n.d(t,{p:()=>s});var r=n(8227);const s=(0,n(2732).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,r.x)(e,"euclidean",t,n)}})},3395:(e,t,n)=>{"use strict";n.d(t,{D:()=>s});var r=n(9801);class s{static join(e){return new s(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>r.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],r=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},3459:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,a.YT)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.T2.runKernel(s.FSt,i,o)}})},3498:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,s=e[r];if(!(0<a(s,t)))break e;e[r]=t,e[n]=s,n=r}}function r(e){return 0===e.length?null:e[0]}function s(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,s=e.length,i=s>>>1;r<i;){var o=2*(r+1)-1,l=e[o],u=o+1,c=e[u];if(0>a(l,n))u<s&&0>a(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[o]=n,r=o);else{if(!(u<s&&0>a(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var u=[],c=[],d=1,h=null,p=3,A=!1,f=!1,g=!1,m="function"===typeof setTimeout?setTimeout:null,y="function"===typeof clearTimeout?clearTimeout:null,b="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=r(c);null!==t;){if(null===t.callback)s(c);else{if(!(t.startTime<=e))break;s(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function I(e){if(g=!1,v(e),!f)if(null!==r(u))f=!0,F(x);else{var t=r(c);null!==t&&$(I,t.startTime-e)}}function x(e,n){f=!1,g&&(g=!1,y(E),E=-1),A=!0;var a=p;try{for(v(n),h=r(u);null!==h&&(!(h.expirationTime>n)||e&&!N());){var i=h.callback;if("function"===typeof i){h.callback=null,p=h.priorityLevel;var o=i(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?h.callback=o:h===r(u)&&s(u),v(n)}else s(u);h=r(u)}if(null!==h)var l=!0;else{var d=r(c);null!==d&&$(I,d.startTime-n),l=!1}return l}finally{h=null,p=a,A=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,k=!1,C=null,E=-1,S=5,T=-1;function N(){return!(t.unstable_now()-T<S)}function B(){if(null!==C){var e=t.unstable_now();T=e;var n=!0;try{n=C(!0,e)}finally{n?w():(k=!1,C=null)}}else k=!1}if("function"===typeof b)w=function(){b(B)};else if("undefined"!==typeof MessageChannel){var R=new MessageChannel,D=R.port2;R.port1.onmessage=B,w=function(){D.postMessage(null)}}else w=function(){m(B,0)};function F(e){C=e,k||(k=!0,w())}function $(e,n){E=m((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){f||A||(f=!0,F(x))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):S=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,s,a){var i=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:d++,callback:s,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>i?(e.sortIndex=a,n(c,e),null===r(u)&&e===r(c)&&(g?(y(E),E=-1):g=!0,$(I,a-i))):(e.sortIndex=o,n(u,e),f||A||(f=!0,F(x))),e},t.unstable_shouldYield=N,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},3764:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(5116),s=n(5836),a=n(470),i=n(8025),o=n(2732),l=n(4090),u=n(6834);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,s.YT)(e,"a","div"),o=(0,s.YT)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,a.y)(n,o),d=(0,u.P)(c),h=(0,i.L)(o,d);return(0,l._)(h,d,c)}})},3766:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(306)},3790:(e,t,n)=>{"use strict";let r;function s(){if(null==r){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function a(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{L:()=>s,m:()=>a})},3846:(e,t,n)=>{"use strict";n.d(t,{z:()=>f});var r=n(7738),s=n(8333),a=n(6949),i=n(7359),o=n(2732),l=n(5645),u=n(3943),c=n(4039),d=n(2885),h=n(4098),p=n(6834),A=n(2094);const f=(0,o.op)({rfft_:function(e,t){(0,r.vA)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let f;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,f=(0,c.d)(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,f=(0,a.x)([e,(0,h.U)(r)],e.shape.length-1),n=t}else f=e;const g=(0,p.P)(f),m=(0,u.t)((0,s.f)(f,g),[o,n]),y=(0,A.h)(m),b=Math.floor(n/2)+1,v=(0,l.x)(y),I=(0,i.n)(y),x=(0,d.l)(v,[b,n-b],v.shape.length-1),w=(0,d.l)(I,[b,n-b],I.shape.length-1),k=f.shape.slice();return k[f.shape.length-1]=b,(0,u.t)((0,s.f)(x[0],w[0]),k)}})},3901:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(5836),s=n(7738),a=n(2732),i=n(3943);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,r.YT)(e,"x","squeeze","string_or_numeric");return(0,i.t)(n,(0,s.gx)(n.shape,t).newShape)}})},3942:(e,t,n)=>{"use strict";function r(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>r})},3943:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({reshape_:function(e,t){const n={x:(0,a.YT)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.T2.runKernel(s.R23,n,i)}})},3985:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?m:g;if(t){if(e<0)return m;if(e>=p)return x}else{if(e<=-A)return w;if(e+1>=A)return I}return e<0?o(-e,t).neg():l(e%h|0,e/h|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+l),n);if(l<8){var h=o(u(n,l));a=a.mul(h).add(o(d))}else a=(a=a.mul(s)).add(o(d))}return a.unsigned=t,a}function d(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,A=p/2,f=i(1<<24),g=i(0);n.ZERO=g;var m=i(0,!0);n.UZERO=m;var y=i(1);n.ONE=y;var b=i(1,!0);n.UONE=b;var v=i(-1);n.NEG_ONE=v;var I=l(-1,2147483647,!1);n.MAX_VALUE=I;var x=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=x;var w=l(0,-2147483648,!1);n.MIN_VALUE=w;var k=n.prototype;k.toInt=function(){return this.unsigned?this.low>>>0:this.low},k.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},k.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(w)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},k.getHighBits=function(){return this.high},k.getHighBitsUnsigned=function(){return this.high>>>0},k.getLowBits=function(){return this.low},k.getLowBitsUnsigned=function(){return this.low>>>0},k.getNumBitsAbs=function(){if(this.isNegative())return this.eq(w)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},k.isZero=function(){return 0===this.high&&0===this.low},k.eqz=k.isZero,k.isNegative=function(){return!this.unsigned&&this.high<0},k.isPositive=function(){return this.unsigned||this.high>=0},k.isOdd=function(){return 1===(1&this.low)},k.isEven=function(){return 0===(1&this.low)},k.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},k.eq=k.equals,k.notEquals=function(e){return!this.eq(e)},k.neq=k.notEquals,k.ne=k.notEquals,k.lessThan=function(e){return this.comp(e)<0},k.lt=k.lessThan,k.lessThanOrEqual=function(e){return this.comp(e)<=0},k.lte=k.lessThanOrEqual,k.le=k.lessThanOrEqual,k.greaterThan=function(e){return this.comp(e)>0},k.gt=k.greaterThan,k.greaterThanOrEqual=function(e){return this.comp(e)>=0},k.gte=k.greaterThanOrEqual,k.ge=k.greaterThanOrEqual,k.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},k.comp=k.compare,k.negate=function(){return!this.unsigned&&this.eq(w)?w:this.not().add(y)},k.neg=k.negate,k.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,h=0,p=0,A=0;return p+=(A+=a+(65535&e.low))>>>16,h+=(p+=s+u)>>>16,c+=(h+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(A&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},k.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},k.sub=k.subtract,k.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(w))return e.isOdd()?w:g;if(e.eq(w))return this.isOdd()?w:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(f)&&e.lt(f))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,A=0,m=0,y=0,b=0;return y+=(b+=i*p)>>>16,m+=(y+=a*p)>>>16,y&=65535,m+=(y+=i*h)>>>16,A+=(m+=s*p)>>>16,m&=65535,A+=(m+=a*h)>>>16,m&=65535,A+=(m+=i*c)>>>16,A+=n*p+s*h+a*c+i*u,l((y&=65535)<<16|(b&=65535),(A&=65535)<<16|(m&=65535),this.unsigned)},k.mul=k.multiply,k.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?m:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return m;if(e.gt(this.shru(1)))return b;a=m}else{if(this.eq(w))return e.eq(y)||e.eq(v)?w:e.eq(w)?y:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(w))return this.unsigned?m:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),h=o(n),p=h.mul(e);p.isNegative()||p.gt(s);)p=(h=o(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=y),a=a.add(h),s=s.sub(p)}return a},k.div=k.divide,k.modulo=function(e){return r(e)||(e=d(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},k.mod=k.modulo,k.rem=k.modulo,k.not=function(){return l(~this.low,~this.high,this.unsigned)},k.and=function(e){return r(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},k.or=function(e){return r(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},k.xor=function(e){return r(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},k.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},k.shl=k.shiftLeft,k.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},k.shr=k.shiftRight,k.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},k.shru=k.shiftRightUnsigned,k.shr_u=k.shiftRightUnsigned,k.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},k.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},k.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},k.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},k.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},4018:(e,t,n)=>{"use strict";n.d(t,{E:()=>a});var r=n(5964),s=n(5836);const a=(0,n(2732).op)({square_:function(e){const t=(0,s.YT)(e,"x","square");return r.T2.runKernel("Square",{x:t},{})}})},4039:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({slice_:function(e,t,n){const i=(0,a.YT)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},l={begin:t,size:n};return r.T2.runKernel(s.JiE,o,l)}})},4047:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var r=n(5964),s=n(1146),a=n(2732),i=n(3943);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,c=e;3===e.rank&&(c=(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:c,dy:d},p={strides:a,pad:o,dimRoundingMode:u,dilations:l,filterShape:n};return r.T2.runKernel(s.X$8,h,p)}})},4090:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(5964),s=n(1146),a=n(5836),i=n(5408),o=n(2701);const l=(0,n(2732).op)({where_:function(e,t,n){const l=(0,a.YT)(t,"a","where"),u=(0,a.YT)(n,"b","where"),c=(0,a.YT)(e,"condition","where","bool"),d=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,l.shape),u.shape),h={condition:(0,i.h)(c,d),t:(0,i.h)(l,d),e:(0,i.h)(u,d)};return r.T2.runKernel(s.l6P,h)}})},4096:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const i=(0,a.YT)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},l={x:i};return r.T2.runKernel(s.ODT,l,o)}})},4098:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(5964),s=n(7738),a=n(8333);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,s.SA)(e),"complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.f)(t,n)}const n=(0,s.Ty)((0,s.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},4188:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||s)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function s(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,r,s){return l(e,t,n,r,s,0)}function i(e,t,n,r,s,a){return l(e,t,n,r,s,0,!1,a,!0)}function o(e,t,n,r,s,a){return l(e,t,n,r,s,a,!0)}function l(e,t,n,s,a,i){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let r=0;r<t.length;r++)t[r]>a&&p.push({score:t[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const A=i>0?-.5/i:0,f=[],g=[];for(;f.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let l=!1;for(let r=f.length-1;r>=o;--r){const n=u(e,i,f[r]);if(n>=s){l=!0;break}if(t.score=t.score*c(s,A,n),t.score<=a)break}t.suppressBeginIndex=f.length,l||(t.score===n?(f.push(i),g.push(t.score)):t.score>a&&r(p,t,d))}const m=f.length,y=n-m;l&&y>0&&(f.push(...new Array(y).fill(0)),g.push(...new Array(y).fill(0)));const b={selectedIndices:f};return o&&(b.selectedScores=g),h&&(b.validOutputs=m),b}function u(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),p=(o-a)*(l-i),A=(d-u)*(h-c);if(p<=0||A<=0)return 0;const f=Math.max(a,u),g=Math.max(i,c),m=Math.min(o,d),y=Math.min(l,h),b=Math.max(m-f,0)*Math.max(y-g,0);return b/(p+A-b)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>a,ZS:()=>i,ut:()=>o})},4243:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({floor_:function(e){const t={x:(0,a.YT)(e,"x","floor","float32")};return r.T2.runKernel(s.ZgB,t)}})},4295:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,a.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.T2.runKernel(s.rFG,i,o)}})},4400:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({expm1_:function(e){const t={x:(0,a.YT)(e,"x","expm1")};return r.T2.runKernel(s.ybj,t)}})},4402:(e,t,n)=>{"use strict";n.d(t,{H:()=>p});var r=n(5431),s=n(5836),a=n(3098),i=n(6782),o=n(815),l=n(2947),u=n(667),c=n(2732),d=n(2583),h=n(1710);const p=(0,c.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r._X)(((e,n)=>{const r=(0,l.T)(e,t,!0),s=(0,d.j)(e,r),c=(0,d.j)((0,a.w)(s,"float32"),(0,o.R)((0,h.c)((0,i.o)(s),t,!0)));n([c]);return{value:c,gradFunc:(e,n)=>{const[r]=n,s=(0,i.o)(r);return(0,d.j)(e,(0,u.l)((0,h.c)(e,t,!0),s))}}}))(n)}})},4438:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({tan_:function(e){const t={x:(0,a.YT)(e,"x","tan","float32")};return r.T2.runKernel(s.oFs,t)}})},4451:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o={x:(0,a.YT)(e,"x","cumprod")},l={axis:t,exclusive:n,reverse:i};return r.T2.runKernel(s.jj_,o,l)}})},4454:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,a.YT)(e,"x","unique","string_or_numeric");(0,i.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},l={axis:t},[u,c]=r.T2.runKernel(s.EwU,o,l);return{values:u,indices:c}}})},4477:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({softplus_:function(e){const t={x:(0,a.YT)(e,"x","softplus")};return r.T2.runKernel(s.Fin,t)}})},4481:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({tile_:function(e,t){const n=(0,a.YT)(e,"x","tile","string_or_numeric");i.vA(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},l={reps:t};return r.T2.runKernel(s.FAs,o,l)}})},4551:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({sqrt_:function(e){const t={x:(0,a.YT)(e,"x","sqrt","float32")};return r.T2.runKernel(s.dFH,t)}})},4787:(e,t,n)=>{"use strict";n.d(t,{g:()=>A});var r=n(8333),s=n(6949),a=n(7359),i=n(667),o=n(2732),l=n(5645),u=n(3943),c=n(5443),d=n(8965),h=n(4039),p=n(725);const A=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,u.t)(e,[n,t]);o=(0,p.K)(r)}else{const A=[n,2*(t-1)],f=(0,u.t)((0,l.x)(e),[n,t]),g=(0,u.t)((0,a.n)(e),[n,t]),m=(0,c.B)((0,h.d)(f,[0,1],[n,t-2]),1),y=(0,i.l)((0,c.B)((0,h.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),b=(0,s.x)([f,m],1),v=(0,s.x)([g,y],1),I=(0,u.t)((0,r.f)(b,v),[A[0],A[1]]);o=(0,p.K)(I)}if(o=(0,l.x)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,u.t)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},4904:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var r=n(5836),s=n(6658);function a(e,t,n){const a=(0,r.MZ)(e,n);return(0,s.Q)(e,t,a,n)}},4916:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({cosh_:function(e){const t={x:(0,a.YT)(e,"x","cosh","float32")};return r.T2.runKernel(s.MnK,t)}})},4923:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({relu_:function(e){const t={x:(0,a.YT)(e,"x","relu")};return r.T2.runKernel(s.fUj,t)}})},4956:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,a.YT)(e,"x","mean")},o={axis:t,keepDims:n};return r.T2.runKernel(s.g5A,i,o)}})},5009:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({rsqrt_:function(e){const t={x:(0,a.YT)(e,"x","rsqrt","float32")};return r.T2.runKernel(s.TOR,t)}})},5031:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({stridedSlice_:function(e,t,n,i){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h={x:(0,a.YT)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:i,beginMask:o,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:d};return r.T2.runKernel(s.UcO,h,p)}})},5116:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>u,isTensorInList:()=>l,makeTypesMatch:()=>i});var r=n(206),s=n(2307),a=n(7738);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.vA)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e,t){return t.some((t=>t.id===e.id))}function u(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.qY)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),c(e,t,n))}}},5191:(e,t,n)=>{"use strict";n.d(t,{H:()=>u});var r=n(5964),s=n(1146),a=n(7738),i=n(714),o=n(2732),l=n(3943);const u=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,l.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.vA(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),a.vA(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),a.vA(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const A="NHWC"===c?h.shape[3]:h.shape[1],f="NHWC"===c?p.shape[3]:p.shape[1];a.vA(A===n[2],(()=>`Error in conv2dDerFilter: depth of input ${A}) must match input depth in filter (${n[2]}.`)),a.vA(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),i.s_("conv2dDerFilter",u,d);const g={x:h,dy:p},m={strides:o,pad:u,dataFormat:c,dimRoundingMode:d,filterShape:n};return r.T2.runKernel(s.rFm,g,m)}})},5225:(e,t,n)=>{"use strict";n.d(t,{B:()=>u});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701),l=n(3098);const u=(0,n(2732).op)({minimum_:function(e,t){let n=(0,i.YT)(e,"a","minimum"),u=(0,i.YT)(t,"b","minimum");[n,u]=(0,a.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.w)(n,"int32"),u=(0,l.w)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.LG0,c)}})},5333:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({elu_:function(e){const t={x:(0,a.YT)(e,"x","elu","float32")};return r.T2.runKernel(s.Pah,t)}})},5348:(e,t,n)=>{"use strict";n.d(t,{R:()=>a,i:()=>s});var r=n(5615);function s(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.warn(...arguments)}function a(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.log(...arguments)}},5408:(e,t,n)=>{"use strict";n.d(t,{h:()=>c});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(1012),l=n(2732),u=n(3943);const c=(0,l.op)({broadcastTo_:function(e,t){let n=(0,a.YT)(e,"broadcastTo","x");const l=n.shape;if((0,i.SA)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.t)(n,e)}const c=n.shape,d=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])d[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${l}] cannot be broadcast to [${t}].`);if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.o)(n);const h={x:n},p={reps:d};return r.T2.runKernel(s.FAs,h,p)}})},5431:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>o,_X:()=>h,jY:()=>u,mu:()=>c,ok:()=>l,y7:()=>d});var r=n(5964),s=n(206),a=n(5836),i=n(7738);function o(e){return i.vA(i.Tn(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=(0,a.YT)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,a.YT)(n,"dy","tf.grad"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(s)),[s],o);return null!=o&&i.O3(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function l(e){return i.vA(i.Tn(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.vA(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=(0,a.j1)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,a.YT)(n,"dy","tf.grads"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(...s)),s,o);return null!=o&&i.O3(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function u(e){return i.vA(i.Tn(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.vA(t instanceof s.qY,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.vA(null==n||n instanceof s.qY,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:o}=r.T2.gradients((()=>e(t)),[t],n);return p(a),{grad:a[0],value:o}}}function c(e){return i.vA(i.Tn(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.vA(Array.isArray(t)&&t.every((e=>e instanceof s.qY)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.vA(null==n||n instanceof s.qY,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=r.T2.gradients((()=>e(...t)),t,n);return null!=n&&i.O3(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(a.grads),a}}function d(e,t){i.vA(i.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),i.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof s.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.T2.registeredVariables)t.push(r.T2.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.vA(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:l,grads:u}=r.T2.gradients(e,t,null,!0);i.vA(u.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.vA(0===l.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=u[t]&&(c[e.name]=u[t])})),null!=a&&a.forEach((e=>c[e.name]=null)),{value:l,grads:c}}function h(e){return r.T2.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},5443:(e,t,n)=>{"use strict";n.d(t,{B:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({reverse_:function(e,t){const n={x:(0,a.YT)(e,"x","reverse")},i={dims:t};return r.T2.runKernel(s.D7i,n,i)}})},5462:(e,t,n)=>{"use strict";n.d(t,{AS:()=>g,DZ:()=>f,Gc:()=>v,Hi:()=>h,Hs:()=>E,IS:()=>u,ME:()=>A,Ok:()=>S,Sm:()=>o,W4:()=>k,aC:()=>m,fL:()=>c,gJ:()=>C,gY:()=>l,go:()=>w,jh:()=>b,jz:()=>I,kB:()=>y,m1:()=>p,rE:()=>x,rm:()=>d});var r=n(5964),s=n(5615),a=n(206),i=n(5116);function o(){(0,s._K)().set("PROD",!0)}function l(){(0,s._K)().set("DEBUG",!0)}function u(){(0,s._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,s._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.T2.disposeVariables()}function h(){return r.T2}function p(){return r.T2.memory()}function A(e){return r.T2.profile(e)}function f(e,t){return r.T2.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function m(e){return r.T2.keep(e)}function y(e){return r.T2.time(e)}function b(e){return r.T2.setBackend(e)}function v(){return r.T2.ready()}function I(){return r.T2.backendName}function x(e){r.T2.removeBackend(e)}function w(e){return r.T2.findBackend(e)}function k(e){return r.T2.findBackendFactory(e)}function C(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.T2.registerBackend(e,t,n)}function E(){return r.T2.backend}function S(e,t){(0,s._K)().setPlatform(e,t)}(0,a.B4)(c)},5615:(e,t,n)=>{"use strict";n.d(t,{Km:()=>l,OH:()=>a,_K:()=>o,tj:()=>u});var r=n(7738);const s="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.yL)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e[s].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}function o(){return l}let l=null;function u(e){l=e}},5631:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({acosh_:function(e){const t={x:(0,a.YT)(e,"x","acosh")};return r.T2.runKernel(s.PH8,t)}})},5632:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(5964),s=n(7738),a=n(8333),i=n(4098);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,s.SA)(e),"complex64"===t){const t=o(e,"float32"),n=(0,i.U)(e,"float32");return(0,a.f)(t,n)}const n=(0,s.FZ)((0,s.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},5645:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({real_:function(e){const t={input:(0,a.YT)(e,"input","real")};return r.T2.runKernel(s.LRy,t)}})},5656:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({logicalNot_:function(e){const t={x:(0,a.YT)(e,"x","logicalNot","bool")};return r.T2.runKernel(s.nZd,t)}})},5696:()=>{},5730:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({log1p_:function(e){const t={x:(0,a.YT)(e,"x","log1p")};return r.T2.runKernel(s.Cg$,t)}})},5770:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>i,computeFlatOffset:()=>b,computeOutShape:()=>l,getNormalizedAxes:()=>h,isSliceContinous:()=>y,maskToAxes:()=>o,parseSliceParams:()=>v,sliceInfo:()=>I,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>m,stopIndicesWithElidedDims:()=>A,stridesForAxis:()=>f,stridesWithElidedDims:()=>u});var r=n(7738);const s=-2,a=-1;function i(e,t,n){const s=e.shape.length;r.vA(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),r.vA(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let a=0;a<s;++a)r.vA(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function o(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function l(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function u(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function c(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function h(e,t,n,r,s,a,i,o,l){const c=e.length;let d=new Array(c),h=new Array(c),y=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;d=p(i,l,c,r,e),h=A(o,l,c,s,e),y=u(a,l,c,e)}else for(let u=0;u<c;u++)d[u]=g(i,r,a,e,u,l),h[u]=m(o,s,a,e,u,l),y[u]=f(a,u,l);return{begin:d,end:h,strides:y}}function p(e,t,n,r,s){const a=[...s],i=d(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=c(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function A(e,t,n,s,a){const i=[...a],o=d(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=c(t,n,r);let o=s[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let l=0;l<i.length;l++){const e=a[l];i[l]<0&&(i[l]+=e),i[l]=r.qE(0,i[l],a[l])}return i}function f(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function g(e,t,n,s,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=s[a];return o<0&&(o+=u),o=r.qE(0,o,u-1),o}function m(e,t,n,s,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=s[a];return o<0&&(o+=u),o=l>0?r.qE(0,o,u):r.qE(-1,o,u-1),o}function y(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function b(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function v(e,t,n){let s;const a=e.shape.length;let i;return s="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{r.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.vA(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,i]}function I(e,t,n,r,i,o,l,u,c){let d;if(null==r?(d=new Array(t.length),d.fill(1)):d=r,null!=l&&0!==(l&l-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:i,endMask:o,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:c};for(let s=0;s<p.dims;s++)h&&0!==(1<<s&u)&&p.numAddAxisAfterEllipsis++,1<<s&l&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const A={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,A);let f=!0,g=!0,m=!0;const y=[],b=[];for(let s=0;s<e.length;++s){if(0===A.strides[s])throw Error(`strides[${s}] must be non-zero`);const t=!!(A.shrinkAxisMask&1<<s),n=e[s];if(-1===n){y.push(t?1:-1);continue}const r=[A.beginMask&1<<s,A.endMask&1<<s],a=[A.strides[s]>0?0:-1,A.strides[s]>0?n:n-1];if(t&&A.strides[s]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===A.strides[s];const i=!!(A.beginMask&1<<s&&A.endMask&1<<s);if(A.beginValid&&A.endValid){if(t){const e=A.begin[s]<0?n+A.begin[s]:A.begin[s];if(A.begin[s]=e,A.end[s]=A.begin[s]+1,e<0||e>=n)throw Error(`slice index ${A.begin[s]} of dimension ${s} out of bounds.`)}else A.begin[s]=x(A.begin[s],0,A.strides[s],n,r,a),A.end[s]=x(A.end[s],1,A.strides[s],n,r,a);const e=1===A.strides[s]&&0===A.begin[s]&&A.end[s]===n;f=f&&e,g=g&&(0===s&&1===A.strides[s]||e)}else f=f&&1===A.strides[s]&&i,g=g&&(0===s&&1===A.strides[s]||i);let o,l=!1;if(A.beginValid&&A.endValid?(o=A.end[s]-A.begin[s],l=!0):t?(o=1,l=!0):i&&n>=0&&(o=A.strides[s]<0?-n:n,l=!0),l){let e;e=0===o||o<0!==A.strides[s]<0?0:Math.trunc(o/A.strides[s])+(o%A.strides[s]!==0?1:0),y.push(e)}else y.push(-1)}for(let a=0;a<A.finalShapeGatherIndices.length;++a){const e=A.finalShapeGatherIndices[a];e>=0?b.push(y[e]):e===s&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>A.finalShapeGatherIndices[t]!==s)),finalShape:b,isIdentity:f,sliceDim0:g,isSimpleSlice:m,begin:A.begin,end:A.end,strides:A.strides}}function x(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},5829:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>w,CY:()=>h,Ej:()=>S,P8:()=>k,Rl:()=>E,Xf:()=>N,aG:()=>d,jf:()=>x,l3:()=>I,oR:()=>T,s5:()=>m,zV:()=>C});var r=n(8333),s=n(4904),a=n(7738),i=n(3066),o=n(3395),l=n(5462),u=n(5615);const c=4;async function d(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+c*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=c,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:y(await Promise.all(r)),specs:n}}function h(e,t){const n=new o.D(e),r={};let s=0;for(const a of t){const e=p(a,((e,t)=>n.slice(s+e,s+t)));r[a.name]=f(a,n.slice(s,s+e)),s+=e}return r}function p(e,t){const n=(0,a.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}async function A(e,t){const n=(0,a.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(await t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}function f(e,t){const n=e.name,o=e.dtype,l=e.shape,u=(0,a.Ze)(l);let d,h=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const s=i.i[r.dtype],a="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){d=new Float32Array(a.length);for(let e=0;e<a.length;e++){const t=a[e];d[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i],o=e[n[s>>10]+(1023&s)]+t[s>>10];a[i]=o}return new Float32Array(s)}}();d=e(a)}}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${n}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);d=new Int32Array(a.length);for(let e=0;e<a.length;e++){const t=a[e];d[e]=Math.round(t*r.scale+r.min)}}h+=u*s}else if("string"===o){const n=(0,a.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+c))[0];h+=c;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=i.i[o];if("float32"===o)d=new Float32Array(t);else if("int32"===o)d=new Int32Array(t);else{if("bool"!==o){if("complex64"===o){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const a=(0,s.O)(e,l,"float32"),i=(0,s.O)(n,l,"float32"),o=(0,r.f)(a,i);return a.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${o}`)}d=new Uint8Array(t)}h+=u*e}return(0,s.O)(d,l,o)}async function g(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function m(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const i of t){const e=await A(i,(async(e,t)=>(s=await g(r,s,t),s.slice(e,t))));s=await g(r,s,e);const t=s.slice(0,e);s=s.slice(e);const o=f(i,t);if(n[i.name]=o,"webgpu"===(0,l.jz)()){const e=(0,l.Hs)();"uploadToGPU"in e&&(0,a.Ze)(o.shape)>=(0,u._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function y(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const b="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function v(e){return b?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function I(e){if(b)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function x(e){if(b){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function w(e){return o.D.join(e)}function k(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function C(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function E(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function S(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),E(e,n,r)}function T(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:v(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:v(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new o.D(e.weightData).byteLength}}function N(e){const t=[];for(const n of e)t.push(...n.weights);return t}},5836:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>u,YT:()=>h,j1:()=>p});var r=n(5964),s=n(5615),a=n(206),i=n(2307),o=n(9801),l=n(7738);function u(e,t){let n=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.Nw)(e))return[e.buffer.size/(null==t?4:(0,l.jv)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.isTypedArray)(e))return void(0,l.vA)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,l.vA)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,l.vA)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)c(e[s],r,n.concat(s))}function d(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,a.tp)())return d(s,e.dtype,t,n),e;let i=(0,l.X$)(e);if("string"!==i&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),d(s,i,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=u(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return r.T2.makeTensor(h,c,i)}function p(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>h(e,`${t}[${s}]`,n,r)))}},5940:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({mirrorPad_:function(e,t,n){i.vA("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,a.YT)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.vA(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const l="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.vA(2===t[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.vA(t[r][0]>=0&&t[r][0]<=o.shape[r]-l&&t[r][1]>=0&&t[r][1]<=o.shape[r]-l,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-l} or less than 0 for input of shape ${o.shape}`));const u={paddings:t,mode:n},c={x:o};return r.T2.runKernel(s.x7F,c,u)}})},5964:(e,t,n)=>{"use strict";n.d(t,{T2:()=>v,Ye:()=>b});var r=n(1102),s=n(5615),a=n(3790),i=n(1146),o=n(9603),l=n(5348),u=n(9801),c=n(7738);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,s._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<r.length;s++){const t=r[s];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,s,a){const i="number"===typeof r?c.av(`${r}ms`,9):r.error,o=c.av(e,25),l=t.rank,u=t.size,d=c.av(t.shape.toString(),14);let h="";for(const c in s){const e=s[c];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var A=n(206),f=n(5116);function g(e){return null!=e.kernelName}class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(l.i(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,o.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=v.runKernel(i.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return v.runKernel(i.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,o._5)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=(0,o._5)(t,this.backendName);c.vA(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let A;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(A=this.profiler.profileKernel(u,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(A),t=A.outputs):t=i()})),r&&this.addTapeNode(u,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:A.timeMs,extraInfo:A.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.vQ)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(c.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&c.Kg(e[0])&&(s=e.map((e=>u.encodeString(e))));const a=r.write(s,t,n),i=new A.qY(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.SL)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new A.qY(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new A.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof A.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},l=(0,o.vQ)(e);null!=l&&(r=l.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.Ty(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.vA(s instanceof A.qY,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,c.FZ)((0,c.Ze)(e),"float32");return v.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!c.r1(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),I);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){var t=this;return c.vA(c.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];let a;c.vA(r.every((e=>e instanceof A.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};r.forEach(((e,t)=>{i[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(a=e(...r,n),c.vA(a.value instanceof A.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.vA(c.Tn(a.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),a.value),backwardsFunc:(e,t)=>{const n=a.gradFunc(e,t),s=Array.isArray(n)?n:[n];c.vA(s.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.vA(s.every((e=>e instanceof A.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,a.L)();if(null==e._tfengine){const t=new s.OH(e);e._tfengine=new y(t)}return(0,s.tj)(e._tfengine.ENV),(0,A.qP)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const v=b();function I(e,t){const n={a:e,b:t};return v.runKernel(i.OMN,n)}},5970:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var r=n(5964),s=n(5462),a=n(1146),i=n(5836),o=n(7738),l=n(8333),u=n(7359),c=n(1835),d=n(2732),h=n(5645);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,i.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),o.vA(d.rank===t.length,(()=>`Error in transpose: rank of input ${d.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and "+(d.rank-1)+` but got ${t}`))})),d.rank<=1)return d.clone();const p={x:d},A={perm:t};return"complex64"===d.dtype?(0,s.DZ)((()=>{let e=(0,h.x)(d),t=(0,u.n)(d);return e=r.T2.runKernel(a.wx0,{x:e},A),t=r.T2.runKernel(a.wx0,{x:t},A),n&&(t=(0,c.H)(t)),(0,l.f)(e,t)})):r.T2.runKernel(a.wx0,p,A)}})},6026:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,a.YT)(e,"x","argMin")},i={axis:t};return r.T2.runKernel(s.p_m,n,i)}})},6186:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const o={x:(0,a.YT)(e,"x","gather"),indices:(0,a.YT)(t,"indices","gather","int32")},l={axis:n,batchDims:i};return r.T2.runKernel(s.mxL,o,l)}})},6235:(e,t,n)=>{"use strict";var r;n.d(t,{i:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},6418:(e,t,n)=>{"use strict";n.d(t,{c:()=>l});var r=n(5964),s=n(1146),a=n(7738),i=n(2732),o=n(3943);const l=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,l){a.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,d=!1;4===t.rank&&(d=!0,c=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const h=u[4],p=c.shape[4];a.vA(5===u.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`)),a.vA(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.vA(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.vA(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),a.vA(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const A={dy:c,filter:n},f={pad:l,strides:i,inputShape:u},g=r.T2.runKernel(s.gC7,A,f);return d?(0,o.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},6485:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({batchToSpaceND_:function(e,t,n){const o=(0,a.YT)(e,"x","batchToSpaceND"),l=t.reduce(((e,t)=>e*t));i.vA(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.vA(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.vA(o.shape[0]%l===0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`));const u={x:o},c={blockShape:t,crops:n};return r.T2.runKernel(s.Ik2,u,c)}})},6491:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({atanh_:function(e){const t={x:(0,a.YT)(e,"x","atanh")};return r.T2.runKernel(s.zP9,t)}})},6507:(e,t,n)=>{"use strict";e.exports=n(1241)},6631:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({sin_:function(e){const t={x:(0,a.YT)(e,"x","sin","float32")};return r.T2.runKernel(s.hql,t)}})},6649:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const l={indices:(0,a.YT)(e,"indices","oneHot","int32")},u={dtype:o,depth:t,onValue:n,offValue:i};return r.T2.runKernel(s.urI,l,u)}})},6653:(e,t,n)=>{"use strict";n.d(t,{X:()=>s,j:()=>r});const r=1.7580993408473768,s=1.0507009873554805},6658:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(5964),s=n(2307),a=n(7738),i=n(9801);function o(e,t,n,o){if(null==o)o=(0,a.X$)(e);else if("complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.Nw)(e)||(0,s.Oj)(e)){if("float32"!==o&&"int32"!==o)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return r.T2.backend.createTensorFromGPUData(e,t||n,o)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.SA)(t);const e=(0,a.Ze)(t),r=(0,a.Ze)(n);(0,a.vA)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==(0,a.Ze)(t.slice(s));(0,a.vA)(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0),r.T2.makeTensor(e,t,o)}},6756:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({sign_:function(e){const t={x:(0,a.YT)(e,"x","sign")};return r.T2.runKernel(s.YVe,t)}})},6757:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(2732),l=n(3943);const u=(0,o.op)({dilation2d_:function(e,t,n,o){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,a.YT)(e,"x","dilation2d"),h=(0,a.YT)(t,"filter","dilation2d");i.vA(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),i.vA(3===h.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${h.rank}.`)),i.vA("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let p=d,A=!1;3===d.rank&&(p=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),A=!0),i.vA(p.shape[3]===h.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${p.shape[3]} vs ${h.shape[2]}`));const f={x:p,filter:h},g={strides:n,pad:o,dilations:u},m=r.T2.runKernel(s.jxD,f,g);return A?(0,l.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},6782:(e,t,n)=>{"use strict";n.d(t,{o:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({exp_:function(e){const t={x:(0,a.YT)(e,"x","exp")};return r.T2.runKernel(s.ox3,t)}})},6834:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({zerosLike_:function(e){const t={x:(0,a.YT)(e,"x","zerosLike")};return r.T2.runKernel(s.xJ3,t)}})},6845:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({sigmoid_:function(e){const t={x:(0,a.YT)(e,"x","sigmoid","float32")};return r.T2.runKernel(s.vI1,t)}})},6900:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>He,deregisterOp:()=>N,loadGraphModel:()=>Ye,loadGraphModelSync:()=>je,registerOp:()=>S,version_converter:()=>Ke});var r={};n.r(r),n.d(r,{json:()=>Q});var s={};n.r(s),n.d(s,{json:()=>L});var a={};n.r(a),n.d(a,{json:()=>z});var i={};n.r(i),n.d(i,{json:()=>P});var o={};n.r(o),n.d(o,{json:()=>G});var l={};n.r(l),n.d(l,{json:()=>U});var u={};n.r(u),n.d(u,{json:()=>W});var c={};n.r(c),n.d(c,{json:()=>V});var d={};n.r(d),n.d(d,{json:()=>q});var h={};n.r(h),n.d(h,{json:()=>H});var p={};n.r(p),n.d(p,{json:()=>Y});var A={};n.r(A),n.d(A,{json:()=>j});var f={};n.r(f),n.d(f,{json:()=>K});var g={};n.r(g),n.d(g,{json:()=>J});var m={};n.r(m),n.d(m,{json:()=>X});var y={};n.r(y),n.d(y,{json:()=>Z});var b={};n.r(b),n.d(b,{json:()=>ee});var v={};n.r(v),n.d(v,{json:()=>te});var I={};n.r(I),n.d(I,{json:()=>ne});var x={};n.r(x),n.d(x,{OP_SCOPE_SUFFIX:()=>be.BTT,abs:()=>be.tnl,acos:()=>be.HQu,acosh:()=>be.FqL,add:()=>be.WQq,addN:()=>be.QiD,all:()=>be.Q7R,any:()=>be.bzn,argMax:()=>be.FLi,argMin:()=>be.XRg,asin:()=>be.qRo,asinh:()=>be.yHs,atan:()=>be.rYl,atan2:()=>be.FPz,atanh:()=>be.rfv,avgPool:()=>be.$jT,avgPool3d:()=>be.sub,basicLSTMCell:()=>be.lZX,batchNorm:()=>be.$v7,batchNorm2d:()=>be.BFc,batchNorm3d:()=>be.kSi,batchNorm4d:()=>be.T5N,batchToSpaceND:()=>be.GTe,bincount:()=>be.HbZ,bitwiseAnd:()=>be.vjT,booleanMaskAsync:()=>be.ftb,broadcastArgs:()=>be.ROE,broadcastTo:()=>be.hOW,buffer:()=>be.ra8,cast:()=>be.wgE,ceil:()=>be.mkO,clipByValue:()=>be.zQh,clone:()=>be.o8B,complex:()=>be.faB,concat:()=>be.xWs,concat1d:()=>be.I1m,concat2d:()=>be.RPU,concat3d:()=>be.O5O,concat4d:()=>be.P1l,conv1d:()=>be.kA9,conv2d:()=>be.Xtf,conv2dTranspose:()=>be.wX9,conv3d:()=>be.IPL,conv3dTranspose:()=>be.jIJ,cos:()=>be.gnS,cosh:()=>be.yIG,cosineWindow:()=>be._jP,cumprod:()=>be.Lp0,cumsum:()=>be.rCv,denseBincount:()=>be.aOp,depthToSpace:()=>be.Rj8,depthwiseConv2d:()=>be.Gl3,diag:()=>be.smy,dilation2d:()=>be.X7t,div:()=>be.y4m,divNoNan:()=>be.ek5,dot:()=>be.Omf,dropout:()=>be.EZY,einsum:()=>be._3C,elu:()=>be.Pqc,enclosingPowerOfTwo:()=>be.FJY,ensureShape:()=>be.QP2,equal:()=>be.LCg,erf:()=>be.Y12,euclideanNorm:()=>be.p4S,exp:()=>be.oNF,expandDims:()=>be.UG6,expm1:()=>be.IYd,eye:()=>be.y5U,fft:()=>be.hVP,fill:()=>be.GSj,floor:()=>be.RIf,floorDiv:()=>be.wh_,fused:()=>be.cZk,gather:()=>be.kgh,gatherND:()=>be.SY9,greater:()=>be.rhj,greaterEqual:()=>be.DQN,ifft:()=>be.KGM,imag:()=>be.ngS,image:()=>be.Slp,inTopKAsync:()=>be.U4u,irfft:()=>be.ggX,isFinite:()=>be.MIs,isInf:()=>be.EN4,isNaN:()=>be.yrW,leakyRelu:()=>be.H8d,less:()=>be.M7h,lessEqual:()=>be.InN,linalg:()=>be.mPL,linspace:()=>be.mT8,localResponseNormalization:()=>be.Kgs,log:()=>be.Rm2,log1p:()=>be.Kko,logSigmoid:()=>be.nqI,logSoftmax:()=>be.HPB,logSumExp:()=>be.VZ,logicalAnd:()=>be.n76,logicalNot:()=>be.NSZ,logicalOr:()=>be.ztW,logicalXor:()=>be.rxB,losses:()=>be.YYh,lowerBound:()=>be.yzS,matMul:()=>be.NoW,max:()=>be.T9B,maxPool:()=>be.jgi,maxPool3d:()=>be.NYV,maxPoolWithArgmax:()=>be.RO,maximum:()=>be.PhQ,mean:()=>be.i2o,meshgrid:()=>be.OYQ,min:()=>be.jkA,minimum:()=>be.BpO,mirrorPad:()=>be.FFZ,mod:()=>be.ziu,moments:()=>be.Clk,movingAverage:()=>be.CRk,mul:()=>be.lKK,multiRNNCell:()=>be.YDF,multinomial:()=>be.OjQ,neg:()=>be.HZy,norm:()=>be.xbf,notEqual:()=>be.Ec,oneHot:()=>be.Mw0,ones:()=>be.SaS,onesLike:()=>be.P61,op:()=>be.op,outerProduct:()=>be.X4o,pad:()=>be.eVF,pad1d:()=>be.BZs,pad2d:()=>be.grY,pad3d:()=>be.XHu,pad4d:()=>be.WLX,pool:()=>be.dzn,pow:()=>be.n7C,prelu:()=>be.NsG,print:()=>be.yyV,prod:()=>be._eU,raggedGather:()=>be.whe,raggedRange:()=>be.iyU,raggedTensorToTensor:()=>be.Q0_,rand:()=>be._9M,randomGamma:()=>be.pR9,randomNormal:()=>be.FE$,randomStandardNormal:()=>be.m0H,randomUniform:()=>be.YeY,randomUniformInt:()=>be.HYA,range:()=>be.y17,real:()=>be.xav,reciprocal:()=>be.VOZ,relu:()=>be.VVh,relu6:()=>be.j__,reshape:()=>be.tQQ,reverse:()=>be.BEg,reverse1d:()=>be.QD2,reverse2d:()=>be.LMr,reverse3d:()=>be.I2l,reverse4d:()=>be.JYU,rfft:()=>be.z8$,round:()=>be.LIG,rsqrt:()=>be.Z$r,scalar:()=>be.d_2,scatterND:()=>be.NFr,searchSorted:()=>be.sZg,selu:()=>be.WfX,separableConv2d:()=>be.wdz,setdiff1dAsync:()=>be.F12,sigmoid:()=>be.ry7,sign:()=>be._SZ,signal:()=>be.vPA,sin:()=>be.F8e,sinh:()=>be.L0l,slice:()=>be.dik,slice1d:()=>be.Q$M,slice2d:()=>be.zAd,slice3d:()=>be.wck,slice4d:()=>be.R0O,softmax:()=>be.Vs9,softplus:()=>be.lw0,spaceToBatchND:()=>be.eDJ,sparse:()=>be.lMo,sparseToDense:()=>be.Zhr,spectral:()=>be.lOn,split:()=>be.lDo,sqrt:()=>be.RZD,square:()=>be.EwI,squaredDifference:()=>be.Pbu,squeeze:()=>be.r2V,stack:()=>be.t$z,step:()=>be.PMw,stridedSlice:()=>be.Ym9,string:()=>be.YjP,sub:()=>be.jbE,sum:()=>be.czq,tan:()=>be.Mlm,tanh:()=>be.ymU,tensor:()=>be.OEK,tensor1d:()=>be.tGX,tensor2d:()=>be.KtR,tensor3d:()=>be.$_$,tensor4d:()=>be.g9W,tensor5d:()=>be.Lpo,tensor6d:()=>be.yxw,tensorScatterUpdate:()=>be.NNh,tile:()=>be.Vsq,topk:()=>be.rfw,transpose:()=>be.mgz,truncatedNormal:()=>be.efE,unique:()=>be.AmM,unsortedSegmentSum:()=>be.zAU,unstack:()=>be.K$i,upperBound:()=>be.rni,variable:()=>be.bvq,where:()=>be._M9,whereAsync:()=>be.YJN,zeros:()=>be.Ul9,zerosLike:()=>be.POl});var w=n(119);var k,C;(0,w.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(k||(k={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(C||(C={}));const E={};function S(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};E[e]=n}function T(e){return E[e]}function N(e){delete E[e]}function B(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return R(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>R(e,n,r,s)))}const l=R(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:w.util.toNestedArray(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function R(e,t,n,r){const[s,a]=_(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[$(s,e)]));return void 0!==i?t[$(s,i)][a]:void 0}function D(e,t,n){return t[$(e,n.currentContextId)]}function F(e,t){const[n,r,s]=_(e,t);return[$(n,t&&t.currentContextId),r,s]}function $(e,t){return t?`${e}-${t}`:e}function _(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function M(e,t,n){let r=B("pad",e,t,n);if("explicit"===r){r=B("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function O(e){return e.kept?e:(0,w.clone)(e)}const Q=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],P=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],G=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],U=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],V=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],H=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Y=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],j=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],K=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],J=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],X=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Z=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class re{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,a,i,o,l,u,c,d,h,p,A,f,g,m,y,b,v,I].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=F(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=F(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=F(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:h};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=T(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=ae(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=fe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=oe(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=Ae(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=ie(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=me(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=pe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=ge(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=ce(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=de(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=ue(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=F(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:le(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=F(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=F(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function se(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,w.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ae(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return null!=s?se(s.s,r):n}function ie(e,t,n){const r=e[t];return r?r.b:n}function oe(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof s?s:parseInt(s,10)}function le(e){switch("string"===typeof e&&(e=k[e]),e){case k.DT_FLOAT:case k.DT_HALF:return"float32";case k.DT_INT32:case k.DT_INT64:case k.DT_INT8:case k.DT_UINT8:return"int32";case k.DT_BOOL:return"bool";case k.DT_DOUBLE:return"float32";case k.DT_STRING:return"string";case k.DT_COMPLEX64:case k.DT_COMPLEX128:return"complex64";default:return null}}function ue(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ce(e,t,n){const r=e[t];return r&&r.type?le(r.type):n}function de(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>le(e))):n}function he(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const r=e[t];return r&&r.shape?he(r.shape):n}function Ae(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function fe(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>se(e,r))):n}function ge(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>he(e))):n}function me(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ye{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return R(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return R(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oe(this.node.rawAttrs,e,t);if(null!=n.s)return ae(this.node.rawAttrs,e,t);if(null!=n.b)return ie(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return ce(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Ae(this.node.rawAttrs,e,t);if(null!=n.list.s)return fe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return me(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var be=n(457);function ve(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){w.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];w.util.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Ie(e){return"number"!==typeof e&&!e.some((e=>e<0))}function xe(e,t,n){let r=we(e,n);const s=!Ie(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=we(e.shape,r)})),!Ie(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function we(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class ke{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,w.scalar)(0),(0,w.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ve(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,w.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,w.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return ve(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,w.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,w.tensor)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return ve(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,w.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,w.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];(0,w.tidy)((()=>{t=(0,w.reshape)(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=(0,w.reshape)((0,w.slice)(t,i,o),this.elementShape)}return a}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}}class Ce{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ve(t,e.shape,"TensorList shape mismatch: "),(0,w.keep)(e)})),this.idTensor=(0,w.scalar)(0),this.maxNumElements=r,(0,w.keep)(this.idTensor)}copy(){return new Ce([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ve(e,this.elementShape,"TensorList shape mismatch: ");const r=xe(this.elementShape,this.tensors,e);return(0,w.tidy)((()=>{const e=this.tensors.map((e=>(0,w.reshape)(e,r)));return(0,w.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=xe(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ve(r.shape,e,"TensorList shape mismatch: "),(0,w.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ve(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,w.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ce([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ve(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=xe(this.elementShape,this.tensors,t);return(0,w.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ve(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,w.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ve(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=xe(this.elementShape,this.tensors,n);return 0===e.length?(0,w.tensor)([],[0].concat(r)):(0,w.tidy)((()=>{const t=e.map((e=>(0,w.reshape)(this.tensors[e],r)));return(0,w.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ve(this.elementShape,t,"TensorList shape mismatch: ");const n=xe(this.elementShape,this.tensors,t);return 0===this.size()?(0,w.tensor)([],[0].concat(n)):(0,w.tidy)((()=>{const e=this.tensors.map((e=>(0,w.reshape)(e,n)));return(0,w.concat)(e,0)}))}}const Ee=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=B("thenBranch",e,t,n),s=B("elseBranch",e,t,n),a=B("cond",e,t,n),i=B("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=B("body",e,t,n),s=B("cond",e,t,n),a=B("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[O(B("pred",e,t,n))];case"Switch":{const r=B("pred",e,t,n);let s=B("data",e,t,n);return s.kept||(s=O(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==R(e,t,n)));if(r){return[O(R(r,t,n))]}return}case"Enter":{const r=B("frameName",e,t,n),s=B("tensor",e,t,n);return n.enterFrame(r),[O(s)]}case"Exit":{const r=B("tensor",e,t,n);return n.exitFrame(),[O(r)]}case"NextIteration":{const r=B("tensor",e,t,n);return n.nextIteration(),[O(r)]}case"TensorArrayV3":{const r=B("size",e,t,n),s=B("dtype",e,t,n),a=B("elementShape",e,t,n),i=B("dynamicSize",e,t,n),o=B("clearAfterRead",e,t,n),l=B("identicalElementShapes",e,t,n),u=B("name",e,t,n),c=new ke(u,s,r,a,l,i,o);return n.addTensorArray(c),[c.idTensor,(0,w.scalar)(1)]}case"TensorArrayWriteV3":{const r=B("tensorArrayId",e,t,n),s=B("index",e,t,n),a=B("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=B("tensorArrayId",e,t,n),s=B("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=B("tensorArrayId",e,t,n),s=B("indices",e,t,n),a=B("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=B("tensorArrayId",e,t,n),s=B("indices",e,t,n),a=B("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=B("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=B("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=B("tensorArrayId",e,t,n),s=B("tensor",e,t,n),a=B("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=B("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,w.scalar)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=B("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=B("tensorListId",e,t,n),s=B("index",e,t,n),a=B("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=B("tensorListId",e,t,n),s=B("index",e,t,n),a=B("elementShape",e,t,n),i=B("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=B("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Ce([],n,e.dtype,r),i=(0,w.unstack)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(B("tensor",e,t,n),r,B("elementShape",e,t,n),B("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=B("elementShape",e,t,n),s=B("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=B(a,e,t,n),o=function(e,t,n,r){return new Ce([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=B("tensorListId",e,t,n),s=B("indices",e,t,n),a=B("elementShape",e,t,n),i=B("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=B("tensorListId",e,t,n),s=B("elementShape",e,t,n),a=B("elementDType",e,t,n),i=B("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ve(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,w.unstack)(e);return new Ce(s,t,r)}(B("tensor",e,t,n),B("elementShape",e,t,n),B("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=B("tensorListId",e,t,n),s=n.getTensorList(r.id),a=B("dtype",e,t,n),i=B("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=B("tensorListId",e,t,n),s=B("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=B("tensorListId",e,t,n),s=B("elementShape",e,t,n),a=B("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=B("tensor",e,t,n),s=B("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=we(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,w.tidy)((()=>{const n=[];e=(0,w.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];n[r]=(0,w.reshape)((0,w.slice)(e,o,l),a)}return e.dispose(),n})),l=new Ce([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(r,B("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=B("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,w.scalar)(s.size(),"int32")]}case"TensorListResize":{const r=B("tensorListId",e,t,n),s=B("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Se(e,t,n){const[r,s]=B("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,l="fusedbatchnorm"===r,u=B("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=B("strides",e,t,n),d=M(e,t,n),h=B("dataFormat",e,t,n).toUpperCase(),p=B("dilations",e,t,n);let[A,f]=B("args",e,t,n);i&&(f=A,A=void 0);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:A,preluArg:f,activationFunc:s,leakyreluAlpha:B("leakyreluAlpha",e,t,n)}}function Te(e,t,n){return{boxes:B("boxes",e,t,n),scores:B("scores",e,t,n),maxOutputSize:B("maxOutputSize",e,t,n),iouThreshold:B("iouThreshold",e,t,n),scoreThreshold:B("scoreThreshold",e,t,n),softNmsSigma:B("softNmsSigma",e,t,n)}}var Ne=n(8965);class Be{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,w.scalar)(0),this.tensorMap=new Map,(0,w.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ne.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,w.tidy)((()=>{const e=(0,w.unstack)(t),r=n.length,s=e.length;w.util.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,w.keep)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,w.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return(0,w.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Re(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:w.tidy;const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(B("a",e,t,n),B("b",e,t,n))];case"AddN":return[r.addN(B("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(B("a",e,t,n),B("b",e,t,n))];case"Mul":return[r.mul(B("a",e,t,n),B("b",e,t,n))];case"RealDiv":case"Div":return[r.div(B("a",e,t,n),B("b",e,t,n))];case"DivNoNan":return[r.divNoNan(B("a",e,t,n),B("b",e,t,n))];case"FloorDiv":return[r.floorDiv(B("a",e,t,n),B("b",e,t,n))];case"Sub":return[r.sub(B("a",e,t,n),B("b",e,t,n))];case"Minimum":return[r.minimum(B("a",e,t,n),B("b",e,t,n))];case"Maximum":return[r.maximum(B("a",e,t,n),B("b",e,t,n))];case"Pow":return[r.pow(B("a",e,t,n),B("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(B("a",e,t,n),B("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(B("x",e,t,n))];case"Acos":return[r.acos(B("x",e,t,n))];case"Acosh":return[r.acosh(B("x",e,t,n))];case"Asin":return[r.asin(B("x",e,t,n))];case"Asinh":return[r.asinh(B("x",e,t,n))];case"Atan":return[r.atan(B("x",e,t,n))];case"Atan2":return[r.atan2(B("x",e,t,n),B("y",e,t,n))];case"Atanh":return[r.atanh(B("x",e,t,n))];case"Ceil":return[r.ceil(B("x",e,t,n))];case"Complex":return[r.complex(B("real",e,t,n),B("imag",e,t,n))];case"Cos":return[r.cos(B("x",e,t,n))];case"Cosh":return[r.cosh(B("x",e,t,n))];case"Elu":return[r.elu(B("x",e,t,n))];case"Erf":return[r.erf(B("x",e,t,n))];case"Exp":return[r.exp(B("x",e,t,n))];case"Expm1":return[r.expm1(B("x",e,t,n))];case"Floor":return[r.floor(B("x",e,t,n))];case"Log":return[r.log(B("x",e,t,n))];case"Log1p":return[r.log1p(B("x",e,t,n))];case"Imag":return[r.imag(B("x",e,t,n))];case"Neg":return[r.neg(B("x",e,t,n))];case"Reciprocal":return[r.reciprocal(B("x",e,t,n))];case"Real":return[r.real(B("x",e,t,n))];case"Relu":return[r.relu(B("x",e,t,n))];case"Round":return[r.round(B("x",e,t,n))];case"Selu":return[r.selu(B("x",e,t,n))];case"Sigmoid":return[r.sigmoid(B("x",e,t,n))];case"Sin":return[r.sin(B("x",e,t,n))];case"Sign":return[r.sign(B("x",e,t,n))];case"Sinh":return[r.sinh(B("x",e,t,n))];case"Softplus":return[r.softplus(B("x",e,t,n))];case"Sqrt":return[r.sqrt(B("x",e,t,n))];case"Square":return[r.square(B("x",e,t,n))];case"Tanh":return[r.tanh(B("x",e,t,n))];case"Tan":return[r.tan(B("x",e,t,n))];case"ClipByValue":return[r.clipByValue(B("x",e,t,n),B("clipValueMin",e,t,n),B("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(B("x",e,t,n))];case"Rsqrt":return[r.rsqrt(R(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(B("x",e,t,n),B("alpha",e,t,n))];case"Prelu":return[r.prelu(B("x",e,t,n),B("alpha",e,t,n))];case"IsNan":return[r.isNaN(R(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(R(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(R(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return Ee(e,t,n);case"convolution":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"Conv1D":{const s=B("stride",e,t,n),a=B("pad",e,t,n),i=B("dataFormat",e,t,n).toUpperCase(),o=B("dilation",e,t,n);return[r.conv1d(B("x",e,t,n),B("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=B("strides",e,t,n),a=M(e,t,n),i=B("dataFormat",e,t,n).toUpperCase(),o=B("dilations",e,t,n);return[r.conv2d(B("x",e,t,n),B("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=Se(e,t,n);return[r.fused.conv2d({x:B("x",e,t,n),filter:B("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=Se(e,t,n);return[r.fused.depthwiseConv2d({x:B("x",e,t,n),filter:B("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=B("outputShape",e,t,n),a=B("strides",e,t,n),i=M(e,t,n);return[r.conv2dTranspose(B("x",e,t,n),B("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=B("strides",e,t,n),a=M(e,t,n),i=B("dilations",e,t,n),o=B("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(B("input",e,t,n),B("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=B("strides",e,t,n),a=B("pad",e,t,n),i=B("dataFormat",e,t,n).toUpperCase(),o=B("dilations",e,t,n);return[r.conv3d(B("x",e,t,n),B("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=B("strides",e,t,n),a=B("pad",e,t,n),i=B("kernelSize",e,t,n);return[r.avgPool(B("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=B("strides",e,t,n),a=B("pad",e,t,n),i=B("kernelSize",e,t,n);return[r.maxPool(B("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=B("strides",e,t,n),a=B("pad",e,t,n),i=B("kernelSize",e,t,n),o=B("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(B("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[l,u]}case"AvgPool3D":{const s=B("strides",e,t,n),a=B("pad",e,t,n),i=B("kernelSize",e,t,n);return[r.avgPool3d(B("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=B("strides",e,t,n),a=B("pad",e,t,n),i=B("kernelSize",e,t,n);return[r.maxPool3d(B("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=B("strides",e,t,n),a=B("pad",e,t,n),i=B("dilations",e,t,n),o=s[1],l=s[2],u=i[1],c=i[2];return[r.dilation2d(B("x",e,t,n),B("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"Fill":{const s=B("shape",e,t,n),a=B("dtype",e,t,n),i=B("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=B("start",e,t,n),a=B("stop",e,t,n),i=B("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=B("logits",e,t,n),a=B("numSamples",e,t,n),i=B("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=B("indices",e,t,n),a=B("depth",e,t,n),i=B("onValue",e,t,n),o=B("offValue",e,t,n),l=B("dtype",e,t,n);return[r.oneHot(s,a,i,o,l)]}case"Ones":return[r.ones(B("shape",e,t,n),B("dtype",e,t,n))];case"OnesLike":return[r.onesLike(B("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(B("shape",e,t,n),B("dtype",e,t,n),B("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(B("shape",e,t,n),B("minval",e,t,n),B("maxval",e,t,n),B("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(B("shape",e,t,n),B("minval",e,t,n),B("maxval",e,t,n),B("seed",e,t,n))];case"Range":{const s=B("start",e,t,n),a=B("stop",e,t,n),i=B("step",e,t,n);return[r.range(s,a,i,B("dtype",e,t,n))]}case"TruncatedNormal":{const s=B("shape",e,t,n),a=B("mean",e,t,n),i=B("stdDev",e,t,n),o=B("seed",e,t,n);return[r.truncatedNormal(s,a,i,B("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(B("shape",e,t,n),B("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(B("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:x;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Te(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Te(e,t,n),u=B("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Te(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,l)]}case"Where":{const r=s.cast(B("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(B("x",e,t,n),B("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"LowerBound":{const s=B("sortedSequence",e,t,n),a=B("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=B("x",e,t,n),a=B("k",e,t,n),i=B("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=B("sortedSequence",e,t,n),a=B("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=B("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=B("x",e,t,n),a=B("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"ResizeBilinear":{const s=B("images",e,t,n),a=B("size",e,t,n),i=B("alignCorners",e,t,n),o=B("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=B("images",e,t,n),a=B("size",e,t,n),i=B("alignCorners",e,t,n),o=B("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=B("image",e,t,n),a=B("boxes",e,t,n),i=B("boxInd",e,t,n),o=B("cropSize",e,t,n),l=B("method",e,t,n),u=B("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const s=B("images",e,t,n),a=B("transforms",e,t,n),i=B("outputShape",e,t,n),o=B("fillValue",e,t,n),l=B("interpolation",e,t,n),u=B("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=B("default",e,t,n);return[R(e.name,t,n)||s];case"Placeholder":return[R(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[O(B("x",e,t,n))];case"IdentityN":return B("x",e,t,n).map((e=>O(e)));case"Shape":return[r.tensor1d(B("x",e,t,n).shape,"int32")];case"ShapeN":return B("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(B("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(B("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=B("x",e,t,n),i=B("data",e,t,n),o=B("message",e,t,n),l=B("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"Equal":return[r.equal(B("a",e,t,n),B("b",e,t,n))];case"NotEqual":return[r.notEqual(B("a",e,t,n),B("b",e,t,n))];case"Greater":return[r.greater(B("a",e,t,n),B("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(B("a",e,t,n),B("b",e,t,n))];case"Less":return[r.less(B("a",e,t,n),B("b",e,t,n))];case"LessEqual":return[r.lessEqual(B("a",e,t,n),B("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(B("a",e,t,n),B("b",e,t,n))];case"LogicalNot":return[r.logicalNot(B("a",e,t,n))];case"LogicalOr":return[r.logicalOr(B("a",e,t,n),B("b",e,t,n))];case"Select":case"SelectV2":return[r.where(B("condition",e,t,n),B("a",e,t,n),B("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(B("a",e,t,n),B("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(B("a",e,t,n),B("b",e,t,n),B("transposeA",e,t,n),B("transposeB",e,t,n))];case"Einsum":return[r.einsum(B("equation",e,t,n),...B("tensors",e,t,n))];case"Transpose":return[r.transpose(B("x",e,t,n),B("perm",e,t,n))];case"_FusedMatMul":const[s,a]=B("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,l=B("numArgs",e,t,n),u=B("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=B("args",e,t,n);return[r.fused.matMul({a:B("a",e,t,n),b:B("b",e,t,n),transposeA:B("transposeA",e,t,n),transposeB:B("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(B("a",e,t,n),B("numLower",e,t,n),B("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(B("x",e,t,n),B("axis",e,t,n),B("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(B("x",e,t,n),B("mean",e,t,n),B("variance",e,t,n),B("offset",e,t,n),B("scale",e,t,n),B("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(B("x",e,t,n),B("radius",e,t,n),B("bias",e,t,n),B("alpha",e,t,n),B("beta",e,t,n))];case"Softmax":return[r.softmax(B("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(B("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(B("paramsNestedSplits",e,t,n),B("paramsDenseValues",e,t,n),B("indices",e,t,n),B("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(B("starts",e,t,n),B("limits",e,t,n),B("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(B("shape",e,t,n),B("values",e,t,n),B("defaultValue",e,t,n),B("rowPartitionTensors",e,t,n),B("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"Max":{const s=B("axis",e,t,n),a=B("keepDims",e,t,n);return[r.max(B("x",e,t,n),s,a)]}case"Mean":{const s=B("axis",e,t,n),a=B("keepDims",e,t,n);return[r.mean(B("x",e,t,n),s,a)]}case"Min":{const s=B("axis",e,t,n),a=B("keepDims",e,t,n);return[r.min(B("x",e,t,n),s,a)]}case"Sum":{const s=B("axis",e,t,n),a=B("keepDims",e,t,n);return[r.sum(B("x",e,t,n),s,a)]}case"All":{const s=B("axis",e,t,n),a=B("keepDims",e,t,n);return[r.all(B("x",e,t,n),s,a)]}case"Any":{const s=B("axis",e,t,n),a=B("keepDims",e,t,n);return[r.any(B("x",e,t,n),s,a)]}case"ArgMax":{const s=B("axis",e,t,n);return[r.argMax(B("x",e,t,n),s)]}case"ArgMin":{const s=B("axis",e,t,n);return[r.argMin(B("x",e,t,n),s)]}case"Prod":{const s=B("axis",e,t,n),a=B("keepDims",e,t,n);return[r.prod(B("x",e,t,n),s,a)]}case"Cumprod":{const s=B("axis",e,t,n),a=B("exclusive",e,t,n),i=B("reverse",e,t,n);return[r.cumprod(B("x",e,t,n),s,a,i)]}case"Cumsum":{const s=B("axis",e,t,n),a=B("exclusive",e,t,n),i=B("reverse",e,t,n);return[r.cumsum(B("x",e,t,n),s,a,i)]}case"Bincount":const s=B("x",e,t,n),a=B("weights",e,t,n),i=B("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=B("x",e,t,n),a=B("weights",e,t,n),i=B("size",e,t,n),o=B("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"ConcatV2":case"Concat":{const s=B("n",e,t,n),a=B("axis",e,t,n);let i=B("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=B("x",e,t,n),a=B("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=B("axis",e,t,n),a=B("batchDims",e,t,n),i=B("x",e,t,n),o=B("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=B("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=B("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=B("axis",e,t,n),a=B("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=B("begin",e,t,n),a=B("size",e,t,n);return[r.slice(B("x",e,t,n),s,a)]}case"StridedSlice":{const s=B("begin",e,t,n),a=B("end",e,t,n),i=B("strides",e,t,n),o=B("beginMask",e,t,n),l=B("endMask",e,t,n),u=B("ellipsisMask",e,t,n),c=B("newAxisMask",e,t,n),d=B("shrinkAxisMask",e,t,n),h=B("x",e,t,n);return[r.stridedSlice(h,s,a,i,o,l,u,c,d)]}case"Pack":return(0,w.tidy)((()=>{const s=B("axis",e,t,n),a=B("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=w.util.arraysEqual(e.shape,i);if(!t&&!w.util.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,s)]}));case"Unpack":{const s=B("axis",e,t,n),a=B("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=B("reps",e,t,n);return[r.tile(B("x",e,t,n),s)]}case"Split":case"SplitV":{const s=B("axis",e,t,n),a=B("numOrSizeSplits",e,t,n),i=B("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=B("indices",e,t,n),a=B("values",e,t,n),i=B("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=B("x",e,t,n),a=B("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=B("sparseIndices",e,t,n),a=B("outputShape",e,t,n),i=B("sparseValues",e,t,n),o=B("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=B("indices",e,t,n),a=B("values",e,t,n),i=B("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(B("indices",e,t,n),B("values",e,t,n),B("denseShape",e,t,n),B("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(B("inputIndices",e,t,n),B("inputShape",e,t,n),B("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(B("data",e,t,n),B("indices",e,t,n),B("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(B("data",e,t,n),B("indices",e,t,n),B("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"FFT":return[r.fft(B("x",e,t,n))];case"IFFT":return[r.ifft(B("x",e,t,n))];case"RFFT":return[r.rfft(B("x",e,t,n))];case"IRFFT":return[r.irfft(B("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(B("input",e,t,n),B("pattern",e,t,n),B("rewrite",e,t,n),B("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(B("data",e,t,n),B("dataSplits",e,t,n),B("separator",e,t,n),B("nGramWidths",e,t,n),B("leftPad",e,t,n),B("rightPad",e,t,n),B("padWidth",e,t,n),B("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(B("input",e,t,n),B("delimiter",e,t,n),B("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(B("input",e,t,n),B("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:x;switch(e.op){case"Cast":return[r.cast(B("x",e,t,n),B("dtype",e,t,n))];case"ExpandDims":{const s=B("axis",e,t,n);return[r.expandDims(B("x",e,t,n),s)]}case"Squeeze":{const s=B("axis",e,t,n);return[r.squeeze(B("x",e,t,n),s)]}case"Reshape":return[r.reshape(B("x",e,t,n),B("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(B("x",e,t,n),B("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(B("x",e,t,n),B("padding",e,t,n),B("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(B("x",e,t,n),B("padding",e,t,n),B("constantValue",e,t,n))];case"SpaceToBatchND":{const s=B("blockShape",e,t,n),a=B("paddings",e,t,n);return[r.spaceToBatchND(B("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=B("blockShape",e,t,n),a=B("crops",e,t,n);return[r.batchToSpaceND(B("x",e,t,n),s,a)]}case"DepthToSpace":{const s=B("blockSize",e,t,n),a=B("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(B("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(B("x",e,t,n),B("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(B("s0",e,t,n),B("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=B("keyDType",e,t,n),a=B("valueDType",e,t,n),i=new Be(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=B("tableHandle",e,t,n,r),a=B("keys",e,t,n),i=B("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=B("tableHandle",e,t,n,r),a=B("keys",e,t,n),i=B("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=B("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=T(e.op);if(a&&a.customExecutor)return a.customExecutor(new ye(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class De{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Fe(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>_(e)[0])));r=r||[];const c=new Set(r.map((e=>_(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(Le(e)||ze(e)||Pe(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}function $e(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>_(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"===typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),d={};for(const f of u){d[f.name]=d[f.name]||0;for(const e of f.children)i(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...h];for(;h.length>0;){const e=h.pop(),t=c.get(e);for(const n of t.children.filter(i))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const A=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const a of t.children)n.has(a.name)&&!s.has(a.name)&&(s.add(a.name),r.push(a.name))}const a=e.filter((e=>s.has(e.name)));return a}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"===typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"===typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new _e(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new _e(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!s(o))for(const e of o.inputs){if(!n.has(e.name))throw new _e(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new _e(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(A,l),A}class _e extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Me=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Oe=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Qe=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Le(e){return Me.has(e.op)}function ze(e){return Oe.has(e.op)}function Pe(e){return Qe.has(e.op)}class Ge{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ge(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Fe(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=$e(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Le(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=a[o];if(t===n)continue;const r=e[o],s=e[t];i.has(s.name)||i.set(s.name,[]),i.get(s.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,w.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[_(e)[0]])),s=t.map((e=>_(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=(0,w.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const u={},c={};return(0,w.tidy)((()=>{const n=new De(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=_(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=Re(e,r,n,this._resourceManager);if(w.util.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>R(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!Le(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(Le(e))continue;const t=D(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return Le(e)||s.has(e.name)}if(!Le(e)&&null!=a)for(const o of a){if(i(o))continue;const e=D(o.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,w.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new De(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>R(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[_(e)[0]])),i=n.map((e=>_(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:d,syncInputs:h}=Fe(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),A=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=_(t),s=[];s[r]=e[t],A[n]=s}));const f={},g=this.getFrozenTensorIds(A),m={};for(;p.length>0;){const e=this.processStack(a,p,t,A,m,g,o,f,u);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=l.filter((e=>!Le(e)&&!R(e.name,A,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return A}processStack(e,t,n,r,s,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&B("isConstant",e.node,r,n)&&([c]=F(e.node.name,n)),null==r[e.node.name]){const d=Re(e.node,r,n,this._resourceManager);c||([c]=F(e.node.name,n));const h=n.currentContext;w.util.isPromise(d)?u.push(d.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=F(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!R(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!R(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=_(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));w.util.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&w.util.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=_(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=_(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ue{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var We=n(5829);const Ve="?tfjs-format=file",qe="model.json";class He{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:w.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ue}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return w.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,We.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Ge(re.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=re.Instance.transformGraph(e.modelInitializer);this.initializer=new Ge(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof w.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof w.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,w.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ye(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:w.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${qe}${Ve}`}(e));const r=new He(e,t,n);return await r.load(),r}function je(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const s=w.io.getWeightSpecs(n.weightsManifest),a=w.io.getModelArtifactsForJSONSync(n,s,r);t=w.io.fromMemorySync(a)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=w.io.fromMemorySync(e)}const n=new He(t);return n.load(),n}const Ke="4.22.0"},6927:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(2732),l=n(3943);const u=(0,o.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=(0,a.YT)(e,"images","resizeNearestNeighbor");i.vA(3===u.rank||4===u.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.vA(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.vA("float32"===u.dtype||"int32"===u.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.vA(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},A=r.T2.runKernel(s.jOE,h,p);return d?(0,l.t)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},6932:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},6949:(e,t,n)=>{"use strict";n.d(t,{x:()=>l});var r=n(5964),s=n(1146),a=n(5836),i=n(7738),o=n(1012);const l=(0,n(2732).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,i.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.o)(n[0]);const l=n,u={axis:t};return r.T2.runKernel(s.$dB,l,u)}})},7075:function(e,t,n){!function(e,t,n){"use strict";const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class s{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),r=await this.model.executeAsync(e);await Promise.all(r.map((e=>e.data()))),r.map((e=>e.dispose())),e.dispose()}async infer(e,t,r){const s=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),a=s.shape[1],i=s.shape[2],o=await this.model.executeAsync(s),l=o[0].dataSync(),u=o[1].dataSync();s.dispose(),n.dispose(o);const[c,d]=this.calculateMaxScores(l,o[0].shape[1],o[0].shape[2]),h=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy((()=>{const e=n.tensor2d(u,[o[1].shape[1],o[1].shape[3]]);return n.image.nonMaxSuppression(e,c,t,r,r)})),A=p.dataSync();return p.dispose(),h!==n.getBackend()&&n.setBackend(h),this.buildDetectedObjects(i,a,u,c,A,d)}buildDetectedObjects(e,t,n,s,a,i){const o=a.length,l=[];for(let u=0;u<o;u++){const o=[];for(let e=0;e<4;e++)o[e]=n[4*a[u]+e];const c=o[0]*t,d=o[1]*e,h=o[2]*t,p=o[3]*e;o[0]=d,o[1]=c,o[2]=p-d,o[3]=h-c,l.push({bbox:o,class:r[i[a[u]]+1].displayName,score:s[a[u]]})}return l}calculateMaxScores(e,t,n){const r=[],s=[];for(let a=0;a<t;a++){let t=Number.MIN_VALUE,i=-1;for(let r=0;r<n;r++)e[a*n+r]>t&&(t=e[a*n+r],i=r);r[a]=t,s[a]=i}return[r,s]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=s,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",r=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const a=new s(t,r);return await a.load(),a},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(6900),n(119))},7195:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>i,validateInput:()=>a,validateUpdateShape:()=>s});var r=n(7738);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function i(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,i=n.length;let o=1;for(let r=a;r<i;++r)o*=n[r];const l=a<1?1:a;return{sliceRank:a,numUpdates:(0,r.Ze)(t.shape)/l,sliceSize:o,strides:[...(0,r.Ur)(n.slice(0,a)),1],outputSize:(0,r.Ze)(n)}}},7205:(e,t,n)=>{"use strict";n.d(t,{v:()=>u});var r=n(5964),s=n(1146),a=n(7738),i=n(714),o=n(2732),l=n(3943);const u=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;a.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,A=!1;3===t.rank&&(A=!0,p=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),a.vA(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),a.vA(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),a.vA(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===c?h[3]:h[1],g="NHWC"===c?p.shape[3]:p.shape[1];a.vA(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),a.vA(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.s_("conv2dDerInput",u,d);const m={dy:p,filter:n},y={strides:o,pad:u,dataFormat:c,dimRoundingMode:d,inputShape:h},b=r.T2.runKernel(s.jfg,m,y);return A?(0,l.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},7359:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({imag_:function(e){const t={input:(0,a.YT)(e,"input","imag")};return r.T2.runKernel(s.dv8,t)}})},7381:(e,t,n)=>{"use strict";n.d(t,{w:()=>u});var r=n(5836),s=n(7738),a=n(1489),i=n(1763),o=n(2732),l=n(3943);const u=(0,o.op)({separableConv2d_:function(e,t,n,o,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,r.YT)(e,"x","separableConv2d"),p=(0,r.YT)(t,"depthwiseFilter","separableConv2d"),A=(0,r.YT)(n,"pointwiseFilter","separableConv2d");let f=h,g=!1;if(3===h.rank&&(g=!0,f=(0,l.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.vA(4===f.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${f.rank}.`)),s.vA(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),s.vA(4===A.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),s.vA(1===A.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${A.shape[0]}.`)),s.vA(1===A.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${A.shape[1]}.`));const m=p.shape[2],y=p.shape[3];s.vA(A.shape[2]===m*y,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*y}, but got ${A.shape[2]}.`));const b=(0,i.G)(f,p,o,u,d,c),v=(0,a.X)(b,A,1,"valid",d);return g?(0,l.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},7402:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({asin_:function(e){const t={x:(0,a.YT)(e,"x","asin")};return r.T2.runKernel(s.QKF,t)}})},7520:(e,t,n)=>{"use strict";n.d(t,{n:()=>c});var r=n(5431),s=n(5836),a=n(667),i=n(1835),o=n(2732),l=n(6845),u=n(4477);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,s.YT)(e,"x","logSigmoid");return(0,r._X)((e=>({value:(0,i.H)((0,u.l)((0,i.H)(e))),gradFunc:t=>(0,a.l)(t,(0,l.r)((0,i.H)(e)))})))(t)}})},7550:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({selu_:function(e){const t={x:(0,a.YT)(e,"x","selu")};return r.T2.runKernel(s.u$b,t)}})},7590:function(e,t,n){var r;!function(s,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),d=2*c,h=255;function p(e,t,n){var r=[],h=m(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),y(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,y(a)]}}():e,3),r),p=new A(r),b=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|p.g(4)},b.quick=function(){return p.g(4)/4294967296},b.double=b,m(y(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&f(r,p),e.state=function(){return f(p,{})}),n?(i.random=e,t):e})(b,h,"global"in t?t.global:this==i,t.state)}function A(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=h&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=h&s+1],n=n*l+i[h&(i[s]=i[a=h&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function m(e,t){for(var n,r=e+"",s=0;s<r.length;)t[h&s]=h&(n^=19*t[h&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(m(i.random(),a),e.exports){e.exports=p;try{o=n(382)}catch(b){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},7657:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({spaceToBatchND_:function(e,t,n){const o=(0,a.YT)(e,"x","spaceToBatchND");i.vA(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.vA(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.vA(o.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const l={x:o},u={blockShape:t,paddings:n};return r.T2.runKernel(s.A8B,l,u)}})},7694:(e,t,n)=>{"use strict";n.d(t,{g:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({cos_:function(e){const t={x:(0,a.YT)(e,"x","cos","float32")};return r.T2.runKernel(s.Mn0,t)}})},7733:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,a.YT)(e,"x","unsortedSegmentSum"),l=(0,a.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.vA)((0,i.E6)(n),(()=>"numSegments must be of dtype int"));const u={x:o,segmentIds:l},c={numSegments:n};return r.T2.runKernel(s.pPe,u,c)}})},7738:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2===0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function l(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(m(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function A(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function f(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function m(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1===0}function b(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function I(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function x(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function w(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function k(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function C(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function E(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:C(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function S(e,t){return T(e,t)}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function N(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function B(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function $(e){return"string"===typeof e||e instanceof String}function _(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function O(e){return Array.isArray(e)?O(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":$(e)?"string":_(e)?"bool":"float32"}function Q(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function z(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function P(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=P(e+t*o,i,n,r)}return s}function G(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return P(0,e,t,n)}function U(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function W(e,t){const n=V(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function V(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return G(e,new Float32Array(n));if("int32"===t)return G(e,new Int32Array(n));if("bool"===t)return G(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function H(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Y(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function j(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function K(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>T,BE:()=>R,E6:()=>y,Et:()=>M,FZ:()=>W,HO:()=>p,Kg:()=>$,Lm:()=>_,O3:()=>h,P8:()=>I,SA:()=>H,SL:()=>F,Sf:()=>f,Tn:()=>Q,Ty:()=>V,Ur:()=>z,X$:()=>O,XT:()=>k,Y6:()=>C,Ze:()=>A,_k:()=>j,_q:()=>w,a0:()=>s,av:()=>x,c7:()=>q,ce:()=>S,cz:()=>l,eV:()=>i,e_:()=>g,gS:()=>v,gx:()=>E,jv:()=>D,k4:()=>r,lK:()=>L,nd:()=>N,o2:()=>U,oO:()=>c,qE:()=>a,r1:()=>m,sX:()=>Y,so:()=>u,vA:()=>d,wg:()=>o,xn:()=>B,yL:()=>K,ym:()=>b,yw:()=>G})},7862:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},8013:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({isInf_:function(e){const t={x:(0,a.YT)(e,"x","isInf")};return r.T2.runKernel(s.E3$,t)}})},8025:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701);const l=(0,n(2732).op)({equal_:function(e,t){let n=(0,i.YT)(e,"a","equal","string_or_numeric"),l=(0,i.YT)(t,"b","equal","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(s.BRl,u)}})},8154:(e,t,n)=>{"use strict";n.d(t,{O:()=>l});var r=n(5836),s=n(7738),a=n(2994),i=n(2732),o=n(3943);const l=(0,i.op)({dot_:function(e,t){const n=(0,r.YT)(e,"t1","dot"),i=(0,r.YT)(t,"t2","dot");s.vA((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const l=1===n.rank?n.size:n.shape[1],u=1===i.rank?i.size:i.shape[0];if(s.vA(l===u,(()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`)),1===n.rank&&1===i.rank){const e=(0,o.t)(n,[1,-1]),t=(0,o.t)(i,[-1,1]),r=(0,a.N)(e,t);return(0,o.t)(r,[])}if(1===n.rank&&2===i.rank){const e=(0,o.t)(n,[1,-1]),t=(0,o.t)(i,[i.shape[0],i.shape[1]]),r=(0,a.N)(e,t);return(0,o.t)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=(0,o.t)(i,[-1,1]),t=(0,a.N)(n,e);return(0,o.t)(t,[t.size])}{const e=(0,o.t)(i,[i.shape[0],i.shape[1]]);return(0,a.N)(n,e)}}})},8200:(e,t,n)=>{"use strict";n.d(t,{M:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701);const l=(0,n(2732).op)({less_:function(e,t){let n=(0,i.YT)(e,"a","less","string_or_numeric"),l=(0,i.YT)(t,"b","less","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(s.mIA,u)}})},8227:(e,t,n)=>{"use strict";n.d(t,{x:()=>m});var r=n(5836),s=n(7738),a=n(9633),i=n(379),o=n(2947),l=n(9121),u=n(2732),c=n(731),d=n(3943),h=n(8965),p=n(4551),A=n(4018),f=n(1710);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,a.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,f.c)((0,a.t)(e),n);if(t===1/0)return(0,o.T)((0,a.t)(e),n);if(t===-1/0)return(0,l.j)((0,a.t)(e),n);if("euclidean"===t||2===t)return(0,p.R)((0,f.c)((0,c.n)((0,a.t)(e),(0,h.d)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.T)((0,f.c)((0,a.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.T)((0,f.c)((0,a.t)(e),n[1]),n[0]);if(t===-1/0)return(0,l.j)((0,f.c)((0,a.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p.R)((0,f.c)((0,A.E)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const m=(0,u.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=g(e=(0,r.YT)(e,"x","norm"),t,n);let l=o.shape;if(a){const t=(0,s.Y6)(n,e.shape);l=i.SM(o.shape,t)}return(0,d.t)(o,l)}})},8278:(e,t,n)=>{"use strict";n.d(t,{k:()=>u});var r=n(5836),s=n(7738),a=n(1489),i=n(714),o=n(2732),l=n(3943);const u=(0,o.op)({conv1d_:function(e,t,n,o){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,r.YT)(e,"x","conv1d"),p=(0,r.YT)(t,"filter","conv1d");let A=h,f=!1;2===h.rank&&(f=!0,A=(0,l.t)(h,[1,h.shape[0],h.shape[1]])),s.vA(3===A.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${A.rank}.`)),s.vA(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),i.s_("conv1d",o,d),s.vA(A.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${A.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),s.vA(i.G0(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),s.vA(i.qk(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),s.vA(i.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),s.vA("NWC"===u,(()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`));const g=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),m=(0,l.t)(A,[A.shape[0],1,A.shape[1],A.shape[2]]),y=[1,n],b=[1,c],v=(0,a.X)(m,g,y,o,"NHWC",b,d);return f?(0,l.t)(v,[v.shape[2],v.shape[3]]):(0,l.t)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},8282:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},8333:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({complex_:function(e,t){const n=(0,a.YT)(e,"real","complex"),o=(0,a.YT)(t,"imag","complex");i.O3(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const l={real:n,imag:o};return r.T2.runKernel(s.pr3,l)}})},8367:(e,t,n)=>{"use strict";var r=n(3766);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},8372:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(2701);const o=(0,n(2732).op)({logicalAnd_:function(e,t){const n=(0,a.YT)(e,"a","logicalAnd","bool"),o=(0,a.YT)(t,"b","logicalAnd","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return r.T2.runKernel(s.RUm,l)}})},8404:(e,t,n)=>{"use strict";n.d(t,{D:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701);const l=(0,n(2732).op)({greaterEqual_:function(e,t){let n=(0,i.YT)(e,"a","greaterEqual","string_or_numeric"),l=(0,i.YT)(t,"b","greaterEqual","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(s.lLS,u)}})},8603:(e,t,n)=>{"use strict";n.d(t,{r:()=>a});var r=n(206),s=n(7738);function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",s.SA(e),new r.yl(e,t,n)}},8661:()=>{},8671:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({acos_:function(e){const t={x:(0,a.YT)(e,"x","acos")};return r.T2.runKernel(s.Vvy,t)}})},8685:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(5964),s=n(1146),a=n(2732),i=n(3943);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,c=t,d=!1;3===t.rank&&(d=!0,c=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:c,filter:n},p={strides:a,pad:o,dimRoundingMode:u,dilations:l,inputShape:e},A=r.T2.runKernel(s.nVu,h,p);return d?(0,i.t)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},8726:(e,t,n)=>{var r=n(6932),s=n(3186),a=n(9952),i=n(8282),o=n(1288),l=n(7862),u=n(7590);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},8819:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701);const l=(0,n(2732).op)({lessEqual_:function(e,t){let n=(0,i.YT)(e,"a","lessEqual","string_or_numeric"),l=(0,i.YT)(t,"b","lessEqual","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(s.CwD,u)}})},8903:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({sinh_:function(e){const t={x:(0,a.YT)(e,"x","sinh")};return r.T2.runKernel(s.J3C,t)}})},8964:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,a.YT)(e,"x","argMax")},i={axis:t};return r.T2.runKernel(s.Jp_,n,i)}})},8965:(e,t,n)=>{"use strict";n.d(t,{d:()=>a});var r=n(9801),s=n(6658);function a(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.Q)(e,[],[],t)}},9115:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var r=n(5964),s=n(1146),a=n(5116),i=n(5836),o=n(2701),l=n(3098);const u=(0,n(2732).op)({maximum_:function(e,t){let n=(0,i.YT)(e,"a","maximum"),u=(0,i.YT)(t,"b","maximum");[n,u]=(0,a.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.w)(n,"int32"),u=(0,l.w)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.LDN,c)}})},9121:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,a.YT)(e,"x","min")},o={axis:t,keepDims:n};return r.T2.runKernel(s.lNG,i,o)}})},9165:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(5964),s=n(1146),a=n(5836),i=n(7738);const o=(0,n(2732).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,a.j1)(e,"tensors","stack","string_or_numeric");i.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,l={axis:t};return r.T2.runKernel(s.mM$,o,l)}})},9188:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(5964),s=n(1146),a=n(5116),i=n(5836);const o=(0,n(2732).op)({floorDiv_:function(e,t){let n=(0,i.YT)(e,"a","floorDiv"),o=(0,i.YT)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.ElG,l)}})},9260:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({onesLike_:function(e){const t={x:(0,a.YT)(e,"x","onesLike")};return r.T2.runKernel(s.LWX,t)}})},9282:()=>{},9367:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({prelu_:function(e,t){const n={x:(0,a.YT)(e,"x","prelu"),alpha:(0,a.YT)(t,"alpha","prelu")};return r.T2.runKernel(s.Ncv,n)}})},9441:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({relu6_:function(e){const t={x:(0,a.YT)(e,"x","relu6")};return r.T2.runKernel(s.P_L,t)}})},9588:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,a.YT)(e,"x","leakyRelu")},i={alpha:t};return r.T2.runKernel(s.X0$,n,i)}})},9603:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>f,Op:()=>c,_5:()=>l,iP:()=>p,kr:()=>h,rY:()=>A,tA:()=>d,vQ:()=>u});var r=n(5615),s=n(3790),a=n(5348);const i=(0,s.m)("kernelRegistry",(()=>new Map)),o=(0,s.m)("gradRegistry",(()=>new Map));function l(e,t){const n=g(e,t);return i.get(n)}function u(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=g(t,n);i.has(r)&&a.i(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function h(e){const{kernelName:t}=e;o.has(t)&&(0,r._K)().getBool("DEBUG")&&a.i(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){const n=g(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function A(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function f(e,t){c(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},9633:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({abs_:function(e){const t=(0,a.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.T2.runKernel(s.$zE,e)}{const e={x:t};return r.T2.runKernel(s.ljI,e)}}})},9643:(e,t,n)=>{"use strict";e.exports=n(226)},9725:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(5964),s=n(1146),a=n(5836);const i=(0,n(2732).op)({reciprocal_:function(e){const t={x:(0,a.YT)(e,"x","reciprocal")};return r.T2.runKernel(s.huO,t)}})},9742:(e,t,n)=>{"use strict";n.d(t,{Y:()=>s});var r=n(8603);function s(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const s=(0,r.r)(e,"int32"),a=(0,r.r)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=s.indexToLoc(n[r]),i=r*e.length;a.values.set(t,i)}return a.toTensor()}},9801:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.r1,arraysEqualWithNull:()=>a.e_,assert:()=>a.vA,assertNonNegativeIntegerDimensions:()=>a.SA,assertNonNull:()=>a.HO,assertShapesMatch:()=>a.O3,bytesFromStringArray:()=>a.SL,bytesPerElement:()=>a.jv,checkConversionForErrors:()=>a.nd,clamp:()=>a.qE,computeStrides:()=>a.Ur,convertBackendValuesAndArrayBuffer:()=>a.o2,createScalarValue:()=>v,createShuffledIndices:()=>a.P8,decodeString:()=>C,distSquared:()=>a.oO,encodeString:()=>k,fetch:()=>w,fingerPrint64:()=>b,flatten:()=>S,getArrayFromDType:()=>a.Ab,getTypedArrayFromDType:()=>a.ce,hasEncodingLoss:()=>a.BE,hexToLong:()=>l,indexToLoc:()=>a._k,inferDtype:()=>a.X$,inferFromImplicitShape:()=>a.XT,isBoolean:()=>a.Lm,isFunction:()=>a.Tn,isInt:()=>a.E6,isNumber:()=>a.Et,isPromise:()=>a.yL,isScalarShape:()=>a.Sf,isString:()=>a.Kg,isTypedArray:()=>E,isValidDtype:()=>a.xn,locToIndex:()=>a.sX,makeOnesTypedArray:()=>a.FZ,makeZerosNestedTypedArray:()=>a.c7,makeZerosTypedArray:()=>a.Ty,nearestDivisor:()=>a.lK,nearestLargerEven:()=>a.eV,now:()=>x,parseAxisParam:()=>a.Y6,randUniform:()=>a.so,repeatedTry:()=>a._q,rightPad:()=>a.av,shuffle:()=>a.k4,shuffleCombo:()=>a.a0,sizeFromShape:()=>a.Ze,sizeToSquarishShape:()=>a.gS,squeezeShape:()=>a.gx,sum:()=>a.cz,swap:()=>a.wg,tanh:()=>a.ym,toNestedArray:()=>a.yw,toTypedArray:()=>I});var r=n(5615),s=n(1871),a=n(7738),i=n(3985);const o=n.n(i)()||i;function l(e){return o.fromString(e,!0,16)}const u=l("c3a5c85c97cb3127"),c=l("b492b66fbe98f273"),d=l("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function A(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function m(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function y(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=g(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(g(s,44)),[s.add(r),a.add(i)]}(A(e,t),A(e,t+8),A(e,t+16),A(e,t+24),n,r)}function b(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),r=A(e,0).add(d),s=A(e,t-8);return m(g(s,37).mul(n).add(r),g(r,25).add(s).mul(n),n)}if(t>=4){const n=d.add(2*t);return m(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return h(d.mul(n).xor(u.mul(r))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=A(e,0).mul(c),s=A(e,8),a=A(e,t-8).mul(n),i=A(e,t-16).mul(d);return m(g(r.add(s),43).add(g(a,30)).add(i),r.add(g(s.add(d),18)).add(a),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=A(e,0).mul(d),s=A(e,8),a=A(e,t-8).mul(n),i=A(e,t-16).mul(d),o=g(r.add(s),43).add(g(a,30)).add(i),l=m(o,r.add(g(s.add(d),18)).add(a),n),u=A(e,16).mul(n),c=A(e,24),h=o.add(A(e,t-32)).mul(n),p=l.add(A(e,t-24)).mul(n);return m(g(u.add(c),43).add(g(h,30)).add(p),u.add(g(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(c).add(113),a=h(s.mul(d).add(113)).mul(d),i=[o.UZERO,o.UZERO],l=[o.UZERO,o.UZERO];r=r.mul(d).add(A(e,0));let p=0;const b=64*(t-1>>6),v=b+(t-1&63)-63;do{r=g(r.add(s).add(i[0]).add(A(e,p+8)),37).mul(c),s=g(s.add(i[1]).add(A(e,p+48)),42).mul(c),r=r.xor(l[1]),s=s.add(i[0]).add(A(e,p+40)),a=g(a.add(l[0]),33).mul(c),i=y(e,p,i[1].mul(c),r.add(l[0])),l=y(e,p+32,a.add(l[1]),s.add(A(e,p+16))),[a,r]=[r,a],p+=64}while(p!==b);const I=c.add(a.and(255).shl(1));return p=v,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),r=g(r.add(s).add(i[0]).add(A(e,p+8)),37).mul(I),s=g(s.add(i[1]).add(A(e,p+48)),42).mul(I),r=r.xor(l[1].mul(9)),s=s.add(i[0].mul(9).add(A(e,p+40))),a=g(a.add(l[0]),33).mul(I),i=y(e,p,i[1].mul(I),r.add(l[0])),l=y(e,p+32,a.add(l[1]),s.add(A(e,p+16))),[a,r]=[r,a],m(m(i[0],l[0],I).add(h(s).mul(u)).add(a),m(i[1],l[1],I).add(r),I)}function v(e,t){return"string"===t?k(e):I([e],t)}function I(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=S(e)),(0,r._K)().getBool("DEBUG")&&a.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function x(){return(0,r._K)().platform.now()}function w(e,t){return(0,r._K)().platform.fetch(e,t)}function k(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.encode(e,t)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.decode(e,t)}function E(e){return null!=(0,r._K)().platform.isTypedArray?(0,r._K)().platform.isTypedArray(e):(0,s.Y)(e)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||a.yL(e)||null==e||E(e)&&n)t.push(e);else if(Array.isArray(e)||E(e))for(let r=0;r<e.length;++r)S(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)S(e[s],t,n)}return t}},9851:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(5836),s=n(7738),a=n(6658);function i(e,t,n){if((0,s.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.MZ)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.Q)(e,t,i,n)}},9952:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{mx:()=>Zc,XI:()=>Vd,Nk:()=>qd,f6:()=>Yd,ct:()=>Yc,YG:()=>Xd,hH:()=>sh,z3:()=>Gh,sG:()=>Zh,uM:()=>sp,vS:()=>Ip,qB:()=>Np,GG:()=>Rp,lg:()=>Mp,rq:()=>Fp,cu:()=>jp,WR:()=>qp,GE:()=>Xp,px:()=>eA,jC:()=>fA,He:()=>yA,hE:()=>TA,BF:()=>$h,Dk:()=>QA,cl:()=>qA,_B:()=>af,ub:()=>df,_f:()=>Af,Ku:()=>vf,qy:()=>xf,Zy:()=>$f,bu:()=>Of,zv:()=>Lc,dH:()=>ld,HS:()=>Pd,yH:()=>rg,l3:()=>ag,z9:()=>og,x6:()=>hg,_m:()=>bg,eW:()=>kg,GK:()=>Sg,SP:()=>Bg,yr:()=>Dg,dl:()=>cp,Dw:()=>Lg,xT:()=>Ug,_X:()=>fd,wz:()=>Kg});var t=n(9643),r=n(8367),s=n(119),a=n(1146),i=n(3098),o=n(667),l=n(903);const u={kernelName:a.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,l.P)((0,i.w)(n,"float32"),-1))}}};var c=n(470),d=n(1835),h=n(8965),p=n(4551),A=n(4018),f=n(2583);const g={kernelName:a.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,A.E)((0,i.w)(n,"float32")),r=(0,p.R)((0,f.j)((0,h.d)(1),t));return(0,d.H)((0,c.y)(e,r))}}}},m={kernelName:a.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,f.j)((0,A.E)((0,i.w)(n,"float32")),1));return(0,c.y)(e,t)}}}};var y=n(2701),b=n(3943),v=n(1710);const I={kernelName:a.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=y.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,v.c)(t,r)),(0,b.t)(t,n.shape)},b:()=>{let t=e;const n=y.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,v.c)(t,n)),(0,b.t)(t,r.shape)}}}},x={kernelName:a.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var w=n(6834);const k={kernelName:a.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,w.P)(n)}}},C={kernelName:a.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,w.P)(n)}}},E={kernelName:a.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,p.R)((0,f.j)((0,h.d)(1),(0,A.E)((0,i.w)(n,"float32")))))}}};var S=n(1410);const T={kernelName:a.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,S.W)((0,h.d)(1),(0,A.E)((0,i.w)(n,"float32"))));return(0,c.y)(e,t)}}}},N={kernelName:a.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,S.W)((0,A.E)(n),(0,A.E)(r));let a=(0,o.l)(e,(0,c.y)(r,t));const i=(0,y.getReductionAxes)(n.shape,s);return i.length>0&&(a=(0,v.c)(a,i)),(0,b.t)(a,n.shape)},b:()=>{const t=(0,S.W)((0,A.E)(n),(0,A.E)(r));let a=(0,d.H)((0,o.l)(e,(0,c.y)(n,t)));const i=(0,y.getReductionAxes)(r.shape,s);return i.length>0&&(a=(0,v.c)(a,i)),(0,b.t)(a,r.shape)}}}},B={kernelName:a.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,S.W)((0,A.E)((0,i.w)(n,"float32")),1))}}},R={kernelName:a.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,f.j)((0,h.d)(1),(0,A.E)((0,i.w)(n,"float32"))))}}};var D=n(5964),F=n(5836),$=n(7738),_=n(714),M=n(2732);const O=(0,M.op)({avgPool3dGrad_:function(e,t,n,r,s,i){const o=(0,F.YT)(e,"dy","avgPool3dGrad"),l=(0,F.YT)(t,"input","avgPool3dGrad");let u=o,c=l,d=!1;4===l.rank&&(d=!0,u=(0,b.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,b.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),$.vA(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),$.vA(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),(0,_.s_)("avgPool3dGrad",s,i);const h={dy:u,input:c},p={filterSize:n,strides:r,pad:s,dimRoundingMode:i},A=D.T2.runKernel(a.wwC,h,p);return d?(0,b.t)(A,[A.shape[1],A.shape[2],A.shape[3],A.shape[4]]):A}}),Q={kernelName:a.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>O(e,r,s,a,i,o)}}};const L=(0,M.op)({avgPoolGrad_:function(e,t,n,r,s){const i=(0,F.YT)(e,"dy","avgPoolGrad"),o=(0,F.YT)(t,"input","avgPoolGrad");$.vA(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let l=o,u=i,c=!1;3===o.rank&&(c=!0,l=(0,b.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=(0,b.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$.vA(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),$.vA(4===l.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`));const d={dy:u,input:l},h={filterSize:n,strides:r,pad:s},p=D.T2.runKernel(a.VCH,d,h);return c?(0,b.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),z={kernelName:a.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>L(e,r,s,a,i)}}};var P=n(2994);const G={kernelName:a.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,P.N)(e,s,!1,!1),b:()=>(0,P.N)(e,r,!0,!1)}:a&&!i?{a:()=>(0,P.N)(s,e,!1,!0),b:()=>(0,P.N)(r,e,!1,!1)}:{a:()=>(0,P.N)(s,e,!0,!0),b:()=>(0,P.N)(e,r,!0,!0)}:{a:()=>(0,P.N)(e,s,!1,!0),b:()=>(0,P.N)(r,e,!0,!1)}}};var U=n(7657);const W={kernelName:a.Ik2,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>(0,U.e)(e,r,s)}}},V={kernelName:a.LB5,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let l=s.length-1;l>=0;l--)if(s[l]===a[l])i[l]=1;else if(1!==s[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>(0,v.c)(e,o,!0)}}},q={kernelName:a.KXH,gradFunc:e=>({x:()=>e.clone()})},H={kernelName:a.QDP,gradFunc:e=>({x:()=>(0,w.P)(e)})};var Y=n(8404),j=n(8819),K=n(8372),J=n(4090);const X={kernelName:a.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>(0,J._)((0,K.n)((0,Y.D)(r,s),(0,j.I)(r,a)),e,(0,w.P)(e))}}},Z={kernelName:a.$zE,inputsToSave:["x"],gradFunc:u.gradFunc};var ee=n(2885);const te={kernelName:a.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=(0,$.Y6)(s,t[0].shape)[0],i=r.map((e=>e[a]));return(0,ee.l)(e,i,a).map((e=>()=>e))}};var ne=n(5191),re=n(7205);const se={kernelName:a.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return $.vA(_.Dh(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,re.v)(r.shape,e,s,i,o,l),filter:()=>(0,ne.H)(r,e,s.shape,i,o,l)}}};var ae=n(1489);const ie={kernelName:a.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>(0,ae.X)(e,s,a,i,o,1,l),filter:()=>(0,ne.H)(e,r,s.shape,a,i,o,l)}}};const oe=(0,M.op)({conv3DBackpropFilter_:function(e,t,n,r,s){let i=e;4===e.rank&&(i=(0,b.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,b.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$.vA(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),$.vA(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),$.vA(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),$.vA(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),$.vA(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const l={x:i,dy:o},u={strides:r,pad:s,filterShape:n};return D.T2.runKernel(a.iGz,l,u)}});var le=n(6418);const ue={kernelName:a.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;$.vA((0,_.Dh)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,le.c)(i.shape,e,o,s,a),filter:()=>oe(i,e,o.shape,s,a)}}};var ce=n(6631);const de={kernelName:a.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,d.H)((0,ce.F)((0,i.w)(n,"float32"))),e)}}};var he=n(8903);const pe={kernelName:a.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,he.L)((0,i.w)(n,"float32")),e)}}};var Ae=n(379),fe=n(3159),ge=n(5970);const me={kernelName:a.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,Ae.Em)([s],r.rank);let n=(0,fe.r)(e,s,a,!i);return null!=t&&(n=(0,ge.m)(n,t)),n}}}};var ye=n(4047),be=n(8685);const ve={kernelName:a.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;$.vA(_.Dh(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return $.vA(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),$.vA(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),$.vA(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),$.vA(_.G0(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),_.s_("depthwiseConv2d",a,i),{x:()=>(0,be.l)(l.shape,e,u,s,a,o,i),filter:()=>(0,ye.x)(l,e,u.shape,s,a,o,i)}}},Ie={kernelName:a.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,i={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>D.T2.runKernel(a.bP9,i,n),filter:()=>D.T2.runKernel(a.pk0,o,n)}}},xe={kernelName:a.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>D.T2.runKernel(a.rsH,r)}}};var we=n(6782);const ke={kernelName:a._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.l)((0,we.o)((0,d.H)((0,A.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,o.l)(e,r)}}},Ce={kernelName:a.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,n)}}},Ee={kernelName:a.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,b.t)(e,n.shape)}}},Se={kernelName:a.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,we.o)(n))}}},Te={kernelName:a.ZgB,gradFunc:e=>({x:()=>(0,w.P)(e)})},Ne={kernelName:a.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,c.y)(e,(0,i.w)(r,"float32")),a=(0,y.getReductionAxes)(n.shape,s);return a.length>0?(0,b.t)((0,v.c)(t,a),n.shape):t},b:()=>{let t=(0,o.l)(e,(0,i.w)(n,"float32"));const a=(0,y.getReductionAxes)(r.shape,s);a.length>0&&(t=(0,b.t)((0,v.c)(t,a),r.shape));const l=(0,A.E)(r);return(0,d.H)((0,c.y)(t,(0,i.w)(l,"float32")))}}}};var Be=n(5009),Re=n(4481);const De={kernelName:a.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,l]=t,u=null==l?(0,h.d)(1):l,c=(0,y.getReductionAxes)(a.shape,s.shape),d=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)d.push(s.shape[e]);d.push(1)}const p=(0,f.j)(s,a),A=(0,o.l)(e,u),g=(0,Be.Z)((0,S.W)(i,(0,h.d)(r))),m=(0,o.l)((0,o.l)((0,o.l)(g,g),g),(0,h.d)(-.5));return{x:()=>1===a.rank?(0,b.t)((0,o.l)((0,o.l)(e,(0,Re.V)((0,b.t)(g,[1,1,1,a.shape[0]]),d)),u),s.shape):(0,b.t)((0,o.l)((0,o.l)(e,g),u),s.shape),mean:()=>{let e=(0,o.l)((0,o.l)(g,(0,h.d)(-1)),A);return 1===a.rank&&(e=(0,v.c)(e,c)),(0,b.t)(e,a.shape)},variance:()=>{let e=(0,o.l)((0,o.l)(m,p),A);return 1===a.rank&&(e=(0,v.c)(e,c)),(0,b.t)(e,a.shape)},scale:()=>{const t=(0,o.l)(p,g);let n=(0,o.l)(e,t);return 1===a.rank&&(n=(0,v.c)(n,c)),(0,b.t)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,v.c)(t,c)),(0,b.t)(t,a.shape)}}}};var Fe=n(9165),$e=n(7733);const _e={kernelName:a.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=(0,$.Y6)(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),l=i.length,u=r.slice(a,r.length).slice(1),c=u.length,d=Me(0,l),h=Me(l+1,l+1+c),p=Oe([i,[s],u]),A=(0,b.t)(n,p),f=(0,b.t)(t,[s]),g=Oe([[l],d,h]),m=(0,ge.m)(A,g);let y=(0,$e.z)(m,f,e.shape[o]);const v=(0,Ae.gx)(g);return y=(0,ge.m)(y,v),y};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=(0,Fe.t)(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function Me(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Oe(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Qe={kernelName:a.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,w.P)(n),b:()=>(0,w.P)(r)}}},Le={kernelName:a.lzr,gradFunc:e=>({x:()=>(0,i.w)(e,"float32")})},ze={kernelName:a.gIW,gradFunc:e=>({x:()=>(0,w.P)(e)})},Pe={kernelName:a.E3$,gradFunc:e=>({x:()=>(0,w.P)(e)})},Ge={kernelName:a.iPs,gradFunc:e=>({x:()=>(0,w.P)(e)})};var Ue=n(2783);const We={kernelName:a.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=(0,Ue.r)(r,0);return{x:()=>(0,J._)(a,e,(0,o.l)(e,s))}}},Ve={kernelName:a.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,S.W)(n,1))}}},qe={kernelName:a.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,i.w)(n,"float32"))}}},He={kernelName:a.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=(0,we.o)(r);return(0,f.j)(e,(0,o.l)((0,v.c)(e,s,!0),t))}}}};const Ye=(0,M.op)({localResponseNormalizationBackprop_:function(e,t,n){const r={x:e,y:t,dy:n},s={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return D.T2.runKernel(a.ToN,r,s)}}),je={kernelName:a.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Ye(r,s,e,a,i,o,l)}}};var Ke=n(8025);function Je(e,t,n,r){return t.rank<n.rank&&(t=(0,b.t)(t,Ae.SM(t.shape,r))),e.rank<n.rank&&(e=(0,b.t)(e,Ae.SM(e.shape,r))),{x:()=>(0,o.l)(e,(0,i.w)((0,Ke.L)(n,t),e.dtype))}}const Xe={kernelName:a.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Je(e,t[1],a,$.Y6(s,a.shape));return{x:()=>i.x()}}};var Ze=n(8200);const et={kernelName:a.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.l)(e,(0,i.w)((0,Y.D)(n,r),"float32")),b:()=>(0,o.l)(e,(0,i.w)((0,Ze.M)(n,r),"float32"))}}};const tt=(0,M.op)({maxPool3dGrad_:function(e,t,n,r,s,i,o){const l=(0,F.YT)(e,"dy","maxPool3dGrad"),u=(0,F.YT)(t,"input","maxPool3dGrad"),c=(0,F.YT)(n,"output","maxPool3dGrad");let d=l,h=u,p=c,A=!1;4===u.rank&&(A=!0,d=(0,b.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=(0,b.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=(0,b.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),$.vA(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),$.vA(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),$.vA(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),(0,_.s_)("maxPool3dGrad",i,o);const f={dy:d,input:h,output:p},g={filterSize:r,strides:s,pad:i,dimRoundingMode:o},m=D.T2.runKernel(a.cHb,f,g);return A?(0,b.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),nt={kernelName:a.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>tt(e,r,s,a,i,o,l)}}};const rt=(0,M.op)({maxPoolGrad_:function(e,t,n,r,s,i,o){const l=(0,F.YT)(e,"dy","maxPoolGrad"),u=(0,F.YT)(t,"input","maxPoolGrad"),c=(0,F.YT)(n,"output","maxPoolGrad");$.vA(u.rank===l.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`)),$.vA(4===l.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),$.vA(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),_.s_("maxPoolGrad",i,o);const d={dy:l,input:u,output:c},h={filterSize:r,strides:s,pad:i,dimRoundingMode:o};return D.T2.runKernel(a.RXX,d,h)}}),st={kernelName:a.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>rt(e,r,s,a,i,o)}}};var at=n(5632);const it={kernelName:a.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=$.Y6(s,r.shape),i=(0,Ae.lb)(r.shape,a)[1],l=$.Ze(i);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,b.t)(e,t);return(0,c.y)((0,o.l)(n,(0,at.S)(r.shape,"float32")),l)}}}},ot={kernelName:a.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Je(e,i,a,$.Y6(s,a.shape));return{x:()=>o.x()}}},lt={kernelName:a.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.l)(e,(0,i.w)((0,j.I)(n,r),"float32")),b:()=>(0,o.l)(e,(0,i.w)((0,Ue.r)(n,r),"float32"))}}};var ut=n(4039);const ct={kernelName:a.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,ut.d)(e,a,r.shape)}}};var dt=n(4243);const ht={kernelName:a.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,y.getReductionAxes)(n.shape,s);return t.length>0?(0,b.t)((0,v.c)(e,t),n.shape):e},b:()=>{const t=(0,o.l)(e,(0,d.H)((0,dt.R)((0,c.y)(n,r)))),a=(0,y.getReductionAxes)(r.shape,s);return a.length>0?(0,b.t)((0,v.c)(t,a),r.shape):t}}}},pt={kernelName:a.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,o.l)(e,(0,i.w)(r,"float32")),a=(0,y.getReductionAxes)(n.shape,s);return a.length>0?(0,b.t)((0,v.c)(t,a),n.shape):t},b:()=>{const t=(0,o.l)(e,(0,i.w)(n,"float32")),a=(0,y.getReductionAxes)(r.shape,s);return a.length>0?(0,b.t)((0,v.c)(t,a),r.shape):t}}}},At={kernelName:a.l0G,gradFunc:e=>({x:()=>(0,d.H)(e)})};var ft=n(4098);const gt={kernelName:a.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,ft.U)(n.shape,"float32")}}},mt={kernelName:a.LWX,gradFunc:e=>({x:()=>(0,w.P)(e)})};var yt=n(1240);const bt={kernelName:a.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,yt.K)(e,r).map((e=>()=>e))}},vt={kernelName:a.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,ut.d)(e,a,r.shape)}}};var It=n(815),xt=n(731);const wt={kernelName:a.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,l=r,u=y.assertAndGetBroadcastShape(a.shape,l.shape);return{a:()=>{const t=(0,i.w)(l,"float32");let n=(0,o.l)(e,(0,o.l)(t,(0,xt.n)(a,(0,f.j)(t,(0,h.d)(1)))));const r=y.getReductionAxes(a.shape,u);return r.length>0&&(n=(0,v.c)(n,r)),(0,b.t)(n,a.shape)},b:()=>{const t=(0,Ue.r)(a,0),n=(0,J._)(t,(0,It.R)(a),(0,w.P)(a));let r=(0,o.l)(e,(0,o.l)(s,n));const i=y.getReductionAxes(l.shape,u);return i.length>0&&(r=(0,v.c)(r,i)),(0,b.t)(r,l.shape)}}}},kt={kernelName:a.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,Ue.r)(n,0);return{x:()=>(0,J._)(s,e,(0,o.l)(e,r)),alpha:()=>{let t=(0,J._)(s,(0,w.P)(e),(0,o.l)(e,n));const a=(0,y.getReductionAxes)(r.shape,e.shape);return a.length>0&&(t=(0,v.c)(t,a)),(0,b.t)(t,r.shape)}}}};var Ct=n(4451);function Et(e,t,n){const r=e.shape.length,s=r-n.length,a=Ae.Em(n,r);let i=e;null!=a&&(i=(0,ge.m)(e,a));const l=i.shape.slice(),u=l.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);l.push(u);let c=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=(0,b.t)(t,r),a=(0,Ct.L)(e,n,!0,!1),i=(0,Ct.L)(e,n,!0,!0),l=(0,o.l)(a,i);return(0,o.l)(s,l)}(i.reshape(l),t,s);if(c=c.reshape(i.shape),null!=a){const e=Ae.gx(a);c=(0,ge.m)(c,e)}return c}const St={kernelName:a.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>Et(r,e,a)}}},Tt={kernelName:a.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,c.y)(e,(0,i.w)(r,"float32")),a=y.getReductionAxes(n.shape,s);return a.length>0?(0,b.t)((0,v.c)(t,a),n.shape):t},b:()=>{let t=(0,o.l)(e,(0,i.w)(n,"float32"));const a=y.getReductionAxes(r.shape,s);a.length>0&&(t=(0,b.t)((0,v.c)(t,a),r.shape));const l=(0,A.E)(r);return(0,d.H)((0,c.y)(t,(0,i.w)(l,"float32")))}}}},Nt={kernelName:a.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,d.H)((0,A.E)(n)))}}},Bt={kernelName:a.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.l)((0,j.I)(n,6),(0,l.P)(n));return{x:()=>(0,o.l)(e,(0,i.w)(r,"float32"))}}},Rt={kernelName:a.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,i.w)((0,l.P)(n),"float32"))}}},Dt={kernelName:a.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,b.t)(e,n.shape)}}},Ft={kernelName:a.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>D.T2.runKernel(a.FCQ,s,n)}}},$t={kernelName:a.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>D.T2.runKernel(a.XQy,s,n)}}};var _t=n(5443);const Mt={kernelName:a.D7i,gradFunc:(e,t,n)=>{const{dims:r}=n,s=(0,$.Y6)(r,e.shape);return{x:()=>(0,_t.B)(e,s)}}},Ot={kernelName:a.hVg,gradFunc:e=>({x:()=>(0,w.P)(e)})},Qt={kernelName:a.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.H)((0,c.y)(e,(0,o.l)((0,xt.n)(n,1.5),2)))}}};var Lt=n(5656);const zt={kernelName:a.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,i.w)((0,w.P)(n),"float32"),t:()=>(0,o.l)(e,(0,i.w)(n,e.dtype)),e:()=>(0,o.l)(e,(0,i.w)((0,Lt.N)(n),e.dtype))}}};var Pt=n(6653);const Gt={kernelName:a.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ue.r)(n,(0,h.d)(0)),r=(0,h.d)(Pt.j),s=(0,h.d)(Pt.X),a=(0,o.l)(e,s),l=(0,o.l)((0,o.l)(e,r),(0,we.o)((0,i.w)(n,"float32")));return(0,J._)(t,a,l)}}}},Ut={kernelName:a.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,o.l)(n,(0,f.j)((0,h.d)(1),n)))}}},Wt={kernelName:a.YVe,gradFunc:e=>({x:()=>(0,w.P)(e)})};var Vt=n(7694);const qt={kernelName:a.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,Vt.g)((0,i.w)(n,"float32")),e)}}};var Ht=n(4916);const Yt={kernelName:a.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,Ht.y)((0,i.w)(n,"float32")),e)}}};var jt=n(4096),Kt=n(5770);const Jt={kernelName:a.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=(0,Kt.parseSliceParams)(r,s,a),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>(0,jt.e)(e,u)}}},Xt={kernelName:a.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=(0,o.l)(e,r);return{logits:()=>(0,f.j)(a,(0,o.l)((0,v.c)(a,[s],true),r))}}};var Zt=n(6845);const en={kernelName:a.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,Zt.r)(n))}}};var tn=n(6485);const nn={kernelName:a.A8B,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>(0,tn.G)(e,r,s)}}};var rn=n(6949);const sn={kernelName:a.Blb,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,rn.x)(e,r)}}},an={kernelName:a.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,o.l)((0,p.R)((0,i.w)(n,"float32")),2))}}},on={kernelName:a.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,o.l)((0,i.w)(n,"float32"),2))}}},ln={kernelName:a.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,h.d)(2);return{a:()=>(0,o.l)(e,(0,o.l)(s,(0,f.j)(n,r))),b:()=>(0,o.l)(e,(0,o.l)(s,(0,f.j)(r,n)))}}},un={kernelName:a.pnw,gradFunc:e=>({x:()=>(0,w.P)(e)})},cn={kernelName:a.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=y.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,v.c)(t,r)),(0,b.t)(t,n.shape)},b:()=>{let t=e;const n=y.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,v.c)(t,n)),(0,b.t)((0,d.H)(t),r.shape)}}}},dn={kernelName:a.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;(0,$.Y6)(a,r.shape).forEach((e=>{s[e]=1}));const i=(0,b.t)(e,s),l=(0,o.l)(i,(0,at.S)(r.shape,"float32"));return{x:()=>l}}},hn={kernelName:a.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,A.E)((0,Vt.g)(n)))}}},pn={kernelName:a.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,f.j)((0,h.d)(1),(0,A.E)(n)),e)}}},An={kernelName:a.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=(0,w.P)(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=(0,S.W)(t,(0,ut.d)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=(0,S.W)(t,(0,ut.d)(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=(0,S.W)(t,(0,ut.d)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=(0,S.W)(t,(0,ut.d)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},fn={kernelName:a.wx0,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Ae.gx(s);return{x:()=>(0,ge.m)(e,a)}}},gn={kernelName:a.dXR,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>(0,Fe.t)(e,s)}}};var mn=n(399),yn=n(6186),bn=n(9115);const vn={kernelName:a.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,bn.P)(t,(0,w.P)(t)),r=(0,yn.k)(e,n);let s=(0,Y.D)(t,(0,h.d)(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=(0,mn.U)(s,o+1);s=(0,K.n)(s,(0,at.S)(r.shape,"bool"));const i=(0,w.P)(r);return(0,J._)(s,r,i)}(e,n)}}};const In={kernelName:a.xJ3,gradFunc:e=>({x:()=>(0,w.P)(e)})};var xn=n(9603);const wn=[u,g,m,I,x,k,C,E,T,N,B,R,Q,z,G,W,V,q,H,X,Z,te,ie,se,ue,de,pe,me,ve,Ie,Tt,xe,ke,Ce,Ee,Se,Ne,Te,De,_e,Qe,Le,ze,Pe,Ge,We,Ve,qe,He,je,Xe,Xe,et,nt,st,it,ot,lt,ct,ht,pt,At,gt,mt,bt,vt,vt,wt,kt,St,Nt,Bt,Rt,Dt,Ft,$t,Mt,Ot,Qt,zt,Gt,Ut,Wt,qt,Yt,Jt,Xt,en,nn,nn,sn,sn,an,ln,on,un,cn,dn,hn,pn,An,fn,gn,vn,In];for(const n of wn)(0,xn.kr)(n);var kn=n(9633),Cn=n(206);(0,Cn.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,kn.t)(this)};var En=n(8671);(0,Cn.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,En.H)(this)};var Sn=n(5631);(0,Cn.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Sn.F)(this)},(0,Cn.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,S.W)(this,e)};var Tn=n(1698);(0,Cn.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Tn.Q)(this,e,t)};var Nn=n(3459);(0,Cn.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Nn.b)(this,e,t)};var Bn=n(8964);(0,Cn.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Bn.F)(this,e)};var Rn=n(6026);(0,Cn.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Rn.X)(this,e)},(0,Cn.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,$.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,b.t)(this,[])},(0,Cn.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,i.w)(this,e)},(0,Cn.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,b.t)(this,[this.size])},(0,Cn.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,b.t)(this,[e,t])},(0,Cn.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,b.t)(this,[e,t,n])},(0,Cn.tp)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,b.t)(this,[e,t,n,r])},(0,Cn.tp)().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),(0,b.t)(this,[e,t,n,r,s])};var Dn=n(7402);(0,Cn.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,Dn.q)(this)};var Fn=n(3112);(0,Cn.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Fn.y)(this)};var $n=n(883);(0,Cn.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,$n.r)(this)};var _n=n(373);(0,Cn.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,_n.F)(this,e)};var Mn=n(6491);(0,Cn.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Mn.r)(this)};var On=n(1666);(0,Cn.tp)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,On.$)(this,e,t,n,r)},(0,Cn.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,tn.G)(this,e,t)};var Qn=n(1245);(0,Cn.tp)().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Qn.$)(this,e,t,n,r,s)};var Ln=n(5408);(0,Cn.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Ln.h)(this,e)},(0,Cn.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,i.w)(this,e)};var zn=n(2108);(0,Cn.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,zn.m)(this)};var Pn=n(1101);(0,Cn.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Pn.z)(this,e,t)},(0,Cn.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Cn.qY&&(e=[e]),(0,rn.x)([this,...e],t)};var Gn=n(8278);(0,Cn.tp)().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Gn.k)(this,e,t,n,r,s,a)};var Un=n(537);(0,Cn.tp)().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Un.w)(this,e,t,n,r,s)},(0,Cn.tp)().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,ae.X)(this,e,t,n,r,s,a)},(0,Cn.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,Vt.g)(this)},(0,Cn.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Ht.y)(this)},(0,Cn.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Ct.L)(this,e,t,n)},(0,Cn.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,fe.r)(this,e,t,n)};var Wn=n(2815);(0,Cn.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Wn.R)(this,e,t)};var Vn=n(1763);(0,Cn.tp)().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Vn.G)(this,e,t,n,r,s,a)};var qn=n(6757);(0,Cn.tp)().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),(0,qn.X)(this,e,t,n,r,s)};var Hn=n(3764);(0,Cn.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Hn.e)(this,e)},(0,Cn.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,c.y)(this,e)};var Yn=n(8154);(0,Cn.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Yn.O)(this,e)};var jn=n(5333);(0,Cn.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,jn.P)(this)},(0,Cn.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Ke.L)(this,e)};var Kn=n(178);(0,Cn.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,Kn.Y)(this)};var Jn=n(3218);(0,Cn.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,Jn.p)(this,e,t)},(0,Cn.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,we.o)(this)},(0,Cn.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,mn.U)(this,e)};var Xn=n(4400);(0,Cn.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Xn.I)(this)};var Zn=n(2094);(0,Cn.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,Zn.h)(this)},(0,Cn.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,b.t)(this,[this.size])},(0,Cn.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,dt.R)(this)};var er=n(9188);(0,Cn.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,er.w)(this,e)},(0,Cn.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,yn.k)(this,e,t,n)},(0,Cn.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,Y.D)(this,e)},(0,Cn.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Ue.r)(this,e)};var tr=n(725);(0,Cn.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,tr.K)(this)};var nr=n(4787);(0,Cn.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,nr.g)(this)};var rr=n(2987);(0,Cn.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,rr.M)(this)};var sr=n(8013);(0,Cn.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,sr.E)(this)};var ar=n(2883);(0,Cn.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,ar.y)(this)};var ir=n(9588);(0,Cn.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,ir.H)(this,e)},(0,Cn.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,j.I)(this,e)},(0,Cn.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,Ze.M)(this,e)};var or=n(2688);(0,Cn.tp)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,or.K)(this,e,t,n,r)};var lr=n(7520);(0,Cn.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,lr.n)(this)};var ur=n(4402);(0,Cn.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,ur.H)(this,e)};var cr=n(2855);(0,Cn.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,cr.V)(this,e,t)},(0,Cn.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,It.R)(this)};var dr=n(5730);(0,Cn.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,dr.K)(this)},(0,Cn.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,K.n)(this,e)},(0,Cn.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Lt.N)(this)};var hr=n(24);(0,Cn.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,hr.z)(this,e)};var pr=n(1412);(0,Cn.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,pr.r)(this,e)},(0,Cn.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,P.N)(this,e,t,n)};var Ar=n(1236);(0,Cn.tp)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Ar.j)(this,e,t,n,r)};var fr=n(2947);(0,Cn.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,fr.T)(this,e,t)},(0,Cn.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,bn.P)(this,e)};var gr=n(4956);(0,Cn.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,gr.i)(this,e,t)};var mr=n(9121);(0,Cn.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,mr.j)(this,e,t)};var yr=n(5225);(0,Cn.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,yr.B)(this,e)};var br=n(5940);(0,Cn.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,br.F)(this,e,t)};var vr=n(441);(0,Cn.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,vr.z)(this,e)},(0,Cn.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,o.l)(this,e)},(0,Cn.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,d.H)(this)};var Ir=n(8227);(0,Cn.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Ir.x)(this,e,t,n)};var xr=n(1727);(0,Cn.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,xr.E)(this,e)};var wr=n(6649);(0,Cn.tp)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,wr.M)(this,e,t,n)};var kr=n(9260);(0,Cn.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,kr.P)(this)},(0,Cn.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,jt.e)(this,e,t)};var Cr=n(2383);(0,Cn.tp)().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Cr.d)(this,e,t,n,r,s,a)},(0,Cn.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,xt.n)(this,e)};var Er=n(9367);(0,Cn.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Er.N)(this,e)};var Sr=n(172);(0,Cn.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Sr._)(this,e,t)};var Tr=n(9725);(0,Cn.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Tr.V)(this)};var Nr=n(4923);(0,Cn.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Nr.V)(this)};var Br=n(9441);(0,Cn.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Br.j)(this)},(0,Cn.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,b.t)(this,e.shape)},(0,Cn.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,b.t)(this,e)};var Rr=n(3054);(0,Cn.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Rr.v)(this,e,t,n)};var Dr=n(6927);(0,Cn.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Dr.b)(this,e,t,n)},(0,Cn.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,_t.B)(this,e)};var Fr=n(3846);(0,Cn.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Fr.z)(this)};var $r=n(2613);(0,Cn.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,$r.L)(this)},(0,Cn.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Be.Z)(this)};var _r=n(7550);(0,Cn.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,_r.W)(this)};var Mr=n(7381);(0,Cn.tp)().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Mr.w)(this,e,t,n,r,s,a)},(0,Cn.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Zt.r)(this)};var Or=n(6756);(0,Cn.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,Or._)(this)},(0,Cn.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,ce.F)(this)},(0,Cn.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,he.L)(this)},(0,Cn.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ut.d)(this,e,t)};var Qr=n(4295);(0,Cn.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Qr.V)(this,e)};var Lr=n(4477);(0,Cn.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Lr.l)(this)},(0,Cn.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,U.e)(this,e,t)},(0,Cn.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,ee.l)(this,e,t)},(0,Cn.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,p.R)(this)},(0,Cn.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,A.E)(this)};var zr=n(3032);(0,Cn.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,zr.P)(this,e)};var Pr=n(3901);(0,Cn.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Pr.r)(this,e)},(0,Cn.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Cn.qY?[this,e]:[this,...e];return(0,Fe.t)(n,t)},(0,Cn.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,l.P)(this,e)};var Gr=n(5031);(0,Cn.tp)().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),(0,Gr.Y)(this,e,t,n,r,s,a,i,o)},(0,Cn.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,f.j)(this,e)},(0,Cn.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,v.c)(this,e,t)};var Ur=n(4438);(0,Cn.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,Ur.M)(this)};var Wr=n(844);(0,Cn.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Wr.y)(this)},(0,Cn.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Re.V)(this,e)},(0,Cn.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,i.w)(this,"bool")},(0,Cn.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,i.w)(this,"float32")},(0,Cn.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,i.w)(this,"int32")};var Vr=n(1461);(0,Cn.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Vr.r)(this,e,t)},(0,Cn.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ge.m)(this,e)};var qr=n(4454);(0,Cn.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,qr.A)(this,e)},(0,Cn.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,$e.z)(this,e,t)},(0,Cn.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,yt.K)(this,e)},(0,Cn.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,J._)(e,this,t)},(0,Cn.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,w.P)(this)};class Hr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hr.prototype)}}class Yr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yr.prototype)}}class jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jr.prototype)}}class Kr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kr.prototype)}}class Jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jr.prototype)}}Error;class Xr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Zr(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function es(e,t){if(!e)throw new Jr(t)}function ts(e,t){let n=0;for(const r of e)r===t&&n++;return n}function ns(e){return 1===e.length?e[0]:e}function rs(e){return Array.isArray(e)?e:[e]}function ss(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function as(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let is={};function os(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ls(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>ls(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?ls(t):e[n]=t.value)}}}function us(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in is)a=is[s];else if(a=t[s],null==a)throw new jr(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new jr(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in is?[o,l]=is.className:i in t&&([o,l]=t[i]),null==o)throw new jr(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(is))e[n]=is[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},is);for(const s of Object.keys(n))is[s]=n[s];ls(a.config);const r=l(o,a.config,n,s);return is=Object.assign({},t),r}{const e=Object.assign({},is);for(const r of Object.keys(n))is[r]=n[r];const t=new o(a.config);return is=Object.assign({},e),t}}}function cs(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ds(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function hs(e){if(null==e)throw new jr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ps(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new jr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function As(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return es(n>=0),es(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function fs(e,t){Array.isArray(e)?(s.util.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>fs(e,`element ${n+1} of ${t}`)))):s.util.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${gs(e)}.`))}function gs(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>gs(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function ms(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let ys=0;function bs(){return ys++}const vs={};function Is(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in vs||(vs[e]=0),vs[e]+=1,e+vs[e].toString()}const xs=["channelsFirst","channelsLast"],ws=["nearest","bilinear"],ks=["valid","same","causal"],Cs=["max","avg"],Es=["sum","mul","concat","ave"],Ss=new Map;function Ts(e){ps(xs,"DataFormat",e)}function Ns(e){ps(ks,"PaddingMode",e)}function Bs(e){ps(Cs,"PoolMode",e)}const Rs=[];function Ds(e,t){Rs.push(e);try{const e=t();return Rs.pop(),e}catch(n){throw Rs.pop(),n}}function Fs(e){if(!Ms(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Rs.length?"":Rs.join("/")+"/")+e}function $s(e){if(!Ms(e))throw new Error("Not a valid tensor name: '"+e+"'");Ss.has(e)||Ss.set(e,0);const t=Ss.get(e);if(Ss.set(e,Ss.get(e)+1),t>0){const n=`${e}_${t}`;return Ss.set(n,1),n}return e}const _s=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ms(e){return!!e.match(_s)}function Os(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Qs(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Ls(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function zs(e,t){if(t<e)throw new jr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Ps;function Gs(){return null==Ps&&(Ps=(0,s.backend)().epsilon()),Ps}function Us(e,t){return s.cast(e,t)}function Ws(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),s.reshape(e,n)}function Vs(e,t,n){return(0,s.tidy)((()=>{switch(e.rank){case 1:return s.slice1d(e,t,n);case 2:return s.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return s.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return s.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return s.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return s.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new jr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qs(e,t,n){return(0,s.tidy)((()=>{switch(e.rank){case 1:return s.slice1d(e,t,n);case 2:return s.slice2d(e,[0,t],[e.shape[0],n]);case 3:return s.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return s.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new jr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Hs(e,t,n,r){return(0,s.tidy)((()=>{switch(e.rank){case 1:return s.slice1d(e,t,n);case 2:switch(r){case 1:return Vs(e,t,n);case 2:return qs(e,t,n);default:throw new jr(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Vs(e,t,n);case 2:return s.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qs(e,t,n);default:throw new jr(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Vs(e,t,n);case 2:return s.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return s.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qs(e,t,n);default:throw new jr(`The axis is not within the rank of the tensor ${r}`)}default:throw new jr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ys(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),s.concat(e,n)}function js(e,t){switch(e.rank){case 1:return s.concat1d([e,t]);case 2:return s.concat2d([e,t],0);case 3:return s.concat3d([e,t],0);case 4:return s.concat4d([e,t],0);default:throw new jr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ks(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new jr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return s.tile(e,t)}function Js(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;return s.randomNormal(e,t,n,r,a)}function Xs(e,t,n,r){if(e.rank<2||t.rank<2)throw new Kr(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Kr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,i=!1;return s.fused.matMul({a:e,b:t,transposeA:a,transposeB:i,bias:r?ta(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),i=a.pop();e=s.reshape(e,[-1,i]);const o=t.shape.slice(),l=o.pop(),u=o.pop(),c=[...o,l],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=s.reshape(s.transpose(t,d),[u,-1]);const h=[...a,...c],p=!1,A=!1;return s.reshape(s.fused.matMul({a:e,b:t,transposeA:p,transposeB:A,bias:r?ta(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Zs(e,t,n){return(0,s.tidy)((()=>(t=Array.isArray(t)?(0,s.tensor1d)(t,"int32"):s.cast(t,"int32"),s.gather(e,t,n))))}function ea(e){return s.mul(e,e)}function ta(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new jr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?s.reshape(t,[1,r[0],1,1,1]):s.reshape(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?s.reshape(t,[1,1,1,1,r[0]]):s.reshape(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?s.reshape(t,[1,r[0],1,1]):s.reshape(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?s.reshape(t,[1,1,1,r[0]]):s.reshape(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?s.reshape(t,[1,r[0],1]):s.reshape(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?s.reshape(t,[1,1,r[0]]):s.reshape(t,[1].concat(r))}else if(e<3)return t;throw new jr(`Unsupported input rank by biasAdd: ${t.rank}`)}function na(e,t,n){return(0,s.tidy)((()=>(null==n&&(n="channelsLast"),Ts(n),s.add(e,ta(e.rank,t,n)))))}function ra(e,t,n,r){return(0,s.tidy)((()=>s.dropout(e,t,n,r)))}function sa(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const aa=["fanIn","fanOut","fanAvg"],ia=["normal","uniform","truncatedNormal"];class oa extends s.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class la extends oa{apply(e,t){return(0,s.zeros)(e,t)}}la.className="Zeros",s.serialization.registerClass(la);class ua extends oa{apply(e,t){return(0,s.ones)(e,t)}}ua.className="Ones",s.serialization.registerClass(ua);class ca extends oa{constructor(e){if(super(),"object"!==typeof e)throw new jr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new jr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,s.tidy)((()=>(0,s.mul)((0,s.scalar)(this.value),(0,s.ones)(e,t))))}getConfig(){return{value:this.value}}}ca.className="Constant",s.serialization.registerClass(ca);class da extends oa{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,s.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}da.className="RandomUniform",s.serialization.registerClass(da);class ha extends oa{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Kr(`randomNormal does not support dType ${t}.`);return Js(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ha.className="RandomNormal",s.serialization.registerClass(ha);class pa extends oa{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Kr(`truncatedNormal does not support dType ${t}.`);return(0,s.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}pa.className="TruncatedNormal",s.serialization.registerClass(pa);class Aa extends oa{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,s.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new jr("Identity matrix initializer can only be used for 2D square matrices.");return(0,s.mul)(this.gain,(0,s.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}Aa.className="Identity",s.serialization.registerClass(Aa);class fa extends oa{constructor(e){if(super(),e.scale<0)throw new jr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ps(aa,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ps(ia,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Ts(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=Os(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=Os(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=Os(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Kr(`${this.getClassName()} does not support dType ${t}.`);return(0,s.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return(0,s.randomUniform)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}fa.className="VarianceScaling",s.serialization.registerClass(fa);class ga extends fa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fa.className}}ga.className="GlorotUniform",s.serialization.registerClass(ga);class ma extends fa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fa.className}}ma.className="GlorotNormal",s.serialization.registerClass(ma);class ya extends fa{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fa.className}}ya.className="HeNormal",s.serialization.registerClass(ya);class ba extends fa{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fa.className}}ba.className="HeUniform",s.serialization.registerClass(ba);class va extends fa{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fa.className}}va.className="LeCunNormal",s.serialization.registerClass(va);class Ia extends fa{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fa.className}}Ia.className="LeCunUniform",s.serialization.registerClass(Ia);class xa extends oa{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,s.tidy)((()=>{if(e.length<2)throw new Kr("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=s.util.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);const i=Js([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),o=s.linalg.qr(i,!1);let l=o[0];const u=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return l=(0,s.mul)(l,u.sign()),n<r&&(l=l.transpose()),(0,s.mul)((0,s.scalar)(this.gain),l.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}xa.className="Orthogonal",s.serialization.registerClass(xa);const wa={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ka(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(e,s.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Ca(e){return os(e)}function Ea(e){if("string"===typeof e){const t=e in wa?wa[e]:e;if("GlorotNormal"===t)return new ma;if("GlorotUniform"===t)return new ga;if("HeNormal"===t)return new ya;if("HeUniform"===t)return new ba;if("LeCunNormal"===t)return new va;if("LeCunUniform"===t)return new Ia;{const e={};return e.className=t,e.config={},ka(e)}}return e instanceof oa?e:ka(e)}function Sa(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ta(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Na(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new jr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ba(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new jr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ra(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Da="Variable";class Fa{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Da,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=bs(),n=null==n?Da:n,this.originalName=Fs(n),this.name=$s(this.originalName),this.trainable_=r,this.constraint=a,this.val=s.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function $a(e){return e.map((e=>e.read()))}function _a(e){e.forEach((e=>{e[0].write(e[1])}))}class Ma{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Oa{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=bs(),null!=a&&(this.originalName=Fs(a),this.name=$s(this.originalName)),this.rank=t.length}}let Qa=0;class La{constructor(e,t){this.callArgs=t,this.id=Qa++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let za=0;class Pa extends s.serialization.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=za++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ss(e)+"_"+Is(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Yr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new jr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ns(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ns(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Hr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Hr(`Layer ${this.name} is not connected, no input to return.`);return ns(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Hr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Hr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ns(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=rs(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=rs(this.inputSpec);if(t.length!==n.length)throw new jr(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const e=t[r],s=n[r];if(null==s)continue;const a=e.rank;if(null!=s.ndim&&a!==s.ndim)throw new jr(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new jr(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new jr(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&e.dtype!==s.dtype)throw new jr(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${e.dtype}.`);if(s.axes){const t=e.shape;for(const e in s.axes){const n=Number(e),a=s.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=a&&-1===[a,null].indexOf(i))throw new jr(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=e.shape[t];if(null!=n&&null!=a&&n!==a)throw new jr(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=rs(e),r=function(e){let t=!0;for(const n of rs(e))if(!(n instanceof Oa)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of rs(e))if(n instanceof Oa){t=!1;break}return t}(e);if(r===s)throw new jr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ds(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of rs(e))t.push(n.shape);this.build(ns(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=rs(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=ns(a),null!=this.activityRegularizer)throw new Kr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=rs(e);const t=[];for(const n of e)t.push(n.shape);return ns(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Oa(a,n,this,rs(e),t,this.name,r))):new Oa(a,r,this,rs(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Kr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Hr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Hr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Yr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ra(this.weights)}build(e){this.built=!0}getWeights(){return $a(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,s.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new jr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=$a(t);for(let a=0;a<r.length;++a){const i=r[a],o=t[a],l=e[a];if(!s.util.arraysEqual(i.shape,l.shape))throw new jr(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([o,l])}_a(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new jr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Ea("zeros"));const l=r.apply(t,n),u=new Fa(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=rs(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=rs(t),a=rs(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let i=0;i<s.length;i++)s[i].kerasMask=a[i]}addInboundNode(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=rs(e);t=rs(t),n=rs(n),r=rs(r),s=Ta(s),a=Ta(a);const l=[],u=[],c=[];for(const d of o)l.push(d.sourceLayer),u.push(d.nodeIndex),c.push(d.tensorIndex);new La({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ga(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Ga(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Ua extends Pa{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Is("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new jr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new jr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new jr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Oa(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new La({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new jr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ua.className="InputLayer",s.serialization.registerClass(Ua);class Wa{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Wa)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new jr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,s.cast)(t,e.dtype)}catch(n){throw new jr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Oa){if(null==this.id2Value[e.id])throw new jr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new jr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Oa){if(null==this.id2Value[e.id])throw new jr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new jr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,s.dispose)(this.id2Mask)}}const Va=new Xr,qa=new Xr;function Ha(e,t,n,r){const a=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map((e=>e.name)),u=[],c=t.names();for(const s of l)-1!==c.indexOf(s)?u.push(t.getValue(s)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=l.join(",")+"|"+t.names().sort().join(",");let h,p=Va.get(d);if(null==p){const e=function(e,t){s.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=ja(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=ja(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Ya(r)}}(o,t);p=e.sorted,h=e.recipientCounts,Va.put(d,p),qa.put(d,h)}h={},a||Object.assign(h,qa.get(d));const A=new Wa(t);for(let f=0;f<p.length;++f){if(null!=r){const e=(0,s.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=p[f],i=e.sourceLayer;if(i instanceof Ua)continue;const o=[],c=[],d=[];let g=!1;for(const n of e.inputs){const e=A.getValue(n),r=A.getMask(n);o.push(e),c.push(r),null!=r&&(g=!0),a||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==l.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=c[0]);const m=rs(i.apply(o,n));let y=null;i.supportsMasking&&(y=i.computeMask(o,c));const b=Ka(e),v=Array.isArray(b)?b:[b];for(let t=0;t<v.length;++t){A.hasKey(v[t])||A.add(v[t],m[t],Array.isArray(y)?y[0]:y);const e=l.indexOf(v[t].name);-1!==e&&(u[e]=m[t])}a||(0,s.dispose)(d)}return A.disposeMasks(),i?u:u[0]}function Ya(e){const t={};for(const n in e)t[n]=e[n].size;return t}function ja(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Ka(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Ja(e,t){return(0,s.tidy)((()=>s.sqrt(s.sum(s.mul(e,e),t,!0))))}(0,s.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Va&&Va.setMaxEntries(e),null!=qa&&qa.setMaxEntries(e)}));class Xa extends s.serialization.Serializable{getConfig(){return{}}}class Za extends Xa{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,s.tidy)((()=>{const t=Ja(e,this.axis),n=s.clipByValue(t,0,this.maxValue);return s.mul(e,s.div(n,s.add(Gs(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Za.className="MaxNorm",s.serialization.registerClass(Za);class ei extends Xa{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,s.tidy)((()=>s.div(e,s.add(Gs(),Ja(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ei.className="UnitNorm",s.serialization.registerClass(ei);class ti extends Xa{apply(e){return s.relu(e)}}ti.className="NonNeg",s.serialization.registerClass(ti);class ni extends Xa{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,s.tidy)((()=>{const t=Ja(e,this.axis),n=s.add(s.mul(this.rate,s.clipByValue(t,this.minValue,this.maxValue)),s.mul(1-this.rate,t));return s.mul(e,s.div(n,s.add(Gs(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ni.className="MinMaxNorm",s.serialization.registerClass(ni);const ri={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function si(e){return os(e)}function ai(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(e,s.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function ii(e){if(null==e)return null;if("string"===typeof e){return ai({className:e in ri?ri[e]:e,config:{}})}return e instanceof Xa?e:ai(e)}async function oi(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,s.dispose)(r)}}function li(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var ui;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ui||(ui={}));class ci{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class di{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class hi extends ci{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=(0,s.tidy)((()=>(0,s.add)(this.totals[r],(0,s.mul)(e,n))));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,s.tidy)((()=>{const e=(0,s.mul)((0,s.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,s.keep)(t[n])})))}}class pi extends ci{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class Ai extends ci{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||s.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():s.util.now();return function(){const i=null!=n?n():s.util.now();return i-a<t||(a=i,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await oi(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await oi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await oi(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await oi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await oi(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):s.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await oi(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await oi(e),await this.trainEnd(e))}}function fi(e,t){if(null==e&&(e={}),e instanceof ci)return[e];if(Array.isArray(e)&&e[0]instanceof ci)return e;return rs(e).map((e=>new Ai(e,t)))}class gi{constructor(){}static registerCallbackConstructor(e,t){s.util.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),gi.checkForDuplicate(t),null==gi.constructors[e]&&(gi.constructors[e]=[]),gi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in gi.constructors){gi.constructors[+t].forEach((t=>{if(t===e)throw new jr("Duplicate callback constructor.")}))}}static clear(){gi.constructors={}}static createCallbacks(e){const t=[];for(const n in gi.constructors){const r=+n;e>=r&&t.push(...gi.constructors[r])}return t.map((e=>new e))}}function mi(e,t,n,r,s,a,i,o,l){const u=new pi,c=[new hi,...gi.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const d=new di(c);return d.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function yi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return us(e,s.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function bi(e,t){return(0,s.tidy)((()=>{"float32"!==e.dtype&&(e=s.cast(e,"float32"));const n=s.sum(ea(e),t,!0),r=s.fill(n.shape,Gs()),a=s.sqrt(s.maximum(n,r));return s.div(e,a)}))}function vi(e,t){return(0,s.tidy)((()=>s.mean(ea(s.sub(t,e)),-1)))}function Ii(e,t){return(0,s.tidy)((()=>s.mean(s.abs(s.sub(t,e)),-1)))}function xi(e,t){return(0,s.tidy)((()=>{const n=s.sub(e,t),r=s.clipByValue(s.abs(e),Gs(),Number.MAX_VALUE),a=s.abs(s.div(n,r));return s.mul(100,s.mean(a,-1))}))}function wi(e,t){return(0,s.tidy)((()=>{const n=s.clipByValue(t,Gs(),Number.MAX_VALUE),r=s.log(s.add(1,n)),a=s.clipByValue(e,Gs(),Number.MAX_VALUE),i=s.log(s.add(1,a));return s.mean(ea(s.sub(r,i)),-1)}))}function ki(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,s.tidy)((()=>{if(n)t=s.softmax(t);else{const e=s.sum(t,t.shape.length-1,!0);t=s.div(t,e)}return t=s.clipByValue(t,Gs(),1-Gs()),s.neg(s.sum(s.mul(s.cast(e,"float32"),s.log(t)),t.shape.length-1))}))}function Ci(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,s.tidy)((()=>{const r=s.cast(s.floor(function(e){const t=[Os(e.shape)];return s.reshape(e,t)}(e)),"int32"),a=(t=s.clipByValue(t,Gs(),1-Gs())).shape;return ki(s.reshape(s.oneHot(r,a[a.length-1]),a),t,n)}))}function Ei(e,t){return(0,s.tidy)((()=>{let n;return n=s.clipByValue(t,Gs(),1-Gs()),n=s.log(s.div(n,s.sub(1,n))),s.mean(function(e,t){if(!s.util.arraysEqual(e.shape,t.shape))throw new jr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,s.tidy)((()=>{const n=s.relu(t),r=s.neg(s.abs(t));return s.add(s.sub(n,s.mul(t,e)),s.log1p(s.exp(r)))}))}(e,n),-1)}))}function Si(e,t){return(0,s.tidy)((()=>{const n=s.clipByValue(e,Gs(),1),r=s.clipByValue(t,Gs(),1);return s.sum(s.mul(e,s.log(s.div(n,r))),-1)}))}function Ti(e,t){return(0,s.tidy)((()=>{const n=bi(e,-1),r=bi(t,-1),a=s.mul(n,r);return s.neg(s.sum(a,-1))}))}gi.constructors={};const Ni={meanSquaredError:vi,meanAbsoluteError:Ii,meanAbsolutePercentageError:xi,meanSquaredLogarithmicError:wi,squaredHinge:function(e,t){return(0,s.tidy)((()=>{const n=s.maximum(0,s.sub(1,s.mul(e,t)));return s.mean(ea(n),-1)}))},hinge:function(e,t){return(0,s.tidy)((()=>{const n=s.maximum(0,s.sub(1,s.mul(e,t)));return s.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,s.tidy)((()=>{const n=s.sum(s.mul(e,t),-1),r=s.max(s.mul(s.sub(1,e),t),-1);return s.maximum(0,s.add(1,s.sub(r,n)))}))},logcosh:function(e,t){return(0,s.tidy)((()=>{const n=Math.log(2),r=s.sub(t,e),a=s.sub(s.add(r,s.softplus(s.mul(-2,r))),n);return s.mean(a,-1)}))},categoricalCrossentropy:ki,sparseCategoricalCrossentropy:Ci,binaryCrossentropy:Ei,kullbackLeiblerDivergence:Si,poisson:function(e,t){return(0,s.tidy)((()=>{const n=s.log(s.add(Gs(),t));return s.mean(s.sub(t,s.mul(e,n)),-1)}))},cosineProximity:Ti};function Bi(e){if("string"===typeof e){if(e in Ni)return Ni[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new jr(t)}return e}function Ri(e,t){return(0,s.tidy)((()=>{const n=s.mul(.5,s.onesLike(t)),r=Us(s.greater(t,n),e.dtype);return s.mean(s.equal(e,r),-1)}))}function Di(e,t){return(0,s.tidy)((()=>Us(s.equal(s.argMax(e,-1),s.argMax(t,-1)),"float32")))}function Fi(e,t){return(0,s.tidy)((()=>s.cast(s.sum(s.logicalAnd(s.equal(e,1),s.equal(t,1))),"float32")))}function $i(e,t){return Ei(e,t)}function _i(e,t){return e.rank===t.rank&&(e=s.squeeze(e,[e.rank-1])),(t=s.argMax(t,-1)).dtype!==e.dtype&&(t=s.cast(t,e.dtype)),s.cast(s.equal(e,t),"float32")}const Mi=ki,Oi=Ci,Qi={binaryAccuracy:Ri,categoricalAccuracy:Di,precision:function(e,t){return(0,s.tidy)((()=>{const n=Fi(e,t),r=function(e,t){return(0,s.tidy)((()=>s.cast(s.sum(s.logicalAnd(s.equal(e,0),s.equal(t,1))),"float32")))}(e,t),a=s.add(n,r);return s.cast(s.where(s.greater(a,0),s.div(n,a),0),"float32")}))},categoricalCrossentropy:Mi,sparseCategoricalCrossentropy:Oi,mse:vi,MSE:vi,mae:Ii,MAE:Ii,mape:xi,MAPE:xi,cosine:Ti};function Li(e){if("string"===typeof e&&e in Qi)return Qi[e];if("string"!==typeof e&&null!=e)return e;throw new jr(`Unknown metric ${e}`)}function zi(e){if(es(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(Ni))if(Ni[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Qi))if(Qi[n]===e){t=n;break}return void 0!==t?t:e.name}}const Pi=1048576;function Gi(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Ui(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Pi&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ui(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Ui(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Ui(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Wi(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Vi(a,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?qi(o[c],n,r):Hi(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?Ra(e.collectedTrainableWeights):Ra(e.trainableWeights);return t}(e),u=Ra(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Vi(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function qi(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(a){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(a){r="multiple"}Vi([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Hi(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(c){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(c){s="multiple"}const i=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],r=d.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Vi([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let d=1;d<i.length;++d)Vi(["","","","",i[d]],t,r)}function Yi(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function ji(e,t){if(null===e)return null;if("string"===typeof e)return as(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Yi(t,s,r)?n.push(r):n.push(ji(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=as(n);t[e]=ji(r,e)}}return t}}function Ki(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return ss(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Yi(t,s,r)?n.push(r):n.push(Ki(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=ss(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?Ki(r,n):r}return t}}const Ji="4.22.0";class Xi extends Pa{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Is(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ds(this.inputs).length!==this.inputs.length)throw new jr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);ds(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const m of this.outputs){const e=m.sourceLayer,t=m.nodeIndex,n=m.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const m of this.inputs){const e=m.sourceLayer,t=m.nodeIndex,n=m.tensorIndex;es(0===t,"input layer has >1 nodes"),es(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let m=0;m<this.inputLayers.length;m++){const t=this.inputLayers[m];if(!(t instanceof Ua))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${m} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const m of this.outputLayers)this.outputNames.push(m.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Yr(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Xi.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++){const e=u.inputTensors[a],r=u.inboundLayers[a],s=u.nodeIndices[a],i=u.tensorIndices[a];o(e,t,n,r,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const m of this.outputs)o(m,l,u);const c=i.slice().reverse();for(const m of c){n[m.id]=m,m.id in t||(t[m.id]=0);let e=t[m.id];const a=null==r[m.outboundLayer.id]?0:r[m.outboundLayer.id];e=Math.max(e,a),r[m.outboundLayer.id]=e,s[m.outboundLayer.id]=m.outboundLayer,t[m.id]=e;for(let r=0;r<m.inboundLayers.length;r++){const s=m.inboundLayers[r],a=m.nodeIndices[r],i=s.inboundNodes[a],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const d={};for(const m in t){const e=t[m];e in d||(d[e]=[]),d[e].push(n[m])}const h={};for(const m in r){const e=r[m];e in h||(h[e]=[]),h[e].push(s[m])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(cs);this.layers=[];for(const m of p){const e=h[m];e.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Xi&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(cs);const A=this.inputs.slice(),f=[];for(const m of p)for(const e of d[m]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===A.indexOf(n))throw new Yr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${f}`);for(const t of e.outputTensors)A.push(t);f.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const m of g){const e=g.filter((e=>e===m)).length;if(1!==e)throw new Yr(`The name "${m}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new La({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new jr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const i of this.layers)for(const[e,t]of i.weights.entries()){const a=s?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[a])throw new jr(`Duplicate weight name: ${a}`);n[a]=t,r++}const a=[];for(const i in e){let r=i;if(null==n[i]){const e=i.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[i]]);else if(t)throw new jr(`Provided weight data has no target variable: ${i}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new jr(`${e.length} of ${r} weights are not set: ${e}`)}_a(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ji}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Ki(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,s.tidy)((()=>{e=rs(e);const n=new Wa;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ha(this.outputs,n,t)}))}computeMask(e,t){return(0,s.tidy)((()=>{let n;return e=rs(e),n=null==t?Zr(null,e.length):rs(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Ta(e);if(t.length!==this.inputLayers.length)throw new jr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cs);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],s=t.nodeIndices[i],a=t.tensorIndices[i],o=n[`${e.name}_${s}_${a}`];r.push(o)}const s=Ta(e.computeOutputShape(ns(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;a.push(r)}for(let i=0;i<a.length;i++){const e=a[i];es(e in n),s.push(n[e])}return ns(s)}runInternalGraph(e,t){null==t&&(t=Zr(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],s=e[o],a=t[o];n[r.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cs);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=rs(e.call(t,u)),l=rs(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=rs(e.call(r,u)),l=rs(e.computeMask(r,i));if(e.activityRegularizer)throw new Kr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const o of this.outputs){es(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),s.push(e),a.push(t)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Xi?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=Xi.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new jr("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new jr(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new jr(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return(0,s.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Xi.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=Xi.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(a){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],i=e.tensorIndices[r];let l=t[Xi.nodeKey(s,a)];null==l&&(l=0),n.push([s.name,l,i,o])}s.push(n)}}}const o={};o.name=i.name,o.className=e,o.config=r,o.inboundNodes=s,n.push(o)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],s=Xi.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let a=t[s];null!==a&&void 0!==a||(a=0);const o=this.inputLayersTensorIndices[i];r.push([e.name,a,o])}e.inputLayers=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=Xi.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let a=t[r];null!==a&&void 0!==a||(a=0);const o=this.outputLayersTensorIndices[i];s.push([e.name,a,o])}return e.outputLayers=s,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},s={};function a(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function i(e,t){const n=[];let s;for(const i of t){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void a(e,t);const d=c.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(ns(n),s)}function o(e){const s=e.name,i=yi(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[s]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new jr(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const l=t.name,u=t.layers;for(const A of u)o(A);for(;!hs(s);)for(const e of u){const t=r[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)i(t,n)}}const c=[],d=[],h=t.inputLayers;for(const A of h){const e=A[0],t=A[1],n=A[2];es(e in r);const s=r[e].inboundNodes[t].outputTensors;c.push(s[n])}const p=t.outputLayers;for(const A of p){const e=A[0],t=A[1],n=A[2];es(e in r);const s=r[e].inboundNodes[t].outputTensors;d.push(s[n])}return new e({inputs:c,outputs:d,name:l})}get stateful(){if(this._stateful)throw new jr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,s.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Zi(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function eo(e,t){return Zi(e,t,"classWeight")}async function to(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,s.tidy)((()=>{if(1===e.shape.length)return(0,s.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,s.argMax)(e,t)}if(1===e.shape[1])return(0,s.reshape)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,s.dispose)(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,s.tensor1d)(a,"float32")}return null}function no(e,t){return(0,s.mul)(e,t)}function ro(e,t){let n,r;const a=t;n=a.xs,r=a.ys,s.util.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=so("input",e.inputNames,n),o=so("output",e.outputNames,r),l=i[0].shape[0];s.util.assert(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),s.util.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let u=0;u<i.length;u++)s.util.assert(i[u].shape[0]===l,(()=>`Batch size mismatch: input ${e.inputNames[u]} has ${i[u].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));for(let u=0;u<o.length;u++)s.util.assert(o[u].shape[0]===l,(()=>`Batch size mismatch: output ${e.outputNames[u]} has ${o[u].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));return{xs:i,ys:o}}function so(e,t,n){if(n instanceof s.Tensor)return[n];if(Array.isArray(n))return s.util.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new jr(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function ao(e,t,n){const r=null!=n.batchesPerEpoch;if(s.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),s.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),s.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),s.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),s.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(io(n.validationData))s.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Kr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const d=fi(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:A}=mi(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,c);p.setModel(e),e.history=A,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){const c={};await p.onEpochBegin(f);let d=0,h=0;for(r||(g=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=ro(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await p.onBatchBegin(h,i);const o=[];if(null!=n.classWeight){const t=eo(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await to(a[e],null,t[e]))}const c=r.concat(a).concat(o),A=l(c);s.dispose(c);for(let e=0;e<u.length;++e){const t=u[e],n=A[e];i[t]=n,s.keep(n)}await p.onBatchEnd(h,i),li(i),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(a){let t;t=io(n.validationData)?rs(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):rs(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,c),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function io(e){return"function"===typeof e.iterator}function oo(e){s.util.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function lo(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Vs(e,t,n-t))):Vs(e,t,n-t)}function uo(e,t){return s.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>uo(e,t))):Zs(e,"int32"===t.dtype?t:s.cast(t,"int32"))))}function co(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function ho(e){const t=[];e instanceof s.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Ws(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function po(e,t){if(null==e)return;const n=[];if(t instanceof s.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof s.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Ao(e){return Array.isArray(e)}function fo(e){return!function(e){return e instanceof s.Tensor}(e)&&!Ao(e)}function go(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(Ao(e)&&e.length>0)t=!0;else if(fo(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new jr(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(fo(e)){r=[];for(const n of t){if(null==e[n])throw new jr(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(Ao(e)){if(e.length!==t.length)throw new jr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new jr(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=ho(r),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new jr(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!s)continue;const r=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&r!==o)throw new jr(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return r}function mo(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new jr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new jr(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new jr(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let r=0;r<n[i].length;++r){if(0===r&&!s)continue;const o=e.shape[r],l=n[i][r];if(null!=l&&l!==o)throw new jr(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class yo extends Xi{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new jr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Wi(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>s.train.adagrad(.01),Adadelta:()=>s.train.adadelta(1,.95,Gs()),Adam:()=>s.train.adam(.001,.9,.999,Gs()),Adamax:()=>s.train.adamax(.002,.9,.999,Gs(),0),RMSProp:()=>s.train.rmsprop(.001,.9,0,Gs()),SGD:()=>s.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new jr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof s.Optimizer))throw new jr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new jr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Bi(e)))}else{const n=Bi(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new jr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Bi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ds("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ds("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Ei?-1!==["accuracy","acc"].indexOf(i)?r=Ri:-1!==["crossentropy","ce"].indexOf(i)&&(r=$i):this.lossFunctions[e]===Ci?-1!==["accuracy","acc"].indexOf(i)?r=_i:-1!==["crossentropy","ce"].indexOf(i)&&(r=Oi):-1!==["accuracy","acc"].indexOf(i)?r=Di:-1!==["crossentropy","ce"].indexOf(i)&&(r=Mi),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Li(i);s=e,n=""+zi(i)}let t;Ds(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;oo(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return ns(this.testLoop(t,e,r,n.verbose,n.steps))}finally{po(s[0],e),po(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new Kr("Verbose mode is not implemented yet.");s.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"===typeof t.next?t:await t.iterator();let l=0,u=0;for(;!r||u<n.batches;){const t=await o.next();if(i=s.tidy((()=>{if(t.value){const{xs:n,ys:r}=ro(e,t.value),o=n.concat(r),c=s.tidy((()=>a(o)));if(s.dispose(o),0===u)for(let e=0;e<c.length;++e)i.push((0,s.scalar)(0));const d=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=i[e];i[e]=s.tidy((()=>s.add(i[e],s.mul(d,t)))),u>0&&s.dispose(n)}s.dispose(c),l+=d,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<i.length;++c){const e=i[c];i[c]=s.div(i[c],l),s.dispose(e)}return ns(i)}(this,e,t)}checkNumSamples(e,t,n){let r,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new jr(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new jr(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new jr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),i=new Wa;if(e instanceof s.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new jr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const s of this.inputs){const t=e[s.name];if(null==t)throw new jr(`No value is provided for the model's input ${s.name}`);i.add(s,t)}const o=Ha(a,i);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Zr(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new jr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return s.tidy((()=>{const r=this.checkNumSamples(e);if(n)throw new Kr("Verbose predictLoop() is not implemented yet.");const a=co(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){s.tidy((()=>{const n=a[t][0],r=a[t][1],s=lo(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Wa(i);return Ha(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)))}return ns(i.map((e=>s.concat(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=ho(e);mo(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return oo(e),this.predictLoop(n,e)}finally{po(n,e)}}predictOnBatch(e){mo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Yr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];this.feedLossFns[s]===Ci?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t){const n=ds(e.map((e=>e.shape[0])));n.sort();const r=ds(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new jr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new jr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!s.util.arraysEqual(n,r))throw new jr(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=go(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=go(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[vi,Ei,ki];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===ki&&1===a.shape[a.shape.length-1])throw new jr(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new jr(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new jr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=eo(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await to(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0;return s.tidy((()=>{const i=this.checkNumSamples(t,n,a,"steps"),o=[];if(r>0)throw new Kr("Verbose mode is not implemented yet.");if(null!=a)throw new Kr("steps mode in testLoop() is not implemented yet");{const r=co(i,n),a=(0,s.tensor1d)(zs(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],l=r[n][1],u=Vs(a,i,l-i),c=uo(t,u),d=e(c);if(0===n)for(let e=0;e<d.length;++e)o.push((0,s.scalar)(0));for(let e=0;e<d.length;++e){const t=d[e];o[e]=s.add(o[e],s.mul(l-i,t))}}for(let e=0;e<o.length;++e)o[e]=s.div(o[e],i)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(ts(e,r)>1){s+=`_${ts(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Wa(e),l=Ha(this.outputs,o,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],l[n]);null!=a[n]&&(e=no(e,a[n]));const i=s.mean(e);t.push(i),u=0===n?e:s.add(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=s.mean(t(r[a],l[a]))}s.keep(e),i.push(e)}return u=s.mean(u),this.calculateLosses().forEach((e=>{u=s.add(u,e)})),u}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=e=>s.tidy((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const o=new Wa(i),l=Ha(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=s.mean(r(a[e],l[e]));n=0===e?i:s.add(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=s.mean(n(a[r],l[r]));t.push(i)}return t}))}async fit(e,t){let n,r,a,i,o,l,u,c,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const s=null==h.batchSize?32:h.batchSize;oo(s);const p=!1,A=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,s);n=A[0],r=A[1],d=A[2];let f,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Kr("validationData including sample weights is not supported yet."):new jr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);o=h.validationData[0],l=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,s);u=t[0],c=t[1],f=u.concat(c)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];u=lo(n,e,t),a=n,n=lo(n,0,e),c=lo(r,e,t),i=r,r=lo(r,0,e),f=u.concat(c)}else null!=h.validationSteps&&(g=!0);const m=n.concat(r).concat(d);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let v,I;g?(this.makeTestFunction(),v=this.testFunction,I=b.slice().concat(b.map((e=>"val_"+e)))):(v=null,f=[],I=b.slice());const x=fi(h.callbacks,h.yieldEvery);return await this.fitLoop(y,m,b,s,h.epochs,h.verbose,x,v,f,h.shuffle,I,h.initialEpoch,null,null)}finally{this.isTraining=!1,po(n,e),po(r,t),po(a,e),po(i,t),po(u,o),po(c,l),null!=d&&s.dispose(d)}}async fitLoop(e,t,n,r,a,i,o,l,u,c,d,h,p,A){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==h&&(h=0);let f=!1;if(null!=l&&null!=u&&(f=!0),null!=A&&(f=!0,null==p))throw new jr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let m;null!=g&&(m=zs(0,g)),null==i&&(i=1);const{callbackList:y,history:b}=mi(o,i,a,h,g,p,r,f,d);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<a;++v){await y.onEpochBegin(v);const a={};if(null!=p)throw new Kr("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Kr("batch shuffling is not implemneted yet");c&&s.util.shuffle(m);const i=(0,s.tensor1d)(m),o=co(g,r);for(let c=0;c<o.length;++c){const d={};if(await y.onBatchBegin(c,d),s.tidy((()=>{const h=o[c][0],p=o[c][1],A=Vs(i,h,p-h);d.batch=c,d.size=p-h;const g=uo(t,A),m=e(g);for(let e=0;e<n.length;++e){const t=n[e],r=m[e];d[t]=r,s.keep(r)}if(c===o.length-1&&f){const e=this.testLoop(l,u,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];s.keep(i),a["val_"+r]=i}}})),await y.onBatchEnd(c,d),li(d),this.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(v,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ao(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],i=this.makeTrainFunction()(r.concat(a)),o=[];for(const s of i){const e=await s.data();o.push(e[0])}return s.dispose(i),po(n[0],e),po(n[1],t),ns(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=s.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-s.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=ss(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ss(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ss(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ss(zi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ss(zi(e))));{const e={};for(const t in this.metrics)e[t]=ss(zi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=yi(ji(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=as(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>as(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=as(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>as(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=as(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=s.io.getSaveHandlers(e);if(0===t.length)throw new jr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new jr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new jr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await s.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Ji}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await s.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=s.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Gi(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Gi(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}yo.className="Model",s.serialization.registerClass(yo);class bo extends yo{}bo.className="Functional",s.serialization.registerClass(bo);class vo extends yo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Is("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new jr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof vo||e instanceof yo;let n;if(t){if(n=e,1!==n.outputs.length)throw new jr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new jr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new jr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new jr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Ua({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new jr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new jr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ga(this.outputs[0])}this.inboundNodes=[],new La({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Zr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ba(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new yo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new jr("Legacy serialization format not supported yet.");n=t}else s.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof vo))throw new Kr(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const s of n){const e=yi(s,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new jr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new jr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}vo.className="Sequential",s.serialization.registerClass(vo);class Io extends s.serialization.Serializable{getConfig(){return{}}}class xo extends Io{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Kr(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return s.elu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}xo.className="elu",s.serialization.registerClass(xo);class wo extends Io{apply(e){return s.selu(e)}}wo.className="selu",s.serialization.registerClass(wo);class ko extends Io{apply(e){return s.relu(e)}}ko.className="relu",s.serialization.registerClass(ko);class Co extends Io{apply(e){return(0,s.tidy)((()=>s.minimum(6,s.relu(e))))}}Co.className="relu6",s.serialization.registerClass(Co);class Eo extends Io{apply(e){return e}}Eo.className="linear",s.serialization.registerClass(Eo);class So extends Io{apply(e){return s.sigmoid(e)}}So.className="sigmoid",s.serialization.registerClass(So);class To extends Io{apply(e){return function(e){return(0,s.tidy)((()=>{const t=s.add(.5,s.mul(.2,e));return s.clipByValue(t,0,1)}))}(e)}}To.className="hardSigmoid",s.serialization.registerClass(To);class No extends Io{apply(e){return s.softplus(e)}}No.className="softplus",s.serialization.registerClass(No);class Bo extends Io{apply(e){return function(e){return(0,s.tidy)((()=>s.div(e,s.add(s.abs(e),1))))}(e)}}Bo.className="softsign",s.serialization.registerClass(Bo);class Ro extends Io{apply(e){return s.tanh(e)}}Ro.className="tanh",s.serialization.registerClass(Ro);class Do extends Io{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return s.softmax(e,t)}}Do.className="softmax",s.serialization.registerClass(Do);class Fo extends Io{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return s.logSoftmax(e,t)}}Fo.className="logSoftmax",s.serialization.registerClass(Fo);class $o extends Io{apply(e){return(0,s.tidy)((()=>s.tidy((()=>{const t=Math.sqrt(2),n=s.mul(.5,s.add(1,s.erf(s.div(e,t))));return s.mul(e,n)}))))}}$o.className="gelu",s.serialization.registerClass($o);class _o extends Io{apply(e){return(0,s.tidy)((()=>s.mul(.5,s.mul(e,s.add(1,s.tanh(s.mul(s.sqrt(s.div(2,Math.PI)),s.add(e,s.mul(.044715,s.pow(e,3))))))))))}}_o.className="gelu_new",s.serialization.registerClass(_o);class Mo extends Io{apply(e){return(0,s.tidy)((()=>s.mul(e,s.tanh(s.softplus(e)))))}}Mo.className="mish",s.serialization.registerClass(Mo);class Oo extends Io{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,s.tidy)((()=>s.mul(s.sigmoid(s.mul(e,t)),e)))}}function Qo(e){return e.getClassName()}function Lo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(e,s.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function zo(e){if(null==e){const e={className:"linear",config:{}};return Lo(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Lo(t)}return e instanceof Io?e:Lo(e)}function Po(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Oo.className="swish",s.serialization.registerClass(Oo);class Go extends s.serialization.Serializable{}class Uo extends Go{constructor(e){super(),Po(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,s.tidy)((()=>{let t=(0,s.zeros)([1]);return this.hasL1&&(t=(0,s.add)(t,(0,s.sum)(s.mul(this.l1,(0,s.abs)(e))))),this.hasL2&&(t=(0,s.add)(t,(0,s.sum)(s.mul(this.l2,ea(e))))),s.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Uo.className="L1L2",s.serialization.registerClass(Uo);const Wo={l1l2:"L1L2"};function Vo(e){return os(e)}function qo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(e,s.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ho(e){if(null==e)return null;if("string"===typeof e){return qo({className:e in Wo?Wo[e]:e,config:{}})}return e instanceof Go?e:qo(e)}class Yo extends Pa{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Na(e);let n=(0,s.relu)(e);return null!=this.maxValue&&(n=(0,s.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Yo.className="ReLU",s.serialization.registerClass(Yo);class jo extends Pa{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Na(e);return(0,s.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}jo.className="LeakyReLU",s.serialization.registerClass(jo);class Ko extends Pa{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ea(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ho(e.alphaRegularizer),this.alphaConstraint=ii(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new jr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ba(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Ma({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Na(e),(0,s.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ca(this.alphaInitializer),alphaRegularizer:Vo(this.alphaRegularizer),alphaConstraint:si(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ko.className="PReLU",s.serialization.registerClass(Ko);class Jo extends Pa{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Kr(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Na(e);return(0,s.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Jo.className="ELU",s.serialization.registerClass(Jo);class Xo extends Pa{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Na(e);return(0,s.mul)(n,(0,s.cast)((0,s.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Xo.className="ThresholdedReLU",s.serialization.registerClass(Xo);class Zo extends Pa{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Do).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,s.tidy)((()=>{let n=Na(e);const r=t.mask;if(null!=r){const e=(0,s.mul)((0,s.sub)((0,s.ones)(n.shape),(0,s.cast)(r,n.dtype)),(0,s.scalar)(-1e9));n=(0,s.add)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,s.exp)((0,s.sub)(n,(0,s.logSumExp)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function el(e,t,n){if("number"===typeof e)return Zr(e,t);if(e.length!==t)throw new jr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new jr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function tl(e,t,n,r){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((s+r-1)/r)}function nl(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Ls([n-t,0]);else{if("same"!==r)throw new jr(`Unsupport padding mode: ${r}.`);e*=t}return e}function rl(e,t){return(0,s.tidy)((()=>(Ts(t),"channelsFirst"===t?s.transpose(e,[0,2,3,1]):e)))}function sl(e,t){return(0,s.tidy)((()=>(Ts(t),"channelsFirst"===t?s.transpose(e,[0,2,3,4,1]):e)))}function al(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,s.tidy)((()=>{if(null==i&&(i="channelsLast"),Ts(i),3!==e.shape.length)throw new jr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new jr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new jr(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=s.transpose(e,[0,2,1])),"causal"===a)throw new Kr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=s.conv1d(e,t,r,"same"===a?"same":"valid","NWC",o);return null!=n&&(l=na(l,n)),l}))}function il(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,s.tidy)((()=>{if(null==i&&(i="channelsLast"),Ts(i),3!==e.rank&&4!==e.rank)throw new jr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new jr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=rl(e,i);if("causal"===a)throw new Kr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=s.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:l}),"channelsFirst"===i&&(u=s.transpose(u,[0,3,1,2])),u}))}function ol(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return(0,s.tidy)((()=>{if(null==i&&(i="channelsLast"),Ts(i),4!==e.rank&&5!==e.rank)throw new jr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new jr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let l=sl(e,i);if("causal"===a)throw new Kr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=s.conv3d(l,t,r,"same"===a?"same":"valid","NDHWC",o),null!=n&&(l=na(l,n)),"channelsFirst"===i&&(l=s.transpose(l,[0,4,1,2,3])),l}))}Zo.className="Softmax",s.serialization.registerClass(Zo);class ll extends Pa{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ll.verifyArgs(t),this.rank=e,fs(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Kr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=el(t.kernelSize,e,"kernelSize"),this.strides=el(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ns(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ts(this.dataFormat),this.activation=zo(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ea(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ii(t.biasConstraint),this.biasRegularizer=Ho(t.biasRegularizer),this.activityRegularizer=Ho(t.activityRegularizer),this.dilationRate=el(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new jr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new jr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new jr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(es("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!As(e.kernelSize,"number",1,3))throw new jr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Qo(this.activation),useBias:this.useBias,biasInitializer:Ca(this.biasInitializer),biasRegularizer:Vo(this.biasRegularizer),activityRegularizer:Vo(this.activityRegularizer),biasConstraint:si(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class ul extends ll{constructor(e,t){super(e,t),this.kernel=null,ul.verifyArgs(t),this.filters=t.filters,fs(this.filters,"filters"),this.kernelInitializer=Ea(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ii(t.kernelConstraint),this.kernelRegularizer=Ho(t.kernelRegularizer)}build(e){e=Ba(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new jr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,s.tidy)((()=>{let t;e=Na(e);const n=null==this.bias?null:this.bias.read(),r=ms(this.activation.getClassName());if(null!=r&&2===this.rank)t=il(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=al(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=il(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Kr("convolutions greater than 3D are not implemented yet.");t=ol(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ba(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=tl(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ca(this.kernelInitializer),kernelRegularizer:Vo(this.kernelRegularizer),kernelConstraint:si(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new jr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class cl extends ul{constructor(e){super(2,e),cl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!As(e.kernelSize,"number",1,2))throw new jr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}cl.className="Conv2D",s.serialization.registerClass(cl);class dl extends ul{constructor(e){super(3,e),dl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new jr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}dl.className="Conv3D",s.serialization.registerClass(dl);class hl extends cl{constructor(e){if(super(e),this.inputSpec=[new Ma({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new jr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ba(e)).length)throw new jr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new jr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ma({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return s.tidy((()=>{let t=Na(e);if(4!==t.shape.length)throw new jr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const o=n[a],l=n[i],u=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[r,nl(o,d,u,this.padding),nl(l,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=s.transpose(t,[0,2,3,1]));let A=s.conv2dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(A=s.transpose(A,[0,3,1,2])),null!=this.bias&&(A=na(A,this.bias.read(),this.dataFormat)),null!=this.activation&&(A=this.activation.apply(A)),A}))}computeOutputShape(e){const t=(e=Ba(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=nl(t[r],o,a,this.padding),t[s]=nl(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}hl.className="Conv2DTranspose",s.serialization.registerClass(hl);class pl extends dl{constructor(e){if(super(e),this.inputSpec=[new Ma({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new jr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ba(e)).length)throw new jr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new jr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ma({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return s.tidy((()=>{let t=Na(e);if(5!==t.shape.length)throw new jr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i,o;"channelsFirst"===this.dataFormat?(o=2,a=3,i=4):(o=1,a=2,i=3);const l=n[o],u=n[a],c=n[i],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],A=this.strides[0],f=this.strides[1],g=this.strides[2],m=[r,nl(l,A,d,this.padding),nl(u,f,h,this.padding),nl(c,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=s.transpose(t,[0,2,3,4,1]));let y=s.conv3dTranspose(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=s.transpose(y,[0,4,1,2,3])),null!==this.bias&&(y=na(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Ba(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=nl(t[r],u,i,this.padding),t[s]=nl(t[s],c,o,this.padding),t[a]=nl(t[a],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pl.className="Conv3DTranspose",s.serialization.registerClass(pl);class Al extends ul{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new jr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new jr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new jr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ea(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ho(t.depthwiseRegularizer),this.depthwiseConstraint=ii(t.depthwiseConstraint),this.pointwiseInitializer=Ea(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ho(t.pointwiseRegularizer),this.pointwiseConstraint=ii(t.pointwiseConstraint)}build(e){if((e=Ba(e)).length<this.rank+2)throw new jr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new jr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ma({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,s.tidy)((()=>{let t;if(e=Na(e),1===this.rank)throw new Kr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=s.transpose(e,[0,2,3,1])),t=s.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=na(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=s.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ca(this.depthwiseInitializer),e.pointwiseInitializer=Ca(this.pointwiseInitializer),e.depthwiseRegularizer=Vo(this.depthwiseRegularizer),e.pointwiseRegularizer=Vo(this.pointwiseRegularizer),e.depthwiseConstraint=si(this.depthwiseConstraint),e.pointwiseConstraint=si(this.pointwiseConstraint),e}}Al.className="SeparableConv";class fl extends Al{constructor(e){super(2,e)}}fl.className="SeparableConv2D",s.serialization.registerClass(fl);class gl extends ul{constructor(e){super(1,e),gl.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!As(e.kernelSize,"number",1,1))throw new jr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}gl.className="Conv1D",s.serialization.registerClass(gl);class ml extends Pa{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,s.tidy)((()=>{if(e=Na(e),"channelsLast"===this.dataFormat){const t=Hs(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Hs(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Hs(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Hs(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ml.className="Cropping2D",s.serialization.registerClass(ml);class yl extends Pa{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ts(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ps(ws,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return s.tidy((()=>{let t=Na(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=s.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?s.image.resizeNearestNeighbor(t,[e,r]):s.image.resizeBilinear(t,[e,r]);return s.transpose(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?s.image.resizeNearestNeighbor(t,[e,r]):s.image.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}yl.className="UpSampling2D",s.serialization.registerClass(yl);class bl extends ll{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ea(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ii(e.depthwiseConstraint),this.depthwiseRegularizer=Ho(e.depthwiseRegularizer)}build(e){if((e=Ba(e)).length<4)throw new jr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new jr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,s.tidy)((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",a=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0;return(0,s.tidy)((()=>{null==a&&(a="channelsLast"),Ts(a);let o=rl(e,a);if(4!==e.rank)throw new jr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new jr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=s.depthwiseConv2d(o,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===a&&(o=s.transpose(o,[0,3,1,2])),o}))}(e=Na(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=na(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ba(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=tl(t,this.kernelSize[0],this.padding,this.strides[0]),a=tl(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ca(this.depthwiseInitializer),e.depthwiseRegularizer=Vo(this.depthwiseRegularizer),e.depthwiseConstraint=si(this.depthwiseRegularizer),e}}function vl(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new jr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Il(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return s.tidy((()=>{const u=t.shape.length;if(u<3)throw new jr(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(zs(2,u));if(t=s.transpose(t,c),null!=i)throw new Kr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=s.cast(s.cast(a,"bool"),"float32"),a.rank===u-1&&(a=s.expandDims(a,-1)),a=s.transpose(a,c)),r&&(t=s.reverse(t,0),null!=a&&(a=s.reverse(a,0)));const d=[];let h,p=n;const A=t.shape[0],f=s.unstack(t);let g,m;null!=a&&(g=s.unstack(a));for(let t=0;t<A;++t){const n=f[t],r=s.tidy((()=>e(n,p)));if(null==a)h=r[0],p=r[1];else{const e=s.tidy((()=>{const e=g[t],n=s.sub(s.onesLike(e),e);return{output:s.add(s.mul(r[0],e),s.mul(p[0],n)),newStates:p.map(((t,a)=>s.add(s.mul(r[1][a],e),s.mul(t,n))))}}));h=e.output,p=e.newStates}l&&d.push(h)}if(l){const e=1;m=s.stack(d,e)}return[h,m,p]}))}bl.className="DepthwiseConv2D",s.serialization.registerClass(bl);class xl extends Pa{constructor(e){let t;if(super(e),null==e.cell)throw new jr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Bl({cells:e.cell}):e.cell,null==t.stateSize)throw new jr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ma({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return zs(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Sa(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return s.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Kr("Constants support is not implemented in RNN yet.");Sa(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ma({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!s.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new jr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Ma({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,s.tidy)((()=>{if(!this.stateful)throw new Hr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new jr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>s.zeros([n,e]))):this.states_=[s.zeros([n,this.cell.stateSize])];else if(null==e)s.dispose(this.states_),null!=this.keptStates&&(s.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>s.zeros([n,e]))):this.states_[0]=s.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new jr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):s.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!s.util.arraysEqual(r.shape,i))throw new jr(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>s.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=vl(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ma({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof Oa){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return(0,s.tidy)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Na(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new jr(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Il(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?u:l;return this.returnState?[d].concat(c):d}))}getInitialState(e){return(0,s.tidy)((()=>{let t=s.zeros(e.shape);return t=s.sum(t,[1,2]),t=Ws(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ks(t,[1,e]):t)):this.cell.stateSize>1?[Ks(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===xl.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=yi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}xl.className="RNN",s.serialization.registerClass(xl);class wl extends Pa{}class kl extends wl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,fs(this.units,"units"),this.activation=zo(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ea(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ea(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ea(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ho(e.kernelRegularizer),this.recurrentRegularizer=Ho(e.recurrentRegularizer),this.biasRegularizer=Ho(e.biasRegularizer),this.kernelConstraint=ii(e.kernelConstraint),this.recurrentConstraint=ii(e.recurrentConstraint),this.biasConstraint=ii(e.biasConstraint),this.dropout=Qs([1,Ls([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qs([1,Ls([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ba(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,s.tidy)((()=>{if(2!==e.length)throw new jr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>s.onesLike(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>s.onesLike(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;a=Xs(null!=i?s.mul(e,i):e,this.kernel.read()),null!=this.bias&&(a=na(a,this.bias.read())),null!=o&&(n=s.mul(n,o));let l=s.add(a,Xs(n,this.recurrentKernel.read()));return null!=this.activation&&(l=this.activation.apply(l)),[l,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Qo(this.activation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),recurrentInitializer:Ca(this.recurrentInitializer),biasInitializer:Ca(this.biasInitializer),kernelRegularizer:Vo(this.kernelRegularizer),recurrentRegularizer:Vo(this.recurrentRegularizer),biasRegularizer:Vo(this.biasRegularizer),activityRegularizer:Vo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}kl.className="SimpleRNNCell",s.serialization.registerClass(kl);class Cl extends xl{constructor(e){e.cell=new kl(e),super(e)}call(e,t){return(0,s.tidy)((()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Cl.className="SimpleRNN",s.serialization.registerClass(Cl);class El extends wl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new jr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,fs(this.units,"units"),this.activation=zo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ea(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ea(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ea(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ho(e.kernelRegularizer),this.recurrentRegularizer=Ho(e.recurrentRegularizer),this.biasRegularizer=Ho(e.biasRegularizer),this.kernelConstraint=ii(e.kernelConstraint),this.recurrentConstraint=ii(e.recurrentConstraint),this.biasConstraint=ii(e.biasConstraint),this.dropout=Qs([1,Ls([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qs([1,Ls([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ba(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,s.tidy)((()=>{if(2!==e.length)throw new jr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>s.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>s.onesLike(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=s.mul(e,a[0]));let c=Xs(e,this.kernel.read());this.useBias&&(c=na(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=s.mul(r,i[0]));const d=this.recurrentKernel.read(),[h,p]=s.split(d,[2*this.units,this.units],d.rank-1),A=Xs(r,h),[f,g,m]=s.split(c,3,c.rank-1),[y,b]=s.split(A,2,A.rank-1);o=this.recurrentActivation.apply(s.add(f,y)),l=this.recurrentActivation.apply(s.add(g,b));const v=Xs(s.mul(l,r),p);u=this.activation.apply(s.add(m,v));const I=s.add(s.mul(o,r),s.mul(s.add(1,s.neg(o)),u));return[I,I]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Qo(this.activation),recurrentActivation:Qo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),recurrentInitializer:Ca(this.recurrentInitializer),biasInitializer:Ca(this.biasInitializer),kernelRegularizer:Vo(this.kernelRegularizer),recurrentRegularizer:Vo(this.recurrentRegularizer),biasRegularizer:Vo(this.biasRegularizer),activityRegularizer:Vo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}El.className="GRUCell",s.serialization.registerClass(El);class Sl extends xl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new El(e),super(e)}call(e,t){return(0,s.tidy)((()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Sl.className="GRU",s.serialization.registerClass(Sl);class Tl extends wl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,fs(this.units,"units"),this.activation=zo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ea(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ea(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ea(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ho(e.kernelRegularizer),this.recurrentRegularizer=Ho(e.recurrentRegularizer),this.biasRegularizer=Ho(e.biasRegularizer),this.kernelConstraint=ii(e.kernelConstraint),this.recurrentConstraint=ii(e.recurrentConstraint),this.biasConstraint=ii(e.biasConstraint),this.dropout=Qs([1,Ls([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qs([1,Ls([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ba(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends oa{apply(t,r){const s=e.apply([n]),a=(new ua).apply([n]),i=e.apply([2*n]);return js(js(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,s.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new jr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>s.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>s.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,d;0<this.dropout&&this.dropout<1&&(e=s.mul(e,i[0]));let h=Xs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=s.mul(r,o[0])),h=s.add(h,Xs(r,this.recurrentKernel.read())),this.useBias&&(h=na(h,this.bias.read()));const[p,A,f,g]=s.split(h,4,h.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(A),c=s.add(s.mul(u,a),s.mul(l,this.activation.apply(f))),d=this.recurrentActivation.apply(g);const m=s.mul(d,this.activation.apply(c));return[m,m,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Qo(this.activation),recurrentActivation:Qo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),recurrentInitializer:Ca(this.recurrentInitializer),biasInitializer:Ca(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Vo(this.kernelRegularizer),recurrentRegularizer:Vo(this.recurrentRegularizer),biasRegularizer:Vo(this.biasRegularizer),activityRegularizer:Vo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Tl.className="LSTMCell",s.serialization.registerClass(Tl);class Nl extends xl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Tl(e),super(e)}call(e,t){return(0,s.tidy)((()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Nl.className="LSTM",s.serialization.registerClass(Nl);class Bl extends wl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,s.tidy)((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Sa(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Ds(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const s of t.cells)r.push(yi(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return $a(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}_a(t)}}function Rl(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:i}=e,o=()=>null!=i?i(t(),n):ra(t(),n),l=()=>sa(o,t,r);if(!a||a<=1)return s.keep(l().clone());return Array(a).fill(void 0).map(l).map((e=>s.keep(e.clone())))}Bl.className="StackedRNNCells",s.serialization.registerClass(Bl);var Dl=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class Fl extends xl{constructor(e){if(e.unroll)throw new Kr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Kr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ma({ndim:5})]}call(e,t){return s.tidy((()=>{if(null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new jr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return s.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],i=s.zeros(a);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];s.tidy((()=>{if(!this.stateful)throw new Hr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new jr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.zeros(a))):this.states_=[s.zeros(a)];else if(null==e)s.dispose(this.states_),null!=this.keptStates&&(s.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.zeros(a))):this.states_[0]=s.zeros(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new jr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):s.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!s.util.arraysEqual(n.shape,r))throw new jr(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>s.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=tl(l,r[0],s,a[0],i[0]),d=tl(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}Fl.className="ConvRNN2D";class $l extends Tl{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,fs(this.filters,"filters"),this.kernelSize=el(n,2,"kernelSize"),this.kernelSize.forEach((e=>fs(e,"kernelSize"))),this.strides=el(r||1,2,"strides"),this.strides.forEach((e=>fs(e,"strides"))),this.padding=s||"valid",Ns(this.padding),this.dataFormat=a||"channelsLast",Ts(this.dataFormat),this.dilationRate=el(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>fs(e,"dilationRate")))}build(e){var t;e=Ba(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new jr(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends oa{apply(e,t){return Ys([n.apply([r]),s.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return s.tidy((()=>{if(3!==e.length)throw new jr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>s.onesLike(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?s.mul(t[n],e):e;let u=l(r,o,0),c=l(r,o,1),d=l(r,o,2),h=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>s.onesLike(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let A=l(a,p,0),f=l(a,p,1),g=l(a,p,2),m=l(a,p,3);const[y,b,v,I]=s.split(this.kernel.read(),4,3),[x,w,k,C]=this.useBias?s.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,x,this.padding),c=this.inputConv(c,b,w,this.padding),d=this.inputConv(d,v,k,this.padding),h=this.inputConv(h,I,C,this.padding);const[E,S,T,N]=s.split(this.recurrentKernel.read(),4,3);A=this.recurrentConv(A,E),f=this.recurrentConv(f,S),g=this.recurrentConv(g,T),m=this.recurrentConv(m,N);const B=this.recurrentActivation.apply(s.add(u,A)),R=this.recurrentActivation.apply(s.add(c,f)),D=s.add(s.mul(R,i),s.mul(B,this.activation.apply(s.add(d,g)))),F=s.mul(this.recurrentActivation.apply(s.add(h,m)),this.activation.apply(D));return[F,F,D]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Dl(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const a=s.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?na(a,n,this.dataFormat):a}recurrentConv(e,t){return s.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}$l.className="ConvLSTM2DCell",s.serialization.registerClass($l);class _l extends Fl{constructor(e){const t=new $l(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}_l.className="ConvLSTM2D",s.serialization.registerClass(_l);class Ml extends Pa{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Na(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return sa((()=>ra(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Ml.className="Dropout",s.serialization.registerClass(Ml);class Ol extends Ml{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Ol.className="SpatialDropout1D",s.serialization.registerClass(Ol);class Ql extends Pa{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,fs(this.units,"units"),this.activation=zo(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ea(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ea(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ii(e.kernelConstraint),this.biasConstraint=ii(e.biasConstraint),this.kernelRegularizer=Ho(e.kernelRegularizer),this.biasRegularizer=Ho(e.biasRegularizer),this.activityRegularizer=Ho(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ba(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ba(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Na(e),r=ms(this.activation.getClassName());let s;return null!=r?s=Xs(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Xs(n,this.kernel.read()),null!=this.bias&&(s=na(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Qo(this.activation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),biasInitializer:Ca(this.biasInitializer),kernelRegularizer:Vo(this.kernelRegularizer),biasRegularizer:Vo(this.biasRegularizer),activityRegularizer:Vo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),biasConstraint:si(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ql.className="Dense",s.serialization.registerClass(Ql);class Ll extends Pa{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ba(e);for(const t of e.slice(1))if(null==t)throw new jr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Os(e,1)]}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);let n=Na(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,s.transpose)(n,e)}return function(e){if(e.rank<=1)throw new jr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Os(e.shape,1)];return s.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Ll.className="Flatten",s.serialization.registerClass(Ll);class zl extends Pa{constructor(e){super(e),this.supportsMasking=!0,this.activation=zo(e.activation)}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Na(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Qo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}zl.className="Activation",s.serialization.registerClass(zl);class Pl extends Pa{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,s.tidy)((()=>{return e=Na(e),t=e,n=this.n,(0,s.tidy)((()=>{if(2!==t.shape.length)throw new jr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ks(Ws(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Pl.className="RepeatVector",s.serialization.registerClass(Pl);class Gl extends Pa{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new jr("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=Os(e);if(null!==a){if(0===s||i%s!==0)throw new jr(n);r[a]=i/s}else if(i!==s)throw new jr(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Na(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,s.reshape)(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Gl.className="Reshape",s.serialization.registerClass(Gl);class Ul extends Pa{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=zs(1,e.dims.length+1);if(!s.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ma({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ba(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,s.transpose)(Na(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ul.className="Permute",s.serialization.registerClass(Ul);class Wl extends Pa{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Na(e);return(0,s.any)((0,s.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Na(e),r=(0,s.any)((0,s.notEqual)(n,this.maskValue),-1,!0);return(0,s.mul)(n,(0,s.cast)(r,n.dtype))}))}}Wl.className="Masking",s.serialization.registerClass(Wl);class Vl extends Pa{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(rs(e.inputLength))}this.inputDim=e.inputDim,fs(this.inputDim,"inputDim"),this.outputDim=e.outputDim,fs(this.outputDim,"outputDim"),this.embeddingsInitializer=Ea(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ho(e.embeddingsRegularizer),this.activityRegularizer=Ho(e.activityRegularizer),this.embeddingsConstraint=ii(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,s.tidy)((()=>this.maskZero?(e=Na(e),(0,s.notEqual)(e,(0,s.zerosLike)(e))):null))}computeOutputShape(e){if(e=Ba(e),null==this.inputLength)return[...e,this.outputDim];const t=rs(this.inputLength);if(t.length!==e.length-1)throw new jr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new jr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);let n=Na(e);"int32"!==n.dtype&&(n=Us(n,"int32"));const r=Zs(this.embeddings.read(),(0,s.reshape)(n,[n.size]));return(0,s.reshape)(r,Ba(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ca(this.embeddingsInitializer),embeddingsRegularizer:Vo(this.embeddingsRegularizer),activityRegularizer:Vo(this.activityRegularizer),embeddingsConstraint:si(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Vl.className="Embedding",s.serialization.registerClass(Vl);class ql extends Pa{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Kr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new jr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ba(e)]),e.length<2)throw new jr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=ds(t),t.length>1)throw new jr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===ds(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,s.tidy)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Ls(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Ws(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,r=e[0],a=e.slice(1).concat([r]);let o=s.reshape(i,[r].concat(Os(e.slice(1))));o=s.transpose(o,[1,0]),o=s.reshape(o,a),t.push(o),n=!0}else if(e>1){const r=zs(1,e).concat([0]);t.push(s.transpose(i,r)),n=!0}else t.push(i)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=s.reshape(s.transpose(s.reshape(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(zs(0,a-1));r=s.transpose(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=ds(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return s.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new jr("`mask` should be an Array");if(!Array.isArray(e))throw new jr("`inputs` should be an Array");if(t.length!==e.length)throw new jr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:s.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=s.logicalAnd(n,t[e]);return n}))}}class Hl extends ql{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.add(t,e[n]);return t}))}}Hl.className="Add",s.serialization.registerClass(Hl);class Yl extends ql{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.mul(t,e[n]);return t}))}}Yl.className="Multiply",s.serialization.registerClass(Yl);class jl extends ql{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.add(t,e[n]);return s.mul(1/e.length,t)}))}}jl.className="Average",s.serialization.registerClass(jl);class Kl extends ql{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=s.maximum(t,e[n]);return t}))}}Kl.className="Maximum",s.serialization.registerClass(Kl);class Jl extends ql{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=s.minimum(t,e[n]);return t}))}}Jl.className="Minimum",s.serialization.registerClass(Jl);class Xl extends ql{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new jr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(s.util.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new jr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,s.tidy)((()=>Ys(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new jr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new jr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new jr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new jr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return s.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let i=0;i<e.length;++i)null==t[i]?r.push(s.cast(s.onesLike(e[i]),"bool")):t[i].rank<e[i].rank?r.push(s.expandDims(t[i],-1)):r.push(t[i]);const a=s.concat(r,this.axis);return s.all(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Zl(e,t){for(;e<0;)e+=t;return e}Xl.className="Concatenate",s.serialization.registerClass(Xl);class eu extends ql{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){s.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Kr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new jr(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new jr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Zl(t,e[n].shape.length))):[Zl(this.axes,n.shape.length),Zl(this.axes,r.shape.length)],this.normalize&&(n=bi(n,t[0]),r=bi(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Kr("batchDot is not implemented for tensors of 4D or higher rank yet");if(s.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),s.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Kr("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const i=n;return s.tidy((()=>{let n,o;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=s.reshape(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=s.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=i[0]===i[1]?s.sum(s.mul(e,t),i[0]):s.sum(s.mul(s.transpose(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;o=s.matMul(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=s.squeeze(o,t)}return 1===o.shape.length&&(o=s.expandDims(o,1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Zl(this.axes,e.length),Zl(this.axes,t.length)],n}computeOutputShape(e){s.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Kr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}eu.className="Dot",s.serialization.registerClass(eu);class tu extends Pa{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Na(e);return sa((()=>(0,s.add)(Js(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}tu.className="GaussianNoise",s.serialization.registerClass(tu);class nu extends Pa{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Na(e);if(this.rate>0&&this.rate<1){return sa((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,s.mul)(n,Js(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}nu.className="GaussianDropout",s.serialization.registerClass(nu);class ru extends Pa{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Na(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,s.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Na(e),r=-1.7580993408473766;let a=(0,s.greaterEqual)((0,s.randomUniform)(n),this.rate);a=Us(a,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-i*r*this.rate,l=(0,s.add)((0,s.mul)(t,a),(0,s.mul)((0,s.add)(a,-1),r));return(0,s.add)((0,s.mul)(l,i),o)};return sa(r,(()=>Na(e)),t.training||!1)}return e}))}}function su(e,t,n,r,a){let i,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)i=s.batchNorm2d(e,t,n,r,a,o);else if(3===e.rank)i=s.batchNorm3d(e,t,n,r,a,o);else{if(4!==e.rank)throw new Kr(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=s.batchNorm4d(e,t,n,r,a,o)}return i}function au(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return s.util.arraysEqual(r.slice().sort(),zs(0,e.rank-1))?function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,s.tidy)((()=>{const i=s.moments(e,r),o=i.mean,l=i.variance;return[su(e,o,l,n,t,a),o,l]}))}(e,t,n,r,a):function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,s.tidy)((()=>{const i=s.moments(e,r),o=i.mean,l=i.variance,u=[];for(const t of zs(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=(0,s.reshape)(o,u),d=(0,s.reshape)(l,u),h=null==t?null:(0,s.reshape)(t,u),p=null==n?null:(0,s.reshape)(n,u);return[su(e,c,d,p,h,a),o,l]}))}(e,t,n,r,a)}ru.className="AlphaDropout",s.serialization.registerClass(ru);class iu extends Pa{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ea(e.betaInitializer||"zeros"),this.gammaInitializer=Ea(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ea(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ea(e.movingVarianceInitializer||"ones"),this.betaConstraint=ii(e.betaConstraint),this.gammaConstraint=ii(e.gammaConstraint),this.betaRegularizer=Ho(e.betaRegularizer),this.gammaRegularizer=Ho(e.gammaRegularizer)}build(e){e=Ba(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new jr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ma({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,s.tidy)((()=>{const n=null!=t.training&&t.training,r=Na(e),a=r.shape,i=a.length,o=zs(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=Zr(1,i);u[l]=a[l];const c=o.slice();c.sort();const d=!s.util.arraysEqual(c,zs(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const e=(0,s.reshape)(this.movingMean.read(),u),t=(0,s.reshape)(this.movingVariance.read(),u),n=this.center?(0,s.reshape)(this.beta.read(),u):null,a=this.scale?(0,s.reshape)(this.gamma.read(),u):null;return su(r,e,t,n,a,this.epsilon)}return su(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,A]=au(r,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{s.tidy((()=>{const r=1-n,a=e.read(),i=s.mul(s.sub(a,t),r);e.write(s.sub(a,i))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,A,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ca(this.betaInitializer),gammaInitializer:Ca(this.gammaInitializer),movingMeanInitializer:Ca(this.movingMeanInitializer),movingVarianceInitializer:Ca(this.movingVarianceInitializer),betaRegularizer:Vo(this.betaRegularizer),gammaRegularizer:Vo(this.gammaRegularizer),betaConstraint:si(this.betaConstraint),gammaConstraint:si(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}iu.className="BatchNormalization",s.serialization.registerClass(iu);class ou extends Pa{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ea(e.betaInitializer||"zeros"),this.gammaInitializer=Ea(e.gammaInitializer||"ones"),this.betaRegularizer=Ho(e.betaRegularizer),this.gammaRegularizer=Ho(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ba(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==ds(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=Na(e),r=n.shape,a=r.length;return(0,s.tidy)((()=>{let{mean:e,variance:t}=(0,s.moments)(n,this.axis,!0);const i=Zr(1,a);for(const n of this.axis)i[n]=r[n];const o=e=>null!=e&&e.shape.length!==a?s.reshape(e,i):e;let l=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const c=[],d=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),d.push(1)):(c.push(1),d.push(r[n]));return e=s.tile(e,c),t=s.tile(t,c),null!=l&&(l=s.tile(l,d)),null!=u&&(u=s.tile(u,d)),su(n,e,t,u,l,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ca(this.betaInitializer),gammaInitializer:Ca(this.gammaInitializer),betaRegularizer:Vo(this.betaRegularizer),gammaRegularizer:Vo(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ou.className="LayerNormalization",s.serialization.registerClass(ou);class lu extends Pa{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new jr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new jr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new jr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ma({ndim:4})]}computeOutputShape(e){let t,n;return e=Ba(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,s.tidy)((()=>{return t=Na(e),n=this.padding,r=this.dataFormat,(0,s.tidy)((()=>{if(4!==t.rank)throw new jr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new jr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new jr(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],s.pad(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function uu(e,t,n,r,a,i){return(0,s.tidy)((()=>{let o;Ts(a),Bs(i),Ns(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=rl(e,a);const l="same"===r?"same":"valid";return o="max"===i?s.maxPool(e,t,n,l):s.avgPool(e,t,n,l),"channelsFirst"===a&&(o=s.transpose(o,[0,3,1,2])),o}))}function cu(e,t,n,r,a,i){return(0,s.tidy)((()=>{let o;Ts(a),Bs(i),Ns(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=sl(e,a);const l="same"===r?"same":"valid";return o="max"===i?s.maxPool3d(e,t,n,l):s.avgPool3d(e,t,n,l),"channelsFirst"===a&&(o=s.transpose(o,[0,4,1,2,3])),o}))}lu.className="ZeroPadding2D",s.serialization.registerClass(lu);class du extends Pa{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new jr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(fs(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new jr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}fs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ns(this.padding),this.inputSpec=[new Ma({ndim:3})]}computeOutputShape(e){const t=tl((e=Ba(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t),e=Ws(Na(e),2);const n=this.poolingFunction(Na(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return s.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class hu extends du{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ts(s),Ns(r),uu(e,t,n,r,s,"max")}}hu.className="MaxPooling1D",s.serialization.registerClass(hu);class pu extends du{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ts(s),Ns(r),uu(e,t,n,r,s,"avg")}}pu.className="AveragePooling1D",s.serialization.registerClass(pu);class Au extends Pa{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new jr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];fs(this.poolSize,"poolSize"),fs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ts(this.dataFormat),Ns(this.padding),this.inputSpec=[new Ma({ndim:4})]}computeOutputShape(e){e=Ba(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=tl(t,this.poolSize[0],this.padding,this.strides[0]),n=tl(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,s.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Na(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class fu extends Au{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ts(s),Ns(r),uu(e,t,n,r,s,"max")}}fu.className="MaxPooling2D",s.serialization.registerClass(fu);class gu extends Au{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ts(s),Ns(r),uu(e,t,n,r,s,"avg")}}gu.className="AveragePooling2D",s.serialization.registerClass(gu);class mu extends Pa{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new jr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];fs(this.poolSize,"poolSize"),fs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ts(this.dataFormat),Ns(this.padding),this.inputSpec=[new Ma({ndim:5})]}computeOutputShape(e){e=Ba(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=tl(t,this.poolSize[0],this.padding,this.strides[0]),n=tl(n,this.poolSize[1],this.padding,this.strides[1]),r=tl(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,s.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Na(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class yu extends mu{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ts(s),Ns(r),cu(e,t,n,r,s,"max")}}yu.className="MaxPooling3D",s.serialization.registerClass(yu);class bu extends mu{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ts(s),Ns(r),cu(e,t,n,r,s,"avg")}}bu.className="AveragePooling3D",s.serialization.registerClass(bu);class vu extends Pa{constructor(e){super(e),this.inputSpec=[new Ma({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Kr}}class Iu extends vu{constructor(e){super(e||{})}call(e,t){return(0,s.tidy)((()=>{const t=Na(e);return s.mean(t,1)}))}}Iu.className="GlobalAveragePooling1D",s.serialization.registerClass(Iu);class xu extends vu{constructor(e){super(e||{})}call(e,t){return(0,s.tidy)((()=>{const t=Na(e);return s.max(t,1)}))}}xu.className="GlobalMaxPooling1D",s.serialization.registerClass(xu);class wu extends Pa{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ts(this.dataFormat),this.inputSpec=[new Ma({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Kr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ku extends wu{call(e,t){return(0,s.tidy)((()=>{const t=Na(e);return"channelsLast"===this.dataFormat?s.mean(t,[1,2]):s.mean(t,[2,3])}))}}ku.className="GlobalAveragePooling2D",s.serialization.registerClass(ku);class Cu extends wu{call(e,t){return(0,s.tidy)((()=>{const t=Na(e);return"channelsLast"===this.dataFormat?s.max(t,[1,2]):s.max(t,[2,3])}))}}Cu.className="GlobalMaxPooling2D",s.serialization.registerClass(Cu);class Eu extends Pa{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=yi(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Su extends Eu{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ba(e)).length<3)throw new jr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ba(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,s.tidy)((()=>Il(((e,n)=>[Na(this.layer.call(e,t)),[]]),e=Na(e),[],!1,null,null,!1,!0)[1]))}}Su.className="TimeDistributed",s.serialization.registerClass(Su);class Tu extends Eu{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=yi(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=yi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,ps(Es,"BidirectionalMergeMode",s),e.weights)throw new Kr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ns(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=vl(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new jr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Ma({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Kr("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Oa;for(const l of a)if(l instanceof Oa!==o)throw new jr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return(0,s.tidy)((()=>{const n=t.initialState;let r,a,i,o;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=s.reverse(a,1)),"concat"===this.mergeMode?o=Ys([r,a]):"sum"===this.mergeMode?o=s.add(r,a):"ave"===this.mergeMode?o=s.mul(.5,s.add(r,a)):"mul"===this.mergeMode?o=s.mul(r,a):null==this.mergeMode&&(o=[r,a]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ds(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ds(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=yi(t.layer);if(delete t.layer,null!=t.numConstants)throw new Kr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Tu.className="Bidirectional",s.serialization.registerClass(Tu);class Nu extends Pa{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,s.tidy)((()=>("float32"!==(e=Na(e)).dtype&&(e=Us(e,"float32")),(0,s.add)((0,s.mul)(e,this.scale),this.offset))))}}Nu.className="Rescaling",s.serialization.registerClass(Nu);const{resizeBilinear:Bu,cropAndResize:Ru}=s.image;class Du extends Pa{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,i,o,l){return(0,s.tidy)((()=>{let u,c=!1;const d=[t/i,n/o,(r+t)/i,(a+n)/o],h=[];3===e.rank?(c=!0,u=(0,s.stack)([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(d);const p=(0,s.tensor)(h,[h.length,4]),A=(0,s.range)(0,h.length,1,"int32"),f=Ru(u,p,A,[r,a],"nearest");return Us(c?Na((0,s.unstack)(f)):f,l)}))}upsize(e,t,n,r){return(0,s.tidy)((()=>Us(Bu(e,[t,n]),r)))}call(e,t){return(0,s.tidy)((()=>{const t=Na(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ba(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Du.className="CenterCrop",s.serialization.registerClass(Du);class Fu extends Pa{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Ba(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,s.tidy)((()=>{let n;if("int32"!==(e=Na(e)).dtype&&(e=Us(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new jr(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Na(t.countWeights)}const r=(0,s.max)(e),a=(0,s.min)(e),i=(0,s.greater)(this.numTokens,r).bufferSync().get(0),o=(0,s.greaterEqual)(a,0).bufferSync().get(0);if(!i||!o)throw new jr(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let a=Na(e);if("int32"!==a.dtype&&(a=Us(a,"int32")),"int"===t)return a;const i=a.shape;if(0===a.rank&&(a=(0,s.expandDims)(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=(0,s.expandDims)(a,-1)),a.rank>2)throw new jr(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${a.rank}.`);const o=["multiHot","oneHot"].includes(t),l=a;let u;if(u="undefined"!==typeof r&&"count"===t?(0,s.denseBincount)(l,r,n,o):(0,s.denseBincount)(l,[],n,o),"tfIdf"!==t)return u;if(r)return(0,s.mul)(u,r);throw new jr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Fu.className="CategoryEncoding",s.serialization.registerClass(Fu);const $u=new Set(["bilinear","nearest"]);class _u extends Pa{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!$u.has(e.interpolation))throw new jr(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Ba(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,s.tidy)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return s.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return s.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...$u]} are supported`)}))}}_u.className="Resizing",s.serialization.registerClass(_u);class Mu{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Mu.className="RandomSeed";class Ou extends Pa{constructor(e){super(e),this.randomGenerator=new Mu(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Ou.className="BaseRandomLayer";const Qu=new Set(["bilinear","nearest"]);class Lu extends Ou{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new jr(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new jr(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new jr(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Qu.has(n))throw new jr(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ba(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,s.tidy)((()=>{const t=Na(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,s.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return s.image.resizeBilinear(e,a);case"nearest":return s.image.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Qu]} are supported`)}}))}}Lu.className="RandomWidth",s.serialization.registerClass(Lu);var zu,Pu=n(6900),Gu=n(8726);function Uu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Hu(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Uu(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Wu(e){return Vu(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:qu)}function Vu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Hu(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Vu(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function qu(e){return null===e?null:Hu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Hu(e){let t=!1;if(s.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(1715);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof s.Tensor)&&!(e instanceof Promise)&&!t)}function Yu(e){return function(e,t){return Uu(e,t)}(e,ju)}function ju(e){return e instanceof s.Tensor?{value:e.clone(),recurse:!1}:Hu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Ku{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Ju extends Ku{constructor(){super(Ju.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Xu(e){return new nc(e)}function Zu(e,t){return new pc(e,t)}Ju.INITIAL_CAPACITY=32;class ec{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new uc(this,e)}filter(e){return new oc(this,e)}map(e){return new lc(this,e)}mapAsync(e){return new cc(this,e)}serialMapAsync(e){return new cc(this,e).serial()}flatmap(e){return new hc(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new ic(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:qu;return this.rowMajorBatch(e,t).map((e=>Wu(e,n)))}concatenate(e,t){return new pc(new tc([this,e]),t)}take(e){return e<0||null==e?this:new ac(this,e)}skip(e){return e<0||null==e?this:new sc(this,e)}prefetch(e){return new Ac(this,e)}shuffle(e,t){return new fc(this,e,t)}serial(){return new rc(this)}}class tc extends ec{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Yu(e),done:!1}}}class nc extends ec{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class rc extends ec{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class sc extends ec{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;s.dispose(e.value)}return this.upstream.next()}}class ac extends ec{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ic extends ec{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class oc extends ec{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;s.dispose(e.value)}}}class lc extends ec{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.tensor_util.getTensorsInContainer(n);for(const a of t)s.tensor_util.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class uc extends ec{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class cc extends ec{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=s.tensor_util.getTensorsInContainer(n);for(const a of t)s.tensor_util.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class dc extends ec{constructor(){super(),this.outputQueue=new Ju,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class hc extends dc{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=s.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of t)s.tensor_util.isTensorInList(a,r)||a.dispose();return!0}}class pc extends ec{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(zu||(zu={}));class Ac extends ec{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Ku(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class fc extends Ac{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Gu.alea(n||s.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class gc{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return s.util.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),mc((async()=>(await n.iterator()).columnMajorBatch(e,t,yc)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,mc((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,mc((async()=>(await t.iterator()).filter((t=>s.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return mc((async()=>(await t.iterator()).map((t=>s.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return mc((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return mc((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,mc((async()=>Zu(Xu((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,mc((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Gu.alea(t||s.util.now().toString());return mc((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,mc((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function mc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends gc{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function yc(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof s.Tensor||s.util.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof s.Tensor?s.stack(e):s.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}gc.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function bc(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const vc=s.kernel_impls.whereImpl;class Ic extends s.KernelBackend{nextDataId(){return Ic.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new s.DataStorage(this,(0,s.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,s.env)().get("IS_NODE")&&s.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s.util.isString(n[0])){const a=n.map((e=>s.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return s.backend_util.mergeRealAndImagArrays(e,t)}return s.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>s.util.decodeString(e)));return(0,s.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,s.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=s.util.now();e();return{kernelMs:s.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){bc([e],"where");const t=this.readSync(e.dataId);return vc(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Ic.nextDataId=0;function xc(e){return(t,n,r)=>{const a=s.util.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function wc(e,t,n){return kc(e,xc(t),n)}function kc(e,t,n){return r=>{let{inputs:a,attrs:i,backend:o}=r;const{x:l}=a;bc(l,e);const u=o,c=u.data.get(l.dataId).values;let d;if("string"===l.dtype){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");d=s.backend_util.fromUint8ToStringArray(c)}else d=c;const h=n||l.dtype,p=t(d,h,i);return u.makeTensorInfo(l.shape,h,p)}}(0,s.registerBackend)("cpu",(()=>new Ic),1);const Cc=wc(s.Elu,(e=>e>=0?e:Math.exp(e)-1)),Ec={kernelName:s.Elu,backendName:"cpu",kernelFunc:Cc};function Sc(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Tc={kernelName:s.Identity,backendName:"cpu",kernelFunc:Sc};function Nc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r;bc([a],"leakyRelu");const o=s.util.sizeFromShape(a.shape),l=n.data.get(a.dataId).values,u=s.util.getTypedArrayFromDType("float32",o);for(let s=0;s<l.length;s++)u[s]=l[s]<0?i*l[s]:l[s];return n.makeTensorInfo(a.shape,"float32",u)}const Bc={kernelName:s.LeakyRelu,backendName:"cpu",kernelFunc:Nc};function Rc(e){return(t,n,r,a,i)=>{const o=s.backend_util.assertAndGetBroadcastShape(t,n),l=o.length,u=s.util.computeStrides(o),c=s.util.sizeFromShape(o),d=s.util.getTypedArrayFromDType(i,c),h=t.length,p=n.length,A=s.util.computeStrides(t),f=s.util.computeStrides(n),g=s.backend_util.getBroadcastDims(t,o),m=s.backend_util.getBroadcastDims(n,o);if(g.length+m.length===0)for(let s=0;s<d.length;++s)d[s]=e(r[s%r.length],a[s%a.length]);else for(let y=0;y<d.length;++y){const t=s.util.indexToLoc(y,l,u),n=t.slice(-h);g.forEach((e=>n[e]=0));const i=s.util.locToIndex(n,h,A),o=t.slice(-p);m.forEach((e=>o[e]=0));const c=s.util.locToIndex(o,p,f);d[y]=e(r[i],a[c])}return[d,o]}}const Dc=Rc(((e,t)=>e<0?t*e:e));function Fc(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;bc([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=Dc(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const $c={kernelName:s.Prelu,backendName:"cpu",kernelFunc:Fc},_c=wc(s.Relu,(e=>Math.max(0,e))),Mc={kernelName:s.Relu,backendName:"cpu",kernelFunc:_c},Oc=wc(s.Relu6,(e=>Math.min(Math.max(0,e),6))),Qc={kernelName:s.Relu6,backendName:"cpu",kernelFunc:Oc},Lc=xc((e=>1/(1+Math.exp(-e)))),zc=wc(s.Sigmoid,(e=>1/(1+Math.exp(-e)))),Pc={kernelName:s.Sigmoid,backendName:"cpu",kernelFunc:zc};function Gc(e,t,n,r,s){if("linear"===n)return Sc({inputs:{x:t},backend:e});if("relu"===n)return _c({inputs:{x:t},backend:e});if("elu"===n)return Cc({inputs:{x:t},backend:e});if("relu6"===n)return Oc({inputs:{x:t},backend:e});if("prelu"===n)return Fc({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Nc({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return zc({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Uc(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Wc={kernelName:s.Complex,backendName:"cpu",kernelFunc:Uc};function Vc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Uc({inputs:{real:Vc(e,t,"float32"),imag:Vc(e,t,"float32")},backend:e})}const r=s.util.makeZerosTypedArray(s.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function qc(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Hc={kernelName:s.Real,backendName:"cpu",kernelFunc:qc};function Yc(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=s.util.toTypedArray([0],n),[a,i]=Rc(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function jc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return Sc({inputs:{x:a},backend:n});const e=Vc(n,a.shape,a.dtype),t=jc({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Uc({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=qc({inputs:{input:a},backend:n}),t=jc({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!s.util.hasEncodingLoss(a.dtype,i)){const e=Sc({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const o=n.data.get(a.dataId).values,[l,u,c]=Yc(o,a.shape,a.dtype,i);return n.makeTensorInfo(l,u,c)}const Kc={kernelName:s.Cast,backendName:"cpu",kernelFunc:jc};function Jc(e,t,n,r){return null==n?n=>{let{inputs:a,backend:i}=n;const{a:o,b:l}=a,u=i;bc([o,l],e);const c=u.data.get(o.dataId).values,d=u.data.get(l.dataId).values,h="string"===o.dtype?s.backend_util.fromUint8ToStringArray(c):c,p="string"===o.dtype?s.backend_util.fromUint8ToStringArray(d):d,A=r||o.dtype,[f,g]=t(o.shape,l.shape,h,p,A);return u.makeTensorInfo(g,A,f)}:e=>{let{inputs:s,backend:a}=e;const{a:i,b:o}=s,l=a;if("complex64"===i.dtype||"complex64"===o.dtype){const e=jc({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,a=l.data.get(r.dataId).values,u=l.data.get(s.dataId).values,c=jc({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,A=l.data.get(h.dataId).values,f=l.data.get(p.dataId).values,[g,m,y]=n(i.shape,o.shape,a,u,A,f),b=l.makeTensorInfo(y,"float32",g),v=l.makeTensorInfo(y,"float32",m),I=Uc({inputs:{real:b,imag:v},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(v),I}{const e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,s=r||i.dtype,[a,u]=t(i.shape,o.shape,e,n,s);return l.makeTensorInfo(u,s,a)}}}function Xc(e){return(t,n,r,a,i,o)=>{const l=s.backend_util.assertAndGetBroadcastShape(t,n),u=s.util.sizeFromShape(l),c=l.length,d=s.util.computeStrides(l),h=s.util.getTypedArrayFromDType("float32",u),p=s.util.getTypedArrayFromDType("float32",u),A=s.backend_util.getBroadcastDims(t,l),f=s.backend_util.getBroadcastDims(n,l),g=s.backend_util.mergeRealAndImagArrays(r,a),m=s.backend_util.mergeRealAndImagArrays(i,o),y=t.length,b=s.util.computeStrides(t),v=n.length,I=s.util.computeStrides(n);if(A.length+f.length===0)for(let s=0;s<h.length;s++){const t=s%g.length,n=s%m.length,r=e(g[2*t],g[2*t+1],m[2*n],m[2*n+1]);h[s]=r.real,p[s]=r.imag}else for(let x=0;x<h.length;x++){const t=s.util.indexToLoc(x,c,d),n=t.slice(-y);A.forEach((e=>n[e]=0));const r=s.util.locToIndex(n,y,b),a=t.slice(-v);f.forEach((e=>a[e]=0));const i=s.util.locToIndex(a,v,I),o=e(g[2*r],g[2*r+1],m[2*i],m[2*i+1]);h[x]=o.real,p[x]=o.imag}return[h,p,l]}}const Zc=Rc(((e,t)=>e+t)),ed=Xc(((e,t,n,r)=>({real:e+n,imag:t+r}))),td=Jc(s.Add,Zc,ed),nd={kernelName:s.Add,backendName:"cpu",kernelFunc:td};function rd(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,o=s.util.sizeFromShape(a.shape),l=s.util.inferFromImplicitShape(i,o),u=s.util.sizeFromShape(l);s.util.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=l,t.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const sd={kernelName:s.Reshape,backendName:"cpu",kernelFunc:rd};function ad(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:o,transposeB:l}=r;bc([a,i],"matMul");const u=a.shape.length,c=i.shape.length,d=o?a.shape[u-2]:a.shape[u-1],h=l?i.shape[c-1]:i.shape[c-2],p=o?a.shape[u-1]:a.shape[u-2],A=l?i.shape[c-2]:i.shape[c-1],f=a.shape.slice(0,-2),g=i.shape.slice(0,-2),m=s.util.sizeFromShape(f),y=s.util.sizeFromShape(g),b=s.broadcast_util.assertAndGetBroadcastShape(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,A]);s.util.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${l} must match.`));const v=l?[y,A,h]:[y,h,A],I=rd({inputs:{x:a},backend:n,attrs:{shape:o?[m,d,p]:[m,p,d]}}),x=rd({inputs:{x:i},backend:n,attrs:{shape:v}}),w=o?I.shape[1]:I.shape[2],k=o?I.shape[2]:I.shape[1],C=l?x.shape[1]:x.shape[2],E=Math.max(m,y),S=n.data.get(I.dataId).values,T=n.data.get(x.dataId).values,N=s.util.computeStrides(I.shape),B=s.util.computeStrides(x.shape),[R,D,F]=o?[N[0],1,N[1]]:[N[0],N[1],1],[$,_,M]=l?[1,B[1],B[0]]:[B[1],1,B[0]],O=k*C,Q=(0,s.buffer)([E,k,C],I.dtype),L=Q.values,z=n.blockSize;for(let s=0;s<E;s++){const e=s%m,t=s%y;for(let n=0;n<k;n+=z){const r=Math.min(n+z,k);for(let a=0;a<C;a+=z){const i=Math.min(a+z,C);for(let o=0;o<w;o+=z){const l=Math.min(o+z,w);for(let u=n;u<r;u++)for(let n=a;n<i;n++){let r=0;for(let s=o;s<l;s++){r+=S[e*R+u*D+s*F]*T[s*$+n*_+t*M]}L[s*O+(u*C+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(x),n.makeTensorInfo(b,Q.dtype,Q.values)}const id={kernelName:s.BatchMatMul,backendName:"cpu",kernelFunc:ad};const od={kernelName:s._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;let h,p,A;const f=[];h=ad({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=td({inputs:{a:h,b:i},backend:n}),f.push(h),h=p),c&&(A=Gc(n,h,c,o,d),f.push(h),h=A);for(const g of f)n.disposeIntermediateTensorInfo(g);return h}};function ld(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const ud={kernelName:s.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;bc(t,"abs");let r=new Float32Array(s.util.sizeFromShape(t.shape));return r=ld(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},cd=wc(s.Acos,(e=>Math.acos(e))),dd={kernelName:s.Acos,backendName:"cpu",kernelFunc:cd},hd=wc(s.Acosh,(e=>Math.acosh(e))),pd={kernelName:s.Acosh,backendName:"cpu",kernelFunc:hd};const Ad={kernelName:s.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;bc(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),i=(0,s.buffer)(r[0].shape,r[0].dtype),o=i.values;for(let s=0;s<r.length;s++){const e=a[s];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function fd(e,t,n,r,a){const i=t.length,o=s.util.sizeFromShape(t),l=s.util.computeStrides(t),u=s.util.computeStrides(a),c=s.util.getTypedArrayFromDType(n,s.util.sizeFromShape(a));for(let d=0;d<o;++d){const t=s.util.indexToLoc(d,i,l),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];c[s.util.locToIndex(n,i,u)]=e[d]}return c}function gd(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;bc(s,"transpose");const i=s.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=s.shape[a[u]];const l=fd(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const md={kernelName:s.Transpose,backendName:"cpu",kernelFunc:gd};const yd={kernelName:s.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;bc(a,"all");const l=s.util.parseAxisParam(i,a.shape);let u=l;const c=s.backend_util.getAxesPermutation(u,a.shape.length);let d=a;null!=c&&(d=gd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=s.backend_util.getInnerMostAxes(u.length,a.shape.length)),s.backend_util.assertAxesAreInnerMostDims("all",u,d.shape.length);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,u),A=s.util.sizeFromShape(p),f=s.util.makeZerosTypedArray(s.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<f.length;++s){const e=s*A;let t=g[e];for(let n=0;n<A;++n){const r=g[e+n];t=t&&r}f[s]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const m=n.makeTensorInfo(h,d.dtype,f);if(o){const e=rd({inputs:{x:m},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,l)}});return n.disposeIntermediateTensorInfo(m),e}return m}};const bd={kernelName:s.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;bc(a,"any");const l=s.util.parseAxisParam(i,a.shape);let u=l;const c=s.backend_util.getAxesPermutation(u,a.shape.length);let d=a;null!=c&&(d=gd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=s.backend_util.getInnerMostAxes(u.length,a.shape.length)),s.backend_util.assertAxesAreInnerMostDims("any",u,d.shape.length);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,u),A=s.util.sizeFromShape(p),f=s.util.makeZerosTypedArray(s.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<f.length;++s){const e=s*A;let t=g[e];for(let n=0;n<A;++n){const r=g[e+n];t=t||r}f[s]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const m=n.makeTensorInfo(h,d.dtype,f);if(o){const e=rd({inputs:{x:m},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,l)}});return n.disposeIntermediateTensorInfo(m),e}return m}};const vd={kernelName:s.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;bc(a,"argMax");let o=s.util.parseAxisParam(i,a.shape);const l=s.backend_util.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=gd({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=s.backend_util.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],s.backend_util.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[d,h]=s.backend_util.computeOutAndReduceShapes(u.shape,o),p=s.util.sizeFromShape(d),A=s.util.makeZerosTypedArray(p,"int32"),f=s.util.sizeFromShape(h),g=n.data.get(u.dataId).values;for(let s=0;s<A.length;++s){const e=s*f;let t=g[e],n=0;for(let r=0;r<f;++r){const s=g[e+r];s>t&&(t=s,n=r)}A[s]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",A)}};const Id={kernelName:s.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;bc(a,"argMin");let o=s.util.parseAxisParam(i,a.shape);const l=s.backend_util.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=gd({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=s.backend_util.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],s.backend_util.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[d,h]=s.backend_util.computeOutAndReduceShapes(u.shape,o),p=s.util.sizeFromShape(d),A=s.util.makeZerosTypedArray(p,"int32"),f=s.util.sizeFromShape(h),g=n.data.get(u.dataId).values;for(let s=0;s<A.length;++s){const e=s*f;let t=g[e],n=0;for(let r=0;r<f;++r){const s=g[e+r];s<t&&(t=s,n=r)}A[s]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",A)}},xd=wc(s.Asin,(e=>Math.asin(e))),wd={kernelName:s.Asin,backendName:"cpu",kernelFunc:xd},kd=wc(s.Asinh,(e=>Math.asinh(e))),Cd={kernelName:s.Asinh,backendName:"cpu",kernelFunc:kd},Ed=wc(s.Atan,(e=>Math.atan(e))),Sd={kernelName:s.Atan,backendName:"cpu",kernelFunc:Ed},Td=Rc(((e,t)=>Math.atan2(e,t))),Nd=Jc(s.Atan2,Td),Bd={kernelName:s.Atan2,backendName:"cpu",kernelFunc:Nd},Rd=wc(s.Atanh,(e=>Math.atanh(e))),Dd={kernelName:s.Atanh,backendName:"cpu",kernelFunc:Rd};function Fd(e,t,n,r,a,i){const o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,A=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,s.buffer)(a.outShape,n),m=g.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],v=a.outShape[3];for(let s=0;s<a.batchSize;++s){const t=s*y,n=s*r[0];for(let s=0;s<a.inChannels;++s)for(let g=0;g<a.outHeight;++g){const y=g*o-p,I=Math.max(0,y),x=Math.min(a.inHeight,d+y),w=t+g*b;for(let t=0;t<a.outWidth;++t){const o=t*l-A,d=Math.max(0,o),p=Math.min(a.inWidth,h+o);let g=f,y=0,b=0;for(let t=I;t<x;t+=u){const a=n+t*r[1];for(let t=d;t<p;t+=c){const n=e[a+t*r[2]+s];"max"===i&&n>g?g=n:"avg"===i&&(y+=n,b++)}if(isNaN(g))break}m[w+t*v+s]="avg"===i?y/b:g}}}return g}function $d(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,s.buffer)(r.outShape,"int32"),l=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,A=r.padInfo.top,f=r.padInfo.left,g=(0,s.buffer)(t,n,e);for(let s=0;s<r.batchSize;++s)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*l-A;let m=n;for(;m<0;)m+=c;const y=Math.min(r.inHeight,h+n);for(let l=0;l<r.outWidth;++l){const h=l*u-f;let A=h;for(;A<0;)A+=d;const b=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,I=-1;for(let t=m;t<y;t+=c){const o=t-n;for(let n=A;n<b;n+=d){const l=n-h,u=g.get(s,t,n,e);u>v&&(v=u,I=a?i?((s*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*p+l)}}o.set(I,s,t,l,e)}}return o}function _d(e,t,n,r,a,i){const o=a.strideDepth,l=a.strideHeight,u=a.strideWidth,c=a.dilationDepth,d=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,A=a.effectiveFilterHeight,f=a.effectiveFilterWidth,g=a.padInfo.front,m=a.padInfo.top,y=a.padInfo.left,b="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,s.buffer)(a.outShape,n),I=v.values,x=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],w=a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[3]*a.outShape[4],C=a.outShape[4];for(let s=0;s<a.batchSize;++s){const t=s*x,n=s*r[0];for(let s=0;s<a.inChannels;++s)for(let v=0;v<a.outDepth;++v){const x=v*o-g;let E=x;for(;E<0;)E+=c;const S=Math.min(a.inDepth,p+x),T=t+v*w;for(let t=0;t<a.outHeight;++t){const o=t*l-m;let p=o;for(;p<0;)p+=d;const g=Math.min(a.inHeight,A+o),v=T+t*k;for(let t=0;t<a.outWidth;++t){const o=t*u-y;let l=o;for(;l<0;)l+=h;const A=Math.min(a.inWidth,f+o),m=v+t*C;let x=b,w=0,k=0;for(let t=E;t<S;t+=c){const a=n+t*r[1];for(let t=p;t<g;t+=d){const n=a+t*r[2];for(let t=l;t<A;t+=h){const a=e[n+t*r[3]+s];if("max"===i&&a>x?x=a:"avg"===i&&(w+=a,k++),isNaN(x))break}if(isNaN(x))break}if(isNaN(x))break}I[m+s]="avg"===i?w/Math.max(k,1):x}}}}return v}const Md={kernelName:s.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bc(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=s.backend_util.computePool2DInfo(a.shape,i,o,1,l,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&s.util.arraysEqual(c.inShape,c.outShape))d=Sc({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=s.util.computeStrides(a.shape),r=Fd(e,a.shape,a.dtype,t,c,"avg");d=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return d}};const Od={kernelName:s.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r;bc(a,"avgPool3d");const d=s.backend_util.computePool3DInfo(a.shape,i,o,1,l,u,c),h=_d(n.data.get(a.dataId).values,a.shape,a.dtype,s.util.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Qd={kernelName:s.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r;bc([a,i],"avgPool3DGrad");const d=s.backend_util.computePool3DInfo(i.shape,o,l,1,u,c),h=d.strideDepth,p=d.strideHeight,A=d.strideWidth,f=d.filterDepth,g=d.filterHeight,m=d.filterWidth,y=d.dilationDepth,b=d.dilationHeight,v=d.dilationWidth,I=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=I-1-d.padInfo.front,C=w-1-d.padInfo.left,E=x-1-d.padInfo.top,S=(0,s.buffer)(i.shape,"float32"),T=1/(f*g*m),N=n.bufferSync(a);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=t-k,i=n-E,o=r-C;let l=0;for(let t=0;t<I;t+=y){const n=(a+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<x;t+=b){const r=(i+t)/p;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let t=0;t<w;t+=v){const a=(o+t)/A;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;l+=N.get(s,n,r,a,e)}}}S.set(l*T,s,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Ld={kernelName:s.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,o=i;bc([a,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,d=s.backend_util.computePool2DInfo(o.shape,l,u,1,c),h=d.strideHeight,p=d.strideWidth,A=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,y=d.effectiveFilterHeight,b=d.effectiveFilterWidth,v=b-1-d.padInfo.left,I=y-1-d.padInfo.top,x=(0,s.buffer)(o.shape,"float32"),w=1/(A*f),k=n.data.get(a.dataId).values,C=(0,s.buffer)(a.shape,"float32",k);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-I,a=n-v;let i=0;for(let t=0;t<y;t+=g){const n=(r+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=m){const r=(a+t)/p;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;i+=C.get(s,n,r,e)}}x.set(i*w,s,t,n,e)}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const zd={kernelName:s.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:i,offset:o,mean:l,variance:u}=t;s.util.assert(l.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.util.assert(null==o||l.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.util.assert(null==i||l.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),bc([a,l,u,i,o],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=n.data.get(a.dataId).values,h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values,A=i?n.data.get(i.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),m=f.length,y=A.length,b=p.length,v=h.length;let I=0,x=0,w=0,k=0;for(let s=0;s<d.length;++s)g[s]=f[I++]+(d[s]-h[x++])*A[w++]/Math.sqrt(p[k++]+c),I>=m&&(I=0),x>=v&&(x=0),w>=y&&(w=0),k>=b&&(k=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};function Pd(e,t,n,r,a){const i=s.slice_util.isSliceContinous(r,t,n),o=s.util.sizeFromShape(n),l=s.util.computeStrides(r);if(i){const n=s.slice_util.computeFlatOffset(t,l);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===a?s.backend_util.fromUint8ToStringArray(e):e,c=(0,s.buffer)(r,a,u),d=(0,s.buffer)(n,a);for(let s=0;s<d.size;++s){const e=d.indexToLoc(s),n=e.map(((e,n)=>e+t[n]));d.set(c.get(...n),...e)}return"string"===a?s.backend_util.fromStringArrayToUint8(d.values):d.values}function Gd(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:o}=r;bc(a,"slice");const[l,u]=s.slice_util.parseSliceParams(a,i,o);s.slice_util.assertParamsValid(a,l,u);const c=Pd(n.data.get(a.dataId).values,l,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const Ud={kernelName:s.Slice,backendName:"cpu",kernelFunc:Gd};const Wd={kernelName:s.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:o}=r;bc([a],"batchToSpaceND");const l=i.reduce(((e,t)=>e*t)),u=s.backend_util.getReshaped(a.shape,i,l),c=s.backend_util.getPermuted(u.length,i.length),d=s.backend_util.getReshapedPermuted(a.shape,i,l),h=s.backend_util.getSliceBeginCoords(o,i.length),p=s.backend_util.getSliceSize(d,o,i.length),A=rd({inputs:{x:a},backend:n,attrs:{shape:u}}),f=gd({inputs:{x:A},backend:n,attrs:{perm:c}}),g=rd({inputs:{x:f},backend:n,attrs:{shape:d}}),m=Gd({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function Vd(e,t,n,r,a){const i=s.util.sizeFromShape(r),o=s.util.makeZerosTypedArray(a,n);for(let s=0;s<e.length;s++){const n=e[s];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(o[n]+=i>0?t[s]:1)}return o}function qd(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e.shape[0],i=e.shape[1],o=(0,s.buffer)([a,n],t.dtype);for(let s=0;s<a;s++)for(let a=0;a<i;a++){const i=e.get(s,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,s,i):t.size>0?o.set(o.get(s,i)+t.get(s,a),s,i):o.set(o.get(s,i)+1,s,i))}return o}const Hd={kernelName:s.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=Vd(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},Yd=Rc(((e,t)=>e&t)),jd=Jc(s.BitwiseAnd,Yd),Kd={kernelName:s.BitwiseAnd,backendName:"cpu",kernelFunc:jd};const Jd={kernelName:s.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=s.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}},Xd=xc((e=>Math.ceil(e))),Zd=kc(s.Ceil,Xd),eh={kernelName:s.Ceil,backendName:"cpu",kernelFunc:Zd},th=wc(s.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),nh={kernelName:s.ClipByValue,backendName:"cpu",kernelFunc:th},rh={kernelName:s.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(s.util.sizeFromShape(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.real,o=a.complexTensorInfos.imag,l=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values;for(let s=0;s<l.length;s++){const e=l[s],t=u[s];r[s]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function sh(e,t,n,r){const a=s.util.getArrayFromDType(n,s.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=s.util.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?s.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const s=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[s+t]=i[o++]}r+=e.shape[1]}))}return a}function ah(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const ih={kernelName:s.Imag,backendName:"cpu",kernelFunc:ah};function oh(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=s.util.parseAxisParam(a,t[0].shape)[0],o=t.map((e=>e.shape));s.backend_util.assertParamsConsistent(o,i);let l=s.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===s.util.sizeFromShape(l))return n.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter((e=>s.util.sizeFromShape(e.shape)>0));if(1===u.length)return Sc({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>qc({inputs:{input:e},backend:n}))),t=u.map((e=>ah({inputs:{input:e},backend:n}))),r=oh({inputs:e,backend:n,attrs:{axis:i}}),s=oh({inputs:t,backend:n,attrs:{axis:i}}),a=Uc({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const c=u.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(i));return rd({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));l=s.backend_util.computeOutShape(c.map((e=>e.shape)),1);const h=1===c[0].shape[0],p=sh(d,l,t[0].dtype,h),A=s.backend_util.computeOutShape(u.map((e=>e.shape)),i),f=n.makeTensorInfo(A,t[0].dtype,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const lh={kernelName:s.Concat,backendName:"cpu",kernelFunc:oh};function uh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=r;bc([a,i],"conv2d");const h=s.backend_util.convertConv2DDataFormat(u),p=s.backend_util.computeConv2DInfo(a.shape,i.shape,o,c,l,d,!1,h),A=p.filterHeight,f=p.filterWidth,g=p.dilationHeight,m=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,v="channelsLast"===p.dataFormat,I=new s.TensorBuffer(p.outShape,a.dtype),x=s.util.computeStrides(a.shape),w=s.util.computeStrides(i.shape),k=x[0],C=v?x[1]:x[2],E=v?x[2]:1,S=v?1:x[1],T=I.strides[0],N=v?I.strides[1]:I.strides[2],B=v?I.strides[2]:1,R=v?1:I.strides[1],D=n.data.get(a.dataId).values,F=n.data.get(i.dataId).values,$=I.values;for(let s=0;s<p.batchSize;++s){const e=s*k,t=s*T;for(let n=0;n<p.outHeight;++n){const r=t+n*N,s=n*p.strideHeight-b;for(let t=0;t<A;++t){const n=s+t*g;if(n<0||n>=p.inHeight)continue;const a=t*w[0],i=e+n*C;for(let e=0;e<p.outWidth;++e){const t=r+e*B,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=p.inWidth)continue;const s=i+r*E;let o=a+e*w[1];for(let e=0;e<p.inChannels;++e){const n=D[s+e*S];for(let e=0;e<p.outChannels;++e)$[t+e*R]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(I.shape,I.dtype,$)}const ch={kernelName:s.Conv2D,backendName:"cpu",kernelFunc:uh};const dh={kernelName:s.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:d}=r;bc([a,i],"conv2dBackpropFilter");const h=s.backend_util.convertConv2DDataFormat(u),p=s.backend_util.computeConv2DInfo(a.shape,d,o,1,l,c,!1,h),{strideHeight:A,strideWidth:f,filterHeight:g,filterWidth:m}=p,y="channelsLast"===p.dataFormat,b=new s.TensorBuffer(p.filterShape,"float32"),v=p.padInfo.left,I=p.padInfo.top,x=n.data.get(a.dataId).values,w=n.data.get(i.dataId).values,k=new s.TensorBuffer(a.shape,a.dtype,x),C=new s.TensorBuffer(i.shape,i.dtype,w);for(let s=0;s<g;++s){const e=Math.max(0,Math.ceil((I-s)/A)),t=Math.min(p.outHeight,(p.inHeight+I-s)/A);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((v-n)/f)),a=Math.min(p.outWidth,(p.inWidth+v-n)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<t;++c){const e=s+c*A-I;for(let t=r;t<a;++t){const r=n+t*f-v;l+=y?k.get(u,e,r,i)*C.get(u,c,t,o):k.get(u,i,e,r)*C.get(u,o,c,t)}}b.set(l,s,n,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const hh={kernelName:s.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:d}=r;bc([a,i],"conv2dBackpropInput");const h=s.util.computeStrides(i.shape),p=s.util.computeStrides(a.shape);let A=s.backend_util.convertConv2DDataFormat(c);const f=s.backend_util.computeConv2DInfo(o,i.shape,l,1,u,d,!1,A),g=new s.TensorBuffer(f.inShape,"float32"),m=g.values,y=n.data.get(a.dataId).values,b=n.data.get(i.dataId).values,[v,I,x]=h,{batchSize:w,filterHeight:k,filterWidth:C,inChannels:E,inHeight:S,inWidth:T,outChannels:N,outHeight:B,outWidth:R,strideHeight:D,strideWidth:F}=f;A=f.dataFormat;const $=k-1-f.padInfo.top,_=C-1-f.padInfo.left,M="channelsLast"===A,O=g.strides[0],Q=M?g.strides[1]:g.strides[2],L=M?g.strides[2]:1,z=M?1:g.strides[1],P=p[0],G=M?p[1]:p[2],U=M?p[2]:1,W=M?1:p[1];for(let s=0;s<w;++s)for(let e=0;e<E;++e)for(let t=0;t<S;++t){const n=t-$,r=Math.max(0,Math.ceil(n/D)),a=Math.min(B,(k+n)/D);for(let i=0;i<T;++i){const o=i-_,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,(C+o)/F);let c=0;for(let t=r;t<a;++t){const r=t*D-n;for(let n=l;n<u;++n){const a=P*s+G*t+U*n,i=v*(k-1-r)+I*(C-1-(n*F-o))+x*e;for(let e=0;e<N;++e){c+=y[a+W*e]*b[i+e]}}}m[O*s+Q*t+L*i+z*e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const ph={kernelName:s.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=r;bc([a,i],"conv3d");const c=s.backend_util.computeConv3DInfo(a.shape,i.shape,o,u,l),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:A,dilationHeight:f,dilationWidth:g,padInfo:m}=c,y=m.front,b=m.left,v=m.top,I=new s.TensorBuffer(c.outShape,a.dtype),x=n.data.get(a.dataId).values,w=n.data.get(i.dataId).values,k=I.values,C=s.util.computeStrides(a.shape),E=s.util.computeStrides(i.shape);for(let s=0;s<c.batchSize;++s){const e=s*C[0],t=s*I.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*I.strides[1],s=n*c.strideDepth-y;for(let t=0;t<d;++t){const n=s+t*A;if(n<0||n>=c.inDepth)continue;const a=t*E[0],i=e+n*C[1];for(let e=0;e<c.outHeight;++e){const t=r+e*I.strides[2],n=e*c.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=c.inHeight)continue;const s=a+e*E[1],o=i+r*C[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*g;if(t<0||t>=c.inWidth)continue;const a=s+e*E[2],i=o+t*c.inChannels;let l=a;for(let e=0;e<c.inChannels;++e){const t=x[i+e];for(let e=0;e<c.outChannels;++e)k[n+e]+=t*w[l+e];l+=c.outChannels}}}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Ah={kernelName:s.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,pad:l,filterShape:u}=r;bc([a,i],"conv3dBackpropFilterV2");const c=s.util.computeStrides(a.shape),d=s.util.computeStrides(i.shape),h=s.backend_util.computeConv3DInfo(a.shape,u,o,1,l),p=h.strideDepth,A=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,y=h.filterWidth,b=new s.TensorBuffer(h.filterShape,"float32"),v=b.values,[I,x,w,k]=b.strides,C=n.data.get(i.dataId).values,[E,S,T,N]=d,B=n.data.get(a.dataId).values,[R,D,F,$]=c,_=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let s=0;s<g;++s){const e=Math.max(0,Math.ceil((_-s)/p)),t=Math.min(h.outDepth,(h.inDepth+_-s)/p),n=s*I;for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((O-r)/A)),i=Math.min(h.outHeight,(h.inHeight+O-r)/A),o=r*x+n;for(let n=0;n<y;++n){const l=Math.max(0,Math.ceil((M-n)/f)),u=Math.min(h.outWidth,(h.inWidth+M-n)/f),c=n*w+o;for(let o=0;o<h.inChannels;++o){const d=o*k+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*R,m=d*E;for(let d=e;d<t;++d){const e=(s+d*p-_)*D+h,t=d*S+m;for(let s=a;s<i;++s){const a=(r+s*A-O)*F+e,i=s*T+t;for(let e=l;e<u;++e){const t=e*N+i;g+=B[(n+e*f-M)*$+a+o]*C[t+c]}}}}v[d+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const fh={kernelName:s.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:o,strides:l,inputShape:u}=r;bc([a],"conv3dBackpropInputV2");const c=s.util.computeStrides(a.shape),d=s.util.computeStrides(i.shape),h=s.backend_util.computeConv3DInfo(u,i.shape,l,1,o),p=new s.TensorBuffer(h.inShape,"float32"),A=p.values,[f,g,m,y]=p.strides,b=n.data.get(a.dataId).values,[v,I,x,w]=c,k=n.data.get(i.dataId).values,[C,E,S,T]=d,{batchSize:N,filterDepth:B,filterHeight:R,filterWidth:D,inChannels:F,inDepth:$,inHeight:_,inWidth:M,outChannels:O,outDepth:Q,outHeight:L,outWidth:z,strideDepth:P,strideHeight:G,strideWidth:U}=h,W=B-1-h.padInfo.front,V=R-1-h.padInfo.top,q=D-1-h.padInfo.left;for(let s=0;s<N;++s)for(let e=0;e<F;++e)for(let t=0;t<$;++t){const n=t-W,r=Math.max(0,Math.ceil(n/P)),a=Math.min(Q,(B+n)/P);for(let i=0;i<_;++i){const o=i-V,l=Math.max(0,Math.ceil(o/G)),u=Math.min(L,(R+o)/G);for(let c=0;c<M;++c){const d=c-q,h=Math.max(0,Math.ceil(d/U)),p=Math.min(z,(D+d)/U);let N=0;for(let t=r;t<a;++t){const r=t*P-n;for(let n=l;n<u;++n){const a=n*G-o;for(let i=h;i<p;++i){const o=v*s+I*t+x*n+w*i,l=C*(B-1-r)+E*(R-1-a)+S*(D-1-(i*U-d))+T*e;for(let e=0;e<O;++e){N+=b[o+e]*k[l+e]}}}}A[f*s+g*t+m*i+y*c+e]=N}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},gh=wc(s.Cos,(e=>Math.cos(e))),mh={kernelName:s.Cos,backendName:"cpu",kernelFunc:gh},yh=wc(s.Cosh,(e=>Math.cosh(e))),bh={kernelName:s.Cosh,backendName:"cpu",kernelFunc:yh};const vh={kernelName:s.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:o}=t,{cropSize:l,method:u,extrapolationValue:c}=r,[d,h,p,A]=a.shape,f=i.shape[0],[g,m]=l,y=(0,s.buffer)([f,g,m,A],"float32"),b=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,I=n.data.get(a.dataId).values,x=s.util.computeStrides(a.shape),w=s.util.computeStrides(y.shape);for(let s=0;s<f;s++){const e=4*s,t=b[e],n=b[e+1],r=b[e+2],a=b[e+3],i=v[s];if(i>=d)continue;const o=g>1?(r-t)*(h-1)/(g-1):0,l=m>1?(a-n)*(p-1)/(m-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*o:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<m;t++)for(let e=0;e<A;e++){const n=e+t*w[2]+d*w[1]+s*w[0];y.values[n]=c}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),o=e-t;for(let e=0;e<m;e++){const u=m>1?n*(p-1)+e*l:.5*(n+a)*(p-1);if(u<0||u>p-1){for(let t=0;t<A;t++){const n=t+e*w[2]+d*w[1]+s*w[0];y.values[n]=c}continue}const h=Math.floor(u),f=Math.ceil(u),g=u-h;for(let n=0;n<A;n++){let a=n+h*x[2]+t*x[1]+i*x[0];const l=I[a];a=n+f*x[2]+t*x[1]+i*x[0];const u=I[a];a=n+h*x[2]+r*x[1]+i*x[0];const c=I[a];a=n+f*x[2]+r*x[1]+i*x[0];const p=l+(u-l)*g,A=c+(I[a]-c)*g;a=n+e*w[2]+d*w[1]+s*w[0],y.values[a]=p+(A-p)*o}}}else for(let t=0;t<m;++t){const r=m>1?n*(p-1)+t*l:.5*(n+a)*(p-1);if(r<0||r>p-1){for(let e=0;e<A;e++){const n=e+t*w[2]+d*w[1]+s*w[0];y.values[n]=c}continue}const o=Math.round(r),u=Math.round(e);for(let e=0;e<A;e++){const n=e+o*x[2]+u*x[1]+i*x[0],r=e+t*w[2]+d*w[1]+s*w[0];y.values[r]=I[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ih={kernelName:s.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:o,reverse:l}=r;bc(a,"cumprod");const u=s.backend_util.getAxesPermutation([i],a.shape.length);let c=a;null!=u&&(c=gd({inputs:{x:a},backend:n,attrs:{perm:u}}));const d=s.backend_util.getInnerMostAxes(1,a.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const h=(0,s.upcastType)(c.dtype,"int32"),p=s.util.makeOnesTypedArray(s.util.sizeFromShape(c.shape),h),A=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],g=l?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let s=0;s<A.length;s+=f)for(let e=0;e<f;e++){const t=g(s,e);if(0===e)p[t]=o?1:A[t];else{const n=g(s,e-1);p[t]=o?A[n]*p[n]:A[t]*p[n]}}const m=n.makeTensorInfo(c.shape,h,p);if(null!=u){const e=gd({inputs:{x:m},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(c),e}return m}};const xh={kernelName:s.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:o,reverse:l}=r;bc(a,"cumsum");const u=s.backend_util.getAxesPermutation([i],a.shape.length);let c=a;null!=u&&(c=gd({inputs:{x:a},backend:n,attrs:{perm:u}}));const d=s.backend_util.getInnerMostAxes(1,a.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const h=(0,s.upcastType)(c.dtype,"int32"),p=s.util.makeZerosTypedArray(s.util.sizeFromShape(c.shape),h),A=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],g=l?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let s=0;s<A.length;s+=f)for(let e=0;e<f;e++){const t=g(s,e);if(0===e)p[t]=o?0:A[t];else{const n=g(s,e-1);p[t]=o?A[n]+p[n]:A[t]+p[n]}}const m=n.makeTensorInfo(c.shape,h,p);if(null!=u){const e=gd({inputs:{x:m},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(c),e}return m}};const wh={kernelName:s.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=Vd(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=qd(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const kh={kernelName:s.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:o}=r;s.util.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const l=a.shape[0],u=a.shape[1],c=a.shape[2],d=a.shape[3],h=u*i,p=c*i,A=d/(i*i),f=n.data.get(a.dataId).values,g=new Float32Array(l*h*p*A);let m=0;for(let s=0;s<l;++s)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const r=Math.floor(e/i),a=(n*i+e%i)*A;for(let e=0;e<A;++e){const n=e+a+d*(r+c*(t+u*s));g[m++]=f[n]}}}return n.makeTensorInfo([l,h,p,A],a.dtype,g)}};function Ch(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;bc([a,i],"depthwiseConv2DNative");const d=s.util.computeStrides(a.shape),h=s.util.computeStrides(i.shape);let p=u;null==p&&(p=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const A=s.backend_util.computeConv2DInfo(a.shape,i.shape,o,p,l,c,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:b}=A,v=b.left,I=b.top,x=A.outChannels/A.inChannels,w=new s.TensorBuffer(A.outShape,a.dtype),k=n.data.get(a.dataId).values,C=n.data.get(i.dataId).values,E=w.values;for(let s=0;s<A.batchSize;++s){const e=s*d[0],t=s*w.strides[0];for(let n=0;n<A.outHeight;++n){const r=t+n*w.strides[1],s=n*A.strideHeight-I;for(let t=0;t<f;++t){const n=s+t*m;if(n<0||n>=A.inHeight)continue;const a=t*h[0],i=e+n*d[1];for(let e=0;e<A.outWidth;++e){const t=r+e*w.strides[2],n=e*A.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=A.inWidth)continue;const s=a+e*h[1],o=i+r*A.inChannels;let l=t,u=s;for(let e=0;e<A.inChannels;++e){const t=k[o+e];for(let e=0;e<x;++e)E[l+e]+=t*C[u+e];l+=x,u+=x}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const Eh={kernelName:s.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Ch};const Sh={kernelName:s.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:d}=r;bc([a,i],"depthwiseConv2dNativeBackpropFilter");const h=s.backend_util.computeConv2DInfo(a.shape,d,o,l,u,c,!0),{strideHeight:p,strideWidth:A,filterHeight:f,filterWidth:g}=h,m=new s.TensorBuffer(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,I=n.data.get(a.dataId).values,x=new s.TensorBuffer(a.shape,a.dtype,I),w=n.data.get(i.dataId).values,k=new s.TensorBuffer(i.shape,i.dtype,w);for(let s=0;s<f;++s){const e=Math.max(0,Math.ceil((b-s)/p)),t=Math.min(h.outHeight,(h.inHeight+b-s)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((y-n)/A)),a=Math.min(h.outWidth,(h.inWidth+y-n)/A);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/v),l=i%v;let u=0;for(let c=0;c<h.batchSize;++c)for(let l=e;l<t;++l){const e=s+l*p-b;for(let t=r;t<a;++t){const r=n+t*A-y;u+=x.get(c,e,r,o)*k.get(c,l,t,i)}}m.set(u,s,n,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Th={kernelName:s.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:d}=r;bc([a,i],"depthwiseConv2DNativeBackpropInput");const h=s.util.computeStrides(a.shape),p=s.util.computeStrides(i.shape),A=s.backend_util.computeConv2DInfo(d,i.shape,o,l,u,c,!0),f=new s.TensorBuffer(A.inShape,"float32"),g=f.values,[m,y,b]=f.strides,v=n.data.get(a.dataId).values,[I,x,w]=h,k=n.data.get(i.dataId).values,[C,E,S]=p,{batchSize:T,filterHeight:N,filterWidth:B,inChannels:R,inHeight:D,inWidth:F,outChannels:$,outHeight:_,outWidth:M,strideHeight:O,strideWidth:Q}=A,L=N-1-A.padInfo.top,z=B-1-A.padInfo.left,P=$/R;for(let s=0;s<T;++s)for(let e=0;e<R;++e)for(let t=0;t<D;++t){const n=t-L,r=Math.max(0,Math.ceil(n/O)),a=Math.min(_,(N+n)/O);for(let i=0;i<F;++i){const o=i-z,l=Math.max(0,Math.ceil(o/Q)),u=Math.min(M,(B+o)/Q);let c=0;for(let t=r;t<a;++t){const r=t*O-n;for(let n=l;n<u;++n){const a=I*s+x*t+w*n,i=C*(N-1-r)+E*(B-1-(n*Q-o))+S*e;for(let t=0;t<P;++t){c+=v[a+(e*P+t)]*k[i+t]}}}g[m*s+y*t+b*i+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Nh={kernelName:s.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=s.util.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,o=(0,s.buffer)([a,a],r.dtype),l=o.values;for(let s=0;s<i.length;s++)l[s*a+s]=i[s];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},Bh={kernelName:s.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=n,d=c.data.get(a.dataId).values,h=a.shape.length,p=c.data.get(i.dataId).values,A=i.shape.length,{batchSize:f,inHeight:g,inWidth:m,inChannels:y,outHeight:b,outWidth:v,padInfo:I,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:C,dilationHeight:E,dilationWidth:S,outShape:T}=s.backend_util.computeDilation2DInfo(a.shape,i.shape,o,l,"NHWC",u),N=s.util.sizeFromShape(T),B=T.length,R=s.util.getArrayFromDType(a.dtype,N);for(let D=0;D<f;++D)for(let e=0;e<b;++e){const t=e*x-I.top;for(let n=0;n<v;++n){const r=n*w-I.left;for(let o=0;o<y;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*E;if(n>=0&&n<g)for(let t=0;t<C;++t){const u=r+t*S;if(u>=0&&u<m){const r=s.util.locToIndex([D,n,u,o],h,s.util.computeStrides(a.shape)),c=s.util.locToIndex([e,t,o],A,s.util.computeStrides(i.shape)),f=d[r]+p[c];f>l&&(l=f)}}}R[s.util.locToIndex([D,e,n,o],B,s.util.computeStrides(T))]=l}}}return{dataId:c.write(s.util.toTypedArray(R,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Rh={kernelName:s.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:i,dy:o}=t,{strides:l,pad:u,dilations:c}=r,d=n,h=s.util.toNestedArray(a.shape,d.data.get(a.dataId).values),p=s.util.toNestedArray(i.shape,d.data.get(i.dataId).values),{batchSize:A,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:v,strideHeight:I,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:C,dilationWidth:E,outShape:S}=s.backend_util.computeDilation2DInfo(a.shape,i.shape,l,u,"NHWC",c);s.util.assert(o.rank===S.length,(()=>`Error in ${s.Dilation2DBackpropFilter}, dy must have the same rank as output ${S.length}, but got ${o.rank}`));const T=s.util.toNestedArray(S,d.data.get(o.dataId).values),N=s.util.makeZerosNestedTypedArray(i.shape,i.dtype);for(let s=0;s<A;++s)for(let e=0;e<y;++e){const t=e*I-v.top;for(let n=0;n<b;++n){const r=n*x-v.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<w;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=r+t*E;if(u>=0&&u<g){const r=h[s][n][u][a]+p[e][t][a];r>i&&(i=r,o=e,l=t)}}}N[o][l][a]+=T[s][e][n][a]}}}return{dataId:d.write(s.util.toTypedArray(N,a.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},Dh={kernelName:s.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:i,dy:o}=t,{strides:l,pad:u,dilations:c}=r,d=n,h=s.util.toNestedArray(a.shape,d.data.get(a.dataId).values),p=s.util.toNestedArray(i.shape,d.data.get(i.dataId).values),{batchSize:A,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:v,strideHeight:I,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:C,dilationWidth:E,outShape:S}=s.backend_util.computeDilation2DInfo(a.shape,i.shape,l,u,"NHWC",c);s.util.assert(o.rank===S.length,(()=>`Error in ${s.Dilation2DBackpropInput}, dy must have the same rank as output ${S.length}, but got ${o.rank}`));const T=s.util.toNestedArray(S,d.data.get(o.dataId).values),N=s.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let s=0;s<A;++s)for(let e=0;e<y;++e){const t=e*I-v.top;for(let n=0;n<b;++n){const r=n*x-v.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,l=r<0?0:r;for(let e=0;e<w;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=r+t*E;if(u>=0&&u<g){const r=h[s][n][u][a]+p[e][t][a];r>i&&(i=r,o=n,l=u)}}}N[s][o][l][a]+=T[s][e][n][a]}}}return{dataId:d.write(s.util.toTypedArray(N,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};const Fh={kernelName:s.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const d=a.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=s.shape.slice(0,2),A=2===s.shape.length?1:s.shape[2],f=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,m=new Uint8ClampedArray(p*h*4);for(let b=0;b<h*p;++b){const e=[0,0,0,255*u];for(let n=0;n<A;n++){const t=f[b*A+n];if("float32"===s.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===s.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===A?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*b;m[t+0]=Math.round(e[0]),m[t+1]=Math.round(e[1]),m[t+2]=Math.round(e[2]),m[t+3]=Math.round(e[3])}a.width=p,a.height=h;const y=new ImageData(m,p,h);return d.putImageData(y,0,0),s}},$h=Rc(((e,t)=>e*t)),_h=Xc(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Mh=Jc(s.Multiply,$h,_h),Oh={kernelName:s.Multiply,backendName:"cpu",kernelFunc:Mh};function Qh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;let l;bc(a,"sum"),l="bool"===a.dtype?jc({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):Sc({inputs:{x:a},backend:n});const u=l.shape.length,c=s.util.parseAxisParam(i,l.shape),d=s.backend_util.getAxesPermutation(c,u);let h=c,p=l;null!=d&&(p=gd({inputs:{x:l},backend:n,attrs:{perm:d}}),h=s.backend_util.getInnerMostAxes(h.length,u)),s.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[A,f]=s.backend_util.computeOutAndReduceShapes(p.shape,h);let g=Vc(n,A,s.backend_util.upcastType(p.dtype,"int32"));const m=s.util.sizeFromShape(f),y=n.data.get(g.dataId).values,b=n.data.get(p.dataId).values;for(let s=0;s<y.length;++s){const e=s*m;let t=0;for(let n=0;n<m;++n)t+=b[e+n];y[s]=t}if(o){const e=g;g=rd({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(g.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(l),null!=d&&n.disposeIntermediateTensorInfo(p),g}const Lh={kernelName:s.Sum,backendName:"cpu",kernelFunc:Qh};const zh={kernelName:s.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:o,summedDims:l,idDims:u}=s.backend_util.decodeEinsumEquation(a,i.length);s.backend_util.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:d}=s.backend_util.getEinsumComputePath(l,u),h=d.length;let p=null,A=o.length;const f=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=s.backend_util.getEinsumPermutation(A,u[e]);let a;s.backend_util.isIdentityPermutation(t)?a=i[e]:(a=gd({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);s.util.arraysEqual(a.shape,o)||(a=rd({inputs:{x:a},backend:n,attrs:{shape:o}}),f.push(a)),null===p?p=a:(p=Mh({inputs:{a:a,b:p},backend:n}),f.push(p))}g<h-1&&(c[g]>=0&&(p=Qh({inputs:{x:p},backend:n,attrs:{axis:c[g]-(o.length-A),keepDims:!1}}),f.push(p)),A--)}for(const s of f)s!==p&&n.disposeIntermediateTensorInfo(s);return p}};const Ph={kernelName:s.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;bc([r,a],"eluGrad");const i=new Float32Array(s.util.sizeFromShape(a.shape)),o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values;for(let s=0;s<o.length;++s){const e=o[s];i[s]=e>=0?l[s]:l[s]*(e+1)}return n.makeTensorInfo(a.shape,"float32",i)}},Gh=Rc(((e,t)=>e===t?1:0)),Uh=Jc(s.Equal,Gh,null,"bool"),Wh={kernelName:s.Equal,backendName:"cpu",kernelFunc:Uh},Vh=s.backend_util.ERF_P,qh=s.backend_util.ERF_A1,Hh=s.backend_util.ERF_A2,Yh=s.backend_util.ERF_A3,jh=s.backend_util.ERF_A4,Kh=s.backend_util.ERF_A5,Jh=wc(s.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Vh*n);return t*(1-((((Kh*r+jh)*r+Yh)*r+Hh)*r+qh)*r*Math.exp(-n*n))})),Xh={kernelName:s.Erf,backendName:"cpu",kernelFunc:Jh},Zh=xc((e=>Math.exp(e))),ep=kc(s.Exp,Zh,"float32"),tp={kernelName:s.Exp,backendName:"cpu",kernelFunc:ep};function np(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:i}=r,o=a.shape.length,l=a.shape.slice();let u=i;return i<0&&(s.util.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+i+1),l.splice(u,0,1),rd({inputs:{x:a},backend:n,attrs:{shape:l}})}const rp={kernelName:s.ExpandDims,backendName:"cpu",kernelFunc:np},sp=xc((e=>Math.expm1(e))),ap=kc(s.Expm1,sp),ip={kernelName:s.Expm1,backendName:"cpu",kernelFunc:ap},op=Rc(((e,t)=>e/t)),lp=Jc(s.RealDiv,op),up={kernelName:s.RealDiv,backendName:"cpu",kernelFunc:lp},cp=Rc(((e,t)=>e-t)),dp=Xc(((e,t,n,r)=>({real:e-n,imag:t-r}))),hp=Jc(s.Sub,cp,dp),pp={kernelName:s.Sub,backendName:"cpu",kernelFunc:hp};function Ap(e,t,n){const r=e.shape,a=r[0],i=r[1],o=n.data.get(e.dataId),l=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[a,i],d=s.util.sizeFromShape(c),h=s.util.getTypedArrayFromDType("float32",d),p=s.util.getTypedArrayFromDType("float32",d);for(let m=0;m<a;m++){const e=Gd({inputs:{x:l},backend:n,attrs:{begin:[m,0],size:[1,i]}}),r=Gd({inputs:{x:u},backend:n,attrs:{begin:[m,0],size:[1,i]}}),a=Uc({inputs:{real:e,imag:r},backend:n}),{real:o,imag:c}=fp(a,t,n),d=s.backend_util.mergeRealAndImagArrays(o,c);for(let t=0;t<i;t++){const e=s.backend_util.getComplexWithIndex(d,t);h[m*i+t]=e.real,p[m*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const A=n.makeTensorInfo(c,"float32",h),f=n.makeTensorInfo(c,"float32",p),g=Uc({inputs:{real:A,imag:f},backend:n});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(f),g}function fp(e,t,n){const r=s.util.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((l=r)&l-1)){const a=gp(i,o,r,t,n),l=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(l,"float32",a.real),t=n.makeTensorInfo(l,"float32",a.imag),i=n.makeTensorInfo([],"float32",s.util.createScalarValue(r,"float32")),o=Sc({inputs:{x:i},backend:n}),u=up.kernelFunc({inputs:{a:e,b:i},backend:n}),c=up.kernelFunc({inputs:{a:t,b:o},backend:n}),d=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:d,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,o=0;for(let r=0;r<t;r++){const l=s.backend_util.exponent(a*r,t,n),u=s.backend_util.getComplexWithIndex(e,r);i+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(i/=t,o/=t),s.backend_util.assignToTypedArray(r,i,o,a)}return r}(s.backend_util.mergeRealAndImagArrays(i,o),r,t);return s.backend_util.splitRealAndImagArrays(e)}var l}function gp(e,t,n,r,a){if(1===n)return{real:e,imag:t};const i=s.backend_util.mergeRealAndImagArrays(e,t),o=n/2,l=s.backend_util.complexWithEvenIndex(i),u=l.real,c=l.imag,d=[u.length],h=a.makeTensorInfo(d,"float32",u),p=a.makeTensorInfo(d,"float32",c),A=Uc({inputs:{real:h,imag:p},backend:a}),f=s.backend_util.complexWithOddIndex(i),g=f.real,m=f.imag,y=[g.length],b=a.makeTensorInfo(y,"float32",g),v=a.makeTensorInfo(y,"float32",m),I=Uc({inputs:{real:b,imag:v},backend:a}),x=gp(u,c,o,r,a),w=x.real,k=x.imag,C=[w.length],E=a.makeTensorInfo(C,"float32",w),S=a.makeTensorInfo(C,"float32",k),T=Uc({inputs:{real:E,imag:S},backend:a}),N=gp(g,m,o,r,a),B=N.real,R=N.imag,D=[B.length],F=a.makeTensorInfo(D,"float32",B),$=a.makeTensorInfo(D,"float32",R),_=Uc({inputs:{real:F,imag:$},backend:a}),M=s.backend_util.exponents(n,r),O=[M.real.length],Q=a.makeTensorInfo(O,"float32",M.real),L=a.makeTensorInfo(O,"float32",M.imag),z=Uc({inputs:{real:Q,imag:L},backend:a}),P=Mh({inputs:{a:z,b:_},backend:a}),G=td({inputs:{a:T,b:P},backend:a}),U=hp({inputs:{a:T,b:P},backend:a}),W=qc({inputs:{input:G},backend:a}),V=qc({inputs:{input:U},backend:a}),q=ah({inputs:{input:G},backend:a}),H=ah({inputs:{input:U},backend:a}),Y=oh({inputs:[W,V],backend:a,attrs:{axis:0}}),j=oh({inputs:[q,H],backend:a,attrs:{axis:0}}),K=a.data.get(Y.dataId).values,J=a.data.get(j.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(I),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(Q),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(j),{real:K,imag:J}}const mp={kernelName:s.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=s.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=rd({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),l=Ap(o,!1,n),u=rd({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};function yp(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:i}=n,o=i||s.util.inferDtype(a),l=s.util.getArrayFromDType(o,s.util.sizeFromShape(r));return function(e,t){e.fill(t)}(l,a),t.makeTensorInfo(r,o,l)}const bp={kernelName:s.Fill,backendName:"cpu",kernelFunc:yp};const vp={kernelName:s.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,i=r,o=s.util.getTypedArrayFromDType(a.dtype,s.util.sizeFromShape(a.shape)),[l,u,c,d]=a.shape,h=i.data.get(a.dataId).values;for(let s=0;s<l;s++){const e=s*c*u*d;for(let t=0;t<u;t++){const n=t*(c*d);for(let t=0;t<c;t++){const r=t*d;for(let s=0;s<d;s++){const a=Math.round(c-t-1),i=e+n+r+s;let l=h[i];if(a>=0&&a<c){l=h[e+n+a*d+s]}o[i]=l}}}}return{dataId:i.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Ip=xc((e=>Math.floor(e))),xp=kc(s.Floor,Ip),wp={kernelName:s.Floor,backendName:"cpu",kernelFunc:xp},kp=Rc(((e,t)=>Math.floor(e/t))),Cp=Jc(s.FloorDiv,kp,null,"int32"),Ep={kernelName:s.FloorDiv,backendName:"cpu",kernelFunc:Cp};const Sp={kernelName:s.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:A}=r;let f=uh({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=f;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=rd({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=td({inputs:{a:f,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else f=td({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=f;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=rd({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=Gc(n,f,p,e,A),n.disposeIntermediateTensorInfo(e)}else f=Gc(n,f,p,o,A);n.disposeIntermediateTensorInfo(e)}return f}};const Tp={kernelName:s.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:A}=r;let f=Ch({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=f;f=td({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=f;f=Gc(n,f,p,o,A),n.disposeIntermediateTensorInfo(e)}return f}};function Np(e,t,n,r,a,i,o,l,u){const c=(0,s.buffer)([r,i],n);for(let s=0;s<r;s++){const n=[];let r=0;for(let t=0;t<a;t++){const i=e[s*a+t];r+=i*o[t],n.push(i)}if(r<0||r>=u/i)throw new Error(`Invalid indices: ${n} does not index into ${l}`);for(let e=0;e<i;e++)c.values[s*i+e]=t.get(...t.indexToLoc(r*i+e))}return c}const Bp={kernelName:s.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=s.util.sizeFromShape(r.shape),o=a.shape,l=o[o.length-1],[u,c,d,h]=s.backend_util.prepareAndValidate(r,a);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const p=Np(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,c,l,d,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,p.values)}};function Rp(e,t,n){const r=(0,s.buffer)(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=n[0],i=n[2],o=t.locToIndex([a,i]);n[2]=t.values[o];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[s]=e.values[l])}return r}const Dp={kernelName:s.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=r;bc([a,i],"gatherV2");const u=s.util.parseAxisParam(o,a.shape)[0],c=n.data.get(i.dataId).values,d=a.shape[u];for(let v=0;v<c.length;++v){const e=c[v];s.util.assert(e<=d-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`))}let h=l;null==l&&(h=0);const p=s.util.sizeFromShape(i.shape),A=s.backend_util.segment_util.collectGatherOpShapeInfo(a,i,u,h),f=rd({inputs:{x:a},backend:n,attrs:{shape:[A.batchSize,A.outerSize,A.dimSize,A.sliceSize]}}),g=rd({inputs:{x:i},backend:n,attrs:{shape:[A.batchSize,p/A.batchSize]}}),m=[A.batchSize,A.outerSize,p/A.batchSize,A.sliceSize],y=n.bufferSync(g),b=Rp(n.bufferSync(f),y,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(A.outputShape,b.dtype,b.values)}},Fp=Rc(((e,t)=>e>t?1:0)),$p=Jc(s.Greater,Fp,null,"bool"),_p={kernelName:s.Greater,backendName:"cpu",kernelFunc:$p},Mp=Rc(((e,t)=>e>=t?1:0)),Op=Jc(s.GreaterEqual,Mp,null,"bool"),Qp={kernelName:s.GreaterEqual,backendName:"cpu",kernelFunc:Op};const Lp={kernelName:s.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=s.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=rd({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),l=Ap(o,!0,n),u=rd({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},zp=wc(s.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Pp={kernelName:s.IsFinite,backendName:"cpu",kernelFunc:zp},Gp=wc(s.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Up={kernelName:s.IsInf,backendName:"cpu",kernelFunc:Gp},Wp=wc(s.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Vp={kernelName:s.IsNan,backendName:"cpu",kernelFunc:Wp},qp=Rc(((e,t)=>e<t?1:0)),Hp=Jc(s.Less,qp,null,"bool"),Yp={kernelName:s.Less,backendName:"cpu",kernelFunc:Hp},jp=Rc(((e,t)=>e<=t?1:0)),Kp=Jc(s.LessEqual,jp,null,"bool"),Jp={kernelName:s.LessEqual,backendName:"cpu",kernelFunc:Kp};function Xp(e,t,n){const r=(t-e)/(n-1),a=s.util.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}const Zp={kernelName:s.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Xp(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},eA=xc((e=>Math.log(e))),tA=kc(s.Log,eA),nA={kernelName:s.Log,backendName:"cpu",kernelFunc:tA},rA=wc(s.Log1p,(e=>Math.log1p(e))),sA={kernelName:s.Log1p,backendName:"cpu",kernelFunc:rA},aA=Rc(((e,t)=>e&&t)),iA=Jc(s.LogicalAnd,aA,null,"bool"),oA={kernelName:s.LogicalAnd,backendName:"cpu",kernelFunc:iA},lA=wc(s.LogicalNot,(e=>e?0:1),"bool"),uA={kernelName:s.LogicalNot,backendName:"cpu",kernelFunc:lA},cA=Rc(((e,t)=>e||t)),dA=Jc(s.LogicalOr,cA,null,"bool"),hA={kernelName:s.LogicalOr,backendName:"cpu",kernelFunc:dA};const pA={kernelName:s.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=r;bc(a,"LRN");const c=a.shape[3],d=c-1,h=n.data.get(a.dataId).values,p=s.util.sizeFromShape(a.shape),A=new Float32Array(p);function f(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,d);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let s=0;s<p;s++){const e=f(s),t=h[s]*Math.pow(o+l*e,-u);A[s]=t}return n.makeTensorInfo(a.shape,a.dtype,A)}};const AA={kernelName:s.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:o}=t,{depthRadius:l,bias:u,alpha:c,beta:d}=r;bc(o,"LRNGrad");const h=s.util.sizeFromShape(o.shape),p=o.shape[3],A=n.data.get(o.dataId).values,f=n.data.get(a.dataId).values,g=n.data.get(i.dataId).values,m=new Float32Array(h),y=h;for(let s=0;s<y;s++){const e=s%p,t=s-e+Math.max(0,e-l),n=s-e+Math.min(p,e+l+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=c*r+u;for(let a=t;a<n;a++){let e=-2*c*d*f[a]*g[s]/r;s===a&&(e+=Math.pow(r,-d)),e*=A[s],m[a]+=e}}return n.makeTensorInfo(o.shape,a.dtype,m)}};function fA(e,t,n,r){const a=s.util.getTypedArrayFromDType(r,s.util.sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}a[s]=r}return a}function gA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=r,l=n;let u=a.shape;const c=u.length,d=s.util.parseAxisParam(i,u);let h=d;const p=s.backend_util.getAxesPermutation(h,c);let A=l.data.get(a.dataId).values;if(null!=p){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[p[t]];A=fd(A,u,a.dtype,p,e),h=s.backend_util.getInnerMostAxes(h.length,c),u=e}bc(a,"max"),s.backend_util.assertAxesAreInnerMostDims("max",h,c);const[f,g]=s.backend_util.computeOutAndReduceShapes(u,h),m=fA(A,s.util.sizeFromShape(g),f,a.dtype),y=l.write(m,f,a.dtype);let b=f;if(o){b=s.backend_util.expandShapeToKeepDim(f,d)}return{dataId:y,shape:b,dtype:a.dtype}}const mA={kernelName:s.Max,backendName:"cpu",kernelFunc:gA},yA=Rc(((e,t)=>Math.max(e,t))),bA=Jc(s.Maximum,yA),vA={kernelName:s.Maximum,backendName:"cpu",kernelFunc:bA};const IA={kernelName:s.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bc(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=s.backend_util.computePool2DInfo(a.shape,i,o,1,l,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&s.util.arraysEqual(c.inShape,c.outShape))d=Sc({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=s.util.computeStrides(a.shape),r=Fd(e,a.shape,a.dtype,t,c,"max");d=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return d}};const xA={kernelName:s.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r;bc(a,"maxPool3d");const d=s.backend_util.computePool3DInfo(a.shape,i,o,1,l,u,c),h=_d(n.data.get(a.dataId).values,a.shape,a.dtype,s.util.computeStrides(a.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const wA={kernelName:s.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r;bc([a,i],"maxPool3DGrad");const d=s.backend_util.computePool3DInfo(i.shape,o,l,1,u,c),h=function(e,t){const n=(0,s.buffer)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,A=t.padInfo.top,f=t.padInfo.left;for(let s=0;s<t.batchSize;++s)for(let g=0;g<t.inChannels;++g)for(let m=0;m<t.outDepth;++m){const y=m*r-p;let b=y;for(;b<0;)b+=o;const v=Math.min(t.inDepth,c+y);for(let r=0;r<t.outHeight;++r){const c=r*a-A;let p=c;for(;p<0;)p+=l;const I=Math.min(t.inHeight,d+c);for(let a=0;a<t.outWidth;++a){const A=a*i-f;let x=A;for(;x<0;)x+=u;const w=Math.min(t.inWidth,h+A);let k=Number.NEGATIVE_INFINITY,C=-1;for(let t=b;t<v;t+=o){const n=t-y;for(let r=p;r<I;r+=l){const a=r-c;for(let i=x;i<w;i+=u){const o=i-A,l=e.get(s,t,r,i,g);l>=k&&(k=l,C=n*d*h+a*d+o)}}}n.set(C,s,m,r,a,g)}}}return n}(n.bufferSync(i),d),p=d.strideDepth,A=d.strideHeight,f=d.strideWidth,g=d.dilationDepth,m=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterDepth,v=d.effectiveFilterHeight,I=d.effectiveFilterWidth,x=b-1-d.padInfo.front,w=I-1-d.padInfo.left,k=v-1-d.padInfo.top,C=(0,s.buffer)(i.shape,"float32"),E=n.bufferSync(a);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=t-x,i=n-k,o=r-w;let l=0;for(let t=0;t<b;t+=g){const n=(a+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=m){const a=(i+r)/A;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let i=0;i<I;i+=y){const u=(o+i)/f;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;const c=b*v*I-1-h.get(s,n,a,u,e)===t*v*I+r*I+i?1:0;if(0===c)continue;l+=E.get(s,n,a,u,e)*c}}}C.set(l,s,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const kA={kernelName:s.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:o}=t,l=i;bc([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:d,dimRoundingMode:h}=r,p=s.backend_util.computePool2DInfo(l.shape,u,c,1,d,h),A=n.data.get(l.dataId).values,f=(0,s.buffer)(p.outShape,l.dtype,$d(A,l.shape,l.dtype,p).values),g=p.strideHeight,m=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,v=p.effectiveFilterHeight,I=p.effectiveFilterWidth,x=I-1-p.padInfo.left,w=v-1-p.padInfo.top,k=(0,s.buffer)(l.shape,"float32"),C=n.data.get(a.dataId).values,E=(0,s.buffer)(a.shape,"float32",C);for(let s=0;s<p.batchSize;++s)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-w,a=n-x;let i=0;for(let t=0;t<v;t+=y){const n=(r+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<I;r+=b){const o=(a+r)/m;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=v*I-1-f.get(s,n,o,e)===t*I+r?1:0;if(0===l)continue;i+=E.get(s,n,o,e)*l}}k.set(i,s,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const CA={kernelName:s.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{filterSize:i,strides:o,pad:l,includeBatchInIndex:u}=n,c=r;bc(a,"MaxPoolWithArgmax");const d=c.data.get(a.dataId).values,h=s.backend_util.computePool2DInfo(a.shape,i,o,[1,1],l),[p,A]=function(e,t,n,r,a){const i=Fd(e,0,n,s.util.computeStrides(t),a,"max"),o=$d(e,t,n,a,!0,r);return[i.values,o.values]}(d,a.shape,a.dtype,u,h),f=c.write(p,h.outShape,a.dtype),g=c.write(A,h.outShape,a.dtype);return[{dataId:f,shape:h.outShape,dtype:a.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const EA={kernelName:s.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=s.util.parseAxisParam(i,a.shape),u=s.backend_util.computeOutAndReduceShapes(a.shape,l)[1],c=s.util.sizeFromShape(u),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(h);const p=jc({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);const A=lp({inputs:{a:p,b:h},backend:n});d.push(A);const f=Qh({inputs:{x:A},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const SA={kernelName:s.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;bc(a,"min");const l=s.util.parseAxisParam(i,a.shape);let u=l;const c=s.backend_util.getAxesPermutation(u,a.shape.length);let d=a;null!=c&&(d=gd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=s.backend_util.getInnerMostAxes(u.length,a.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",u,d.shape.length);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,u),A=s.util.sizeFromShape(p),f=s.util.makeZerosTypedArray(s.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<f.length;++s){const e=s*A;let t=g[e];for(let n=0;n<A;++n){const r=g[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[s]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const m=n.makeTensorInfo(h,d.dtype,f);if(o){const e=rd({inputs:{x:m},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,l)}});return n.disposeIntermediateTensorInfo(m),e}return m}},TA=Rc(((e,t)=>Math.min(e,t))),NA=Jc(s.Minimum,TA),BA={kernelName:s.Minimum,backendName:"cpu",kernelFunc:NA};const RA={kernelName:s.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,mode:o}=r;bc(a,"mirrorPad");const l=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),c=i.map(((e,t)=>e[0]+a.shape[t])),d="reflect"===o?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,A=s.util.computeStrides(a.shape),f=s.util.sizeFromShape(l),g=l.length,m=s.util.computeStrides(l),y=s.util.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let e=s.util.indexToLoc(b,g,m);for(let n=0;n<g;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-d:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+d);e=e.map(((e,t)=>e-u[t]));const t=s.util.locToIndex(e,p,A);y[b]=h[t]}return{dataId:n.write(y,l,a.dtype),shape:l,dtype:a.dtype}}},DA=Rc(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),FA=Jc(s.Mod,DA),$A={kernelName:s.Mod,backendName:"cpu",kernelFunc:FA};function _A(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,o=a.shape.length;let l=i;if(-1===l&&(l=o-1),l!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${l}`);const u=s.util.parseAxisParam([l],a.shape),c=gA({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=s.backend_util.expandShapeToKeepDim(c.shape,u),h=rd({inputs:{x:c},backend:n,attrs:{shape:d}}),p=hp({inputs:{a:a,b:h},backend:n}),A=ep({inputs:{x:p},backend:n}),f=Qh({inputs:{x:A},backend:n,attrs:{axis:u,keepDims:!1}}),g=rd({inputs:{x:f},backend:n,attrs:{shape:d}}),m=lp({inputs:{a:A,b:g},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const MA={kernelName:s.Softmax,backendName:"cpu",kernelFunc:_A};const OA={kernelName:s.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:o,normalized:l}=r;bc(a,"multinomial");const u=l?a:_A({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],d=u.shape[1],h=n.data.get(u.dataId).values,p=[c,i],A=s.util.makeZerosTypedArray(s.util.sizeFromShape(p),"int32");for(let s=0;s<c;++s){const e=s*d,t=new Float32Array(d-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=Gu.alea(o.toString()),r=s*i;for(let s=0;s<i;++s){const e=n();A[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){A[r+s]=n;break}}}return l||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",A)}};function QA(e,t,n){const r=s.util.createScalarValue(-1,n);return $h([],t,r,e,n)}const LA={kernelName:s.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;bc(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=QA(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},zA=s.kernel_impls.nonMaxSuppressionV3Impl;const PA={kernelName:s.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;bc(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:d}=zA(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},GA=s.kernel_impls.nonMaxSuppressionV4Impl;const UA={kernelName:s.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;bc(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=GA(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},WA=s.kernel_impls.nonMaxSuppressionV5Impl;const VA={kernelName:s.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;bc(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,h=i,p=o,A=l,f=u,{selectedIndices:g,selectedScores:m}=WA(c,d,h,p,A,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([m.length],"float32",new Float32Array(m))]}},qA=Rc(((e,t)=>e!==t?1:0)),HA=Jc(s.NotEqual,qA,null,"bool"),YA={kernelName:s.NotEqual,backendName:"cpu",kernelFunc:HA};const jA={kernelName:s.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:o,onValue:l,offValue:u}=r;bc(a,"oneHot");const c=s.util.sizeFromShape(a.shape),d=new Float32Array(c*o);d.fill(u);const h=n.data.get(a.dataId).values;for(let s=0;s<c;++s)h[s]>=0&&h[s]<o&&(d[s*o+h[s]]=l);return n.makeTensorInfo([...a.shape,o],i,d)}};function KA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=qc({inputs:{input:r},backend:n}),t=KA({inputs:{x:e},backend:n}),s=ah({inputs:{input:r},backend:n}),a=KA({inputs:{x:s},backend:n}),i=Uc({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return yp({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const JA={kernelName:s.ZerosLike,backendName:"cpu",kernelFunc:KA};const XA={kernelName:s.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=qc({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=ah({inputs:{input:s},backend:r}),i=KA({inputs:{x:a},backend:r}),o=Uc({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return yp({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function ZA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return np({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=oh({inputs:t.map((e=>{const t=np({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t})),backend:n,attrs:{axis:a}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const ef={kernelName:s.Pack,backendName:"cpu",kernelFunc:ZA};const tf={kernelName:s.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:o}=r;bc(a,"pad");const l=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),c=n.data.get(a.dataId).values,d=s.util.sizeFromShape(a.shape),h=a.shape.length,p=s.util.computeStrides(a.shape),A=s.util.sizeFromShape(l),f=l.length,g=s.util.computeStrides(l),m=s.util.getTypedArrayFromDType(a.dtype,A);0!==o&&m.fill(o);for(let y=0;y<d;y++){const e=s.util.indexToLoc(y,h,p).map(((e,t)=>e+u[t]));m[s.util.locToIndex(e,f,g)]=c[y]}return{dataId:n.write(m,l,a.dtype),shape:l,dtype:a.dtype}}},nf=Rc(((e,t)=>Math.pow(e,t))),rf=Jc(s.Pow,nf),sf={kernelName:s.Pow,backendName:"cpu",kernelFunc:rf};function af(e,t,n,r){const[a,i]=s.backend_util.computeOutAndReduceShapes(e,r),o=(0,s.upcastType)(t,"int32"),l=s.util.makeZerosTypedArray(s.util.sizeFromShape(a),o),u=s.util.sizeFromShape(i);for(let s=0;s<l.length;++s){const e=s*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];l[s]=t}return{outVals:l,outShape:a,outDtype:o}}const of={kernelName:s.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;bc(a,"prod");const l=a.shape.length,u=s.util.parseAxisParam(i,a.shape),c=s.backend_util.getAxesPermutation(u,l);let d=u,h=a;const p=[];null!=c&&(h=gd({inputs:{x:a},backend:n,attrs:{perm:c}}),p.push(h),d=s.backend_util.getInnerMostAxes(d.length,l));const A=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=af(h.shape,h.dtype,A,d);let y=g;return o&&(y=s.backend_util.expandShapeToKeepDim(g,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,m,f)}};function lf(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){const s=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-s[r];for(let n=r;n<i;++n)o[a].push(s[n+1]+t)}r=s[r],i=s[i]}i!==r&&(s.push([r,i]),a+=i-r)}return{outSplits:o,valueSlices:s,numValues:a}}function uf(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function cf(e,t,n,r,a){const i=t.slice();i[0]=a;const o=s.util.getArrayFromDType(n,s.util.sizeFromShape(i)),l=e.length;return function(e,t,n,r,s,a){const i=uf(t,2)[1],o=uf(a,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)s[l*o+n]=e[t*i+n];++l}}(e,t,r,0===l?0:l/t[0],o,i),[o,i]}function df(e,t,n,r,a,i,o,l){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const a=s.util.indexToLoc(r,t.length,s.util.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(i,o,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:c,valueSlices:d,numValues:h}=lf(i,o,e,u),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,a=s.util.getArrayFromDType("int32",r);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(c),A=cf(n,r,a,d,h);return[p,A[0],A[1]]}const hf={kernelName:s.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,d=n.data.get(i.dataId).values,[h,p,A]=df(l,u,c,a.shape,a.dtype,d,i.shape),f=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(A,a.dtype,p);return f.concat([g])}},pf=2147483647;function Af(e,t,n,r,a,i,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const l=0===t.length,u=0===a.length,c=0===o.length,d=[];l||d.push(t[0]),u||d.push(a[0]),c||d.push(o[0]);for(let s=1;s<d.length;++s)if(d[s]!==d[s-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],p=s.util.getArrayFromDType("int32",h+1);p[0]=0;for(let s=0;s<h;++s){const t=l?e[0]:e[s],n=u?r[0]:r[s],a=c?i[0]:i[s];if(0===a)throw new Error("Requires delta != 0");let o;if(a>0&&n<t||a<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/a)),o>pf)throw new Error(`Requires ((limit - start) / delta) <= ${pf}`);p[s+1]=p[s]+o}const A=p[h],f=s.util.getArrayFromDType(n,A);let g=0;for(let s=0;s<h;++s){const t=p[s+1]-p[s];let n=l?e[0]:e[s];const r=c?i[0]:i[s];for(let e=0;e<t;++e)f[g++]=n,n+=r}return[p,f]}const ff={kernelName:s.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=Af(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var gf=s.backend_util.RowPartitionType;class mf{constructor(e,t,n,r,a,i,o,l,u,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=s.backend_util.getRowPartitionTypesHelper(c),this.raggedRank=s.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===gf.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===gf.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case gf.VALUE_ROWIDS:return mf.getMaxWidthValueRowID(t);case gf.ROW_SPLITS:return mf.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${gf[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return bf(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;s.backend_util.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=s.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),a=[];let i=0;for(let s=0;s<r;++s,i+=t)a.push(i);for(let s=r;s<e;++s)a.push(-1);return s.util.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case gf.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case gf.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${gf[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case gf.FIRST_DIM_SIZE:return e[0];case gf.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case gf.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${gf[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const r=bf(t,!1),a=s.util.getArrayFromDType(this.valuesDType,s.util.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;const a=this.values,i=n;let o=r.slice();o=o.slice(e+1);const l=s.util.sizeFromShape(o),u=t.length;let c=this.defaultValue;if(c.length!==l&&1!==c.length){const e=this.defaultValueShape;(0,s.tidy)((()=>{const t=(0,s.reshape)(c,e),n=(0,s.broadcastTo)(t,o);c=n.dataSync()}))}let d=0,h=0,p=0;for(let s=0;s<=u;++s){let e=s<u?t[s]:-1;if(e!==p){if(h<p){const e=a.subarray(d*l);yf(i.subarray(h*l),e,(p-h)*l)}if(s>=u){const t=n.length;e=Math.floor(t/l)}if(e>p)if(1===this.defaultValue.length)i.subarray(p*l,e*l).fill(this.defaultValue[0]),p=e;else for(;e>p;){yf(i.slice(p*l),c,l),++p}e<0?(d=s+1,h=p):(d=s,h=p,p=h+1)}else++p}}}function yf(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function bf(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function vf(e,t,n,r,s,a,i,o,l,u){return new mf(e,t,n,r,s,a,i,o,l,u).compute()}const If={kernelName:s.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,d=n.data.get(i.dataId).values,h=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[A,f]=vf(u,s.shape,c,a.shape,a.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(A,a.dtype,f)}};function xf(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return s.util.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),i=s.util.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),i[0]=e;for(let s=1;s<i.length;s++)i[s]=i[s-1]+n;return i}const wf={kernelName:s.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=xf(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},kf=wc(s.Reciprocal,(e=>1/e)),Cf={kernelName:s.Reciprocal,backendName:"cpu",kernelFunc:kf};const Ef={kernelName:s.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r;bc(a,"resizeBilinear");const u=s.util.computeStrides(a.shape),[c,d]=l,[h,p,A,f]=a.shape,g=n.data.get(a.dataId).values,m=new Float32Array(s.util.sizeFromShape([h,c,d,f])),y=[i&&c>1?p-1:p,i&&d>1?A-1:A],b=[i&&c>1?c-1:c,i&&d>1?d-1:d];let v=0;const I=y[0]/b[0],x=y[1]/b[1];for(let s=0;s<h;s++)for(let e=0;e<c;e++){let t;t=o?I*(e+.5)-.5:I*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),i=s*u[0]+n*u[1],l=s*u[0]+a*u[1];for(let e=0;e<d;e++){let t;t=o?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(A-1,Math.ceil(t)),c=i+n*u[2],d=l+n*u[2],h=i+a*u[2],p=l+a*u[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[d+e],a=t+(g[h+e]-t)*s,i=a+(n+(g[p+e]-n)*s-a)*r;m[v++]=i}}}return n.makeTensorInfo([h,c,d,f],"float32",m)}};const Sf={kernelName:s.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:o}=r;bc([i,a],"resizeBilinearGrad");const l=s.util.computeStrides(a.shape),[u,c,d,h]=a.shape,[,p,A]=i.shape,f=new Float32Array(u*c*d*h),g=[o&&p>1?c-1:c,o&&A>1?d-1:d],m=[o&&p>1?p-1:p,o&&A>1?A-1:A],y=g[0]/m[0],b=g[1]/m[1],v=n.data.get(i.dataId).values;let I=0;for(let s=0;s<u;s++){const e=s*l[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),c-1),a=e+r*l[1],i=e+s*l[1],o=n-r,u=1-o;for(let e=0;e<A;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),s=t-n,c=1-s,p=a+n*l[2],A=a+r*l[2],g=i+n*l[2],m=i+r*l[2],y=u*c,x=u*s,w=o*c,k=o*s;for(let e=0;e<h;e++){const t=v[I++];f[p+e]+=t*y,f[A+e]+=t*x,f[g+e]+=t*w,f[m+e]+=t*k}}}}return n.makeTensorInfo([u,d,c,h],"float32",f)}};const Tf={kernelName:s.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r;bc(a,"resizeNearestNeighbor");const u=s.util.computeStrides(a.shape),[c,d]=l,[h,p,A,f]=a.shape,g=n.data.get(a.dataId).values,m=new Float32Array(h*c*d*f),y=[i&&c>1?p-1:p,i&&d>1?A-1:A],b=[i&&c>1?c-1:c,i&&d>1?d-1:d],v=y[0]/b[0],I=y[1]/b[1];let x=0;for(let s=0;s<h;s++){const e=s*u[0];for(let t=0;t<c;t++){const n=o?v*(t+.5):v*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<d;e++){const t=o?I*(e+.5):I*e;let n=Math.min(A-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=g[r+e];m[x++]=t}}}}return n.makeTensorInfo([h,c,d,f],a.dtype,m)}};const Nf={kernelName:s.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:o}=r;bc([i,a],"resizeNearestNeighborGrad");const l=s.util.computeStrides(a.shape),u=s.util.computeStrides(i.shape),[c,d,h,p]=a.shape,[,A,f]=i.shape,g=new Float32Array(c*d*h*p),m=n.data.get(i.dataId).values,y=[o&&A>1?d-1:d,o&&f>1?h-1:h],b=[o&&A>1?A-1:A,o&&f>1?f-1:f],v=y[0]/b[0],I=y[1]/b[1],x=1/v,w=1/I,k=2*Math.ceil(x)+2,C=2*Math.ceil(w)+2;for(let s=0;s<c;s++){const e=s*l[0];for(let t=0;t<d;t++){const n=e+t*l[1],r=Math.floor(t*x),s=Math.floor(r-k/2);for(let a=0;a<h;a++){const r=n+a*l[2],i=Math.floor(a*w),c=Math.floor(i-C/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<k;r++){const l=r+s;if(l<0||l>=A)continue;const p=e+l*u[1],g=l*v;if(t===Math.min(d-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+c;if(t<0||t>=f)continue;const r=p+t*u[2],s=t*I;a===Math.min(h-1,o?Math.round(s):Math.floor(s))&&(i+=m[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}};const Bf={kernelName:s.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r;bc(a,"reverse");const o=a.shape.length,l=s.util.parseAxisParam(i,a.shape);if(0===o)return Sc({inputs:{x:a},backend:n});const u=new s.TensorBuffer(a.shape,a.dtype),c=n.bufferSync(a);for(let s=0;s<u.size;s++){const e=u.indexToLoc(s),t=e.slice();l.forEach((e=>t[e]=a.shape[e]-1-t[e])),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Rf={kernelName:s.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,{radians:i,fillValue:o,center:l}=n,u=r,c=s.util.getTypedArrayFromDType(a.dtype,s.util.sizeFromShape(a.shape)),[d,h,p,A]=a.shape,[f,g]=s.backend_util.getImageCenter(l,h,p),m=Math.sin(i),y=Math.cos(i),b=u.data.get(a.dataId).values;for(let s=0;s<d;s++){const e=s*p*h*A;for(let t=0;t<h;t++){const n=t*(p*A);for(let r=0;r<p;r++){const s=r*A;for(let a=0;a<A;a++){const i=[d,t,r,a],l=i[2],u=i[1];let v=(l-f)*y-(u-g)*m,I=(l-f)*m+(u-g)*y;v=Math.round(v+f),I=Math.round(I+g);let x=o;if("number"!==typeof o&&(x=3===a?255:o[a]),v>=0&&v<p&&I>=0&&I<h){x=b[e+I*(p*A)+v*A+a]}c[e+n+s+a]=x}}}}return{dataId:u.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Df=wc(s.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Ff={kernelName:s.Round,backendName:"cpu",kernelFunc:Df},$f=xc((e=>1/Math.sqrt(e))),_f=kc(s.Rsqrt,$f),Mf={kernelName:s.Rsqrt,backendName:"cpu",kernelFunc:_f};function Of(e,t,n,r,a,i,o,l,u,c){const d=[r/a,a],h=e.values,p=t.values;if(0===r)return(0,s.buffer)(n,t.dtype);const A=u instanceof s.TensorBuffer?u:(0,s.buffer)(d,t.dtype);"string"===typeof u||"number"===typeof u?A.values.fill(u):"boolean"===typeof u&&A.values.fill(+u);for(let s=0;s<i;s++){const e=[];let i=0;for(let t=0;t<o;t++){const n=h[s*o+t];e.push(n),i+=n*l[t]}if(i<0||i>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)c?A.values[i*a+n]+=p[s*a+n]:A.values[i*a+n]=0===t.rank?p[0]:p[s*a+n]}return A}const Qf={kernelName:s.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=s.backend_util.calculateShapes(i,a,o),p=Of(n.bufferSync(a),n.bufferSync(i),o,h,c,u,l,d,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}};function Lf(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function zf(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const Pf={kernelName:s.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:i}=t,{side:o}=r,l=function(e,t,n,r,a,i){const o=s.util.getArrayFromDType("int32",n*a);for(let s=0;s<n;++s){const n=e.slice(s*r,(s+1)*r),l=s*a;for(let e=0;e<a;++e)o[l+e]="left"===i?Lf(n,t[e+l]):zf(n,t[e+l])}return o}(n.data.get(a.dataId).values,n.data.get(i.dataId).values,a.shape[0],a.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",l)}};const Gf={kernelName:s.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t;bc([r,a,i],"select");const o=r.shape.length,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,d=(0,s.upcastType)(a.dtype,i.dtype),h=s.util.makeZerosTypedArray(s.util.sizeFromShape(a.shape),d);let p=0;const A=0===o||o>1||1===a.shape.length?1:s.util.sizeFromShape(a.shape.slice(1));for(let s=0;s<l.length;s++)for(let e=0;e<A;e++)1===l[s]?h[p++]=u[s]:h[p++]=c[s];return n.makeTensorInfo(a.shape,d,h)}},Uf=s.backend_util.SELU_SCALEALPHA,Wf=s.backend_util.SELU_SCALE,Vf=wc(s.Selu,(e=>e>=0?Wf*e:Uf*(Math.exp(e)-1))),qf={kernelName:s.Selu,backendName:"cpu",kernelFunc:Vf},Hf=wc(s.Sign,(e=>e<0?-1:e>0?1:0)),Yf={kernelName:s.Sign,backendName:"cpu",kernelFunc:Hf},jf=wc(s.Sin,(e=>Math.sin(e))),Kf={kernelName:s.Sin,backendName:"cpu",kernelFunc:jf},Jf=wc(s.Sinh,(e=>Math.sinh(e))),Xf={kernelName:s.Sinh,backendName:"cpu",kernelFunc:Jf},Zf=Math.log(1.1920928955078125e-7)+2,eg=wc(s.Softplus,(e=>{const t=e>-Zf,n=e<Zf,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),tg={kernelName:s.Softplus,backendName:"cpu",kernelFunc:eg};const ng={kernelName:s.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:o}=r;bc([a],"spaceToBatchND");const l=s.util.sizeFromShape(i),u=[[0,0]];u.push(...o);for(let s=1+i.length;s<a.shape.length;++s)u.push([0,0]);const c=tf.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=s.backend_util.getReshaped(c.shape,i,l,!1),h=s.backend_util.getPermuted(d.length,i.length,!1),p=s.backend_util.getReshapedPermuted(c.shape,i,l,!1),A=rd({inputs:{x:c},backend:n,attrs:{shape:d}}),f=gd({inputs:{x:A},backend:n,attrs:{perm:h}}),g=rd({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(f),g}};function rg(e,t,n,r,a,i,o){const l=t[0],u=i[0],c=new Array(u),d=new Array(l),h=t[1];if(0===u){if(0!==l)throw new Error(s.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(l));return[s.util.getArrayFromDType(n,0),[0,h],s.util.getArrayFromDType(a,0),c,d]}let p=!0,A=0;const f=new Array(u).fill(0);for(let m=0;m<l;++m){const t=e[m*h];if(t<0)throw new Error(s.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(m,t));if(t>=u)throw new Error(s.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(m,t,u));++f[t],p=p&&t>=A,A=t}let g=!0;for(let s=0;s<u;++s){const e=0===f[s];c[s]=e,g=g&&!e,f[s]=Math.max(f[s],1),s>0&&(f[s]+=f[s-1])}if(g&&p){const t=e,n=r;for(let e=0;e<l;++e)d[e]=e;return[t,[l,h],n,c,d]}{const t=f[u-1],i=s.util.getArrayFromDType(n,t*h),p=s.util.getArrayFromDType(a,t),A=new Array(u).fill(0);for(let n=0;n<l;++n){const t=e[n*h],s=A[t],a=(0===t?0:f[t-1])+s;A[t]++;for(let r=0;r<h;++r)i[a*h+r]=e[n*h+r];p[a]=r[n],d[n]=a}for(let e=0;e<u;++e){if(0===A[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;p[t]=o}}return[i,[t,h],p,c,d]}}const sg={kernelName:s.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,A,f]=rg(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([A.length],"bool",new Uint8Array(A.map((e=>Number(e))))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}};function ag(e,t,n,r,a){const i=s.util.sizeFromShape(r),o=t[0],l=a.length,u=[];let c=1,d=-1;for(let g=0;g<l;++g){const e=a[g];if(-1===e){if(-1!==d)throw new Error(s.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,u.push(1)}else{if(e<0)throw new Error(s.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));c*=e,u.push(e)}}if(-1!==d){if(c<=0)throw new Error(s.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/c);if(c*e!==i)throw new Error(s.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[d]=e}if(s.util.sizeFromShape(u)!==i)throw new Error(s.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const A=[];if(l>0){A[l-1]=1;for(let e=l-2;e>=0;--e)A[e]=A[e+1]*u[e+1]}const f=s.util.getArrayFromDType(n,o*l);for(let s=0;s<o;++s){let t=0;for(let n=0;n<h;++n)t+=e[s*h+n]*p[n];for(let e=0;e<l;++e)f[s*l+e]=Math.trunc(t/A[e]),t%=A[e]}return[f,[o,l],u]}const ig={kernelName:s.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,d]=ag(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}};function og(e,t,n,r,a){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const l=r.length,u=[t[0],e.length/t[0]],c=u[1],d=l>0?a[l-1]+1:0;if(d<0)throw new Error(s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),A=s.util.getArrayFromDType(n,p);if(0===l)return d>0&&A.fill(o),[A,h];if(d<=0)throw new Error(s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,g=1,m=0,y=a[f];for(;;){let t=0;if(g<l){if(t=a[g],y===t){++g;continue}if(y>=t)throw new Error(s.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(s.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>m&&A.fill(o,m*c,y*c);for(let n=f;n<g;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(s.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],u[0]));for(let n=0;n<c;n++)A[y*c+n]+=e[t*c+n]}if(i)for(let e=0;e<c;e++)A[y*c+e]/=g-f;if(f=g,++g,m=y+1,y=t,g>l)break}return m<d&&A.fill(o,m*c,d*c),[A,h]}const lg={kernelName:s.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=og(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const ug={kernelName:s.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=og(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const cg={kernelName:s.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=s.backend_util.calculateShapes(i,a,l),A=!1,f=n.bufferSync(a);let g;switch(i.dtype){case"bool":g=Of(f,n.bufferSync(i),l,p,d,c,u,h,Boolean(n.data.get(o.dataId).values[0]),A);break;case"float32":g=Of(f,n.bufferSync(i),l,p,d,c,u,h,n.data.get(o.dataId).values[0],A);break;case"int32":g=Of(f,n.bufferSync(i),l,p,d,c,u,h,n.data.get(o.dataId).values[0],A);break;case"string":g=Of(f,n.bufferSync(i),l,p,d,c,u,h,s.util.decodeString(n.data.get(o.dataId).values[0]),A);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(l,g.dtype,g.values)}};const dg={kernelName:s.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=r,l=s.util.parseAxisParam(o,a.shape)[0],u=s.backend_util.prepareSplitSize(a,i,l),c=new Array(a.shape.length).fill(0),d=a.shape.slice();return u.map((e=>{const t=[...d];t[l]=e;const r=Gd({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r}))}},hg=xc((e=>Math.sqrt(e))),pg=wc(s.Sqrt,(e=>Math.sqrt(e))),Ag={kernelName:s.Sqrt,backendName:"cpu",kernelFunc:pg},fg={kernelName:s.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,s=n;bc(r,"square");const a=s.data.get(r.dataId).values,i=new Float32Array(a.length);for(let o=0;o<a.length;++o){const e=a[o];i[o]=e*e}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},gg=Rc(((e,t)=>{const n=e-t;return n*n})),mg=Jc(s.SquaredDifference,gg),yg={kernelName:s.SquaredDifference,backendName:"cpu",kernelFunc:mg},bg=xc(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),vg=kc(s.StaticRegexReplace,bg),Ig={kernelName:s.StaticRegexReplace,backendName:"cpu",kernelFunc:vg},xg=wc(s.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),wg={kernelName:s.Step,backendName:"cpu",kernelFunc:xg};function kg(e,t,n,r){const a=(0,s.buffer)(e,t.dtype);for(let s=0;s<a.size;s++){const e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}const Cg={kernelName:s.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;bc(a,"stridedSlice");const{finalShapeSparse:A,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:v,strides:I}=s.slice_util.sliceInfo(a.shape,i,o,l,u,c,d,h,p);let x;if(g)x=rd({inputs:{x:a},backend:n,attrs:{shape:f}});else if(m||y){s.util.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=s.slice_util.computeOutShape(b,v,I),t=Gd({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});x=rd({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=kg(A,n.bufferSync(a),I,b);x=n.makeTensorInfo(f,e.dtype,e.values)}return x}};class Eg{constructor(e,t,n,r,a,i){this.separator=s.util.encodeString(e),this.nGramWidths=t,this.leftPad=s.util.encodeString(n),this.rightPad=s.util.encodeString(r),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),d=t+(l>0?0:i-o);let h=0;h+=l*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=u*this.rightPad.length;h+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let A=0;const f=e=>e.forEach((e=>p[A++]=e));for(let e=0;e<l;++e)f(this.leftPad),f(this.separator);for(let t=0;t<c-1;++t)f(e[d+t]),f(this.separator);if(c>0){f(e[d+c-1]);for(let e=0;e<u;++e)f(this.separator),f(this.rightPad)}else{for(let e=0;e<u-1;++e)f(this.rightPad),f(this.separator);f(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,i=s.util.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=a;++t)i[t]=0;return[e,i]}i[0]=0;for(let s=1;s<=a;++s){const e=t[s]-t[s-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[s]=i[s-1]+n}const o=new Array(i[a]);for(let s=0;s<a;++s){const n=t[s];let r=i[s];if(this.nGramWidths.forEach((a=>{const i=t[s+1]-t[s],l=this.getNumNGrams(i,a);this.createNGrams(e,n,o,r,l,a),r+=l})),this.preserveShort&&r===i[s]){const a=t[s+1]-t[s];if(0===a)continue;const i=a+2*this.padWidth,l=1;this.createNGrams(e,n,o,r,l,i)}}return[o,i]}}function Sg(e,t,n,r,s,a,i,o){return new Eg(n,r,s,a,i,o).compute(e,t)}const Tg={kernelName:s.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[A,f]=Sg(h,p,s,a,i,o,l,u);return[n.makeTensorInfo([A.length],"string",A),n.makeTensorInfo(d.shape,"int32",f)]}};function Ng(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function Bg(e,t,n){const r=e.length,a=[];let i=0,o=0;const l=new Array(r);for(let s=0;s<r;++s){const r=a.length;Ng(e[s],t,n,a);const u=a.length-r;l[s]=u,i+=u,o=Math.max(o,u)}const u=s.util.getArrayFromDType("int32",2*i),c=new Array(i),d=[r,o];let h=0;for(let s=0;s<r;++s)for(let e=0;e<l[s];++e)u[2*h]=s,u[2*h+1]=e,c[h]=a[h],++h;return[u,c,d]}const Rg={kernelName:s.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,d]=Bg(o,l,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function Dg(e,t){const n=s.util.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=s.util.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const Fg={kernelName:s.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=Dg(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},$g=wc(s.Tan,(e=>Math.tan(e))),_g={kernelName:s.Tan,backendName:"cpu",kernelFunc:$g},Mg=wc(s.Tanh,(e=>Math.tanh(e))),Og={kernelName:s.Tanh,backendName:"cpu",kernelFunc:Mg};const Qg={kernelName:s.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:i}=t,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=s.backend_util.calculateShapes(i,a,r.shape),h=n.bufferSync(a),p=n.bufferSync(i),A=n.bufferSync(r),f=Of(h,p,r.shape,d,u,l,o,c,A,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};function Lg(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=(0,s.buffer)(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}const zg={kernelName:s.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;bc(s,"tile");const i=Lg(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},Pg=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Gg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);Gg(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const a=e[t];let i=n,o=r;for(s.util.swap(e,n,t),Pg(e[r],a)>0&&s.util.swap(e,n,r);i<o;){for(s.util.swap(e,i,o),i++,o--;Pg(e[i],a)<0;)i+=1;for(;Pg(e[o],a)>0;)o-=1}0===Pg(e[n],a)?s.util.swap(e,n,o):(o+=1,s.util.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function Ug(e,t,n,r,a){const i=t[t.length-1],[o,l]=[e.length/i,i],u=s.util.getTypedArrayFromDType(n,o*r),c=s.util.getTypedArrayFromDType("int32",o*r);for(let s=0;s<o;s++){const t=s*l,n=e.subarray(t,t+l);let i=new Array(n.length);n.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(Gg(i,r),i=i.slice(0,r)),a&&i.sort(Pg);const o=s*r,d=u.subarray(o,o+r),h=c.subarray(o,o+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}const d=t.slice();return d[d.length-1]=r,[(0,s.buffer)(d,n,u),(0,s.buffer)(d,"int32",c)]}const Wg={kernelName:s.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;bc(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=Ug(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const Vg={kernelName:s.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:i}=t,{interpolation:o,fillMode:l,fillValue:u,outputShape:c}=n,[d,h,p,A]=a.shape,[f,g]=null!=c?c:[h,p],m=[d,f,g,A],y=s.util.computeStrides(a.shape),b=y[0],v=y[1],I=y[2],x=s.util.computeStrides(m),w=x[0],k=x[1],C=x[2],E=s.util.getTypedArrayFromDType(a.dtype,s.util.sizeFromShape(m));E.fill(u);const S=r.data.get(a.dataId).values,T=r.data.get(i.dataId).values;for(let s=0;s<d;++s){const e=1===i.shape[0]?T:T.subarray(8*s,8*s+8);for(let t=0;t<f;++t)for(let n=0;n<g;++n)for(let r=0;r<A;++r){let a;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const c=(e[0]*n+e[1]*t+e[2])/i,d=(e[3]*n+e[4]*t+e[5])/i,A=qg(c,p,l),f=qg(d,h,l);switch(o){case"nearest":a=Yg(S,h,p,b,v,I,s,f,A,r,u);break;case"bilinear":a=jg(S,h,p,b,v,I,s,f,A,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}E[s*w+t*k+n*C+r]=a}return r.makeTensorInfo(m,a.dtype,E)}return{dataId:r.write(E,m,a.dtype),shape:a.shape,dtype:a.dtype}}};function qg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return s.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return s.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return s.util.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function Hg(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function Yg(e,t,n,r,s,a,i,o,l,u,c){return Hg(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function jg(e,t,n,r,s,a,i,o,l,u,c){const d=Math.floor(o),h=Math.floor(l),p=d+1,A=h+1;return(p-o)*((A-l)*Hg(e,t,n,r,s,a,i,d,h,u,c)+(l-h)*Hg(e,t,n,r,s,a,i,d,A,u,c))+(o-d)*((A-l)*Hg(e,t,n,r,s,a,i,p,h,u,c)+(l-h)*Hg(e,t,n,r,s,a,i,p,A,u,c))}function Kg(e,t,n,r){const a=s.util.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let s=0;s<a;s++)i[0]*=n[s];i[1]=n[a];for(let s=a+1;s<n.length;s++)i[2]*=n[s];const o=new Map,l=new Int32Array(n[a]),u=new s.TensorBuffer(i,r,e),c=[],d=1===i[0]&&1===i[2];for(let s=0;s<n[a];s++){let t;if(d)t=e[s].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(u.get(t,s,n));t=e.join(",")}const n=o.get(t);if(null!=n)l[s]=n;else{const e=o.size;o.set(t,e),l[s]=e,c.push(s)}}const h=i.slice();h[1]=o.size;const p=new s.TensorBuffer(h,r);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(u.get(n,e,r),n,t,r)}));const A=n.slice();return A[a]=h[1],{outputValues:p.values,outputShape:A,indices:l}}const Jg={kernelName:s.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;bc(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=Kg(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const Xg={kernelName:s.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=s.shape[p]);const c=new Array(i).fill(0),d=s.shape.slice();d[a]=1;const h=new Array(o);for(let p=0;p<h.length;p++){c[a]=p;const e=Gd({inputs:{x:s},backend:n,attrs:{begin:c,size:d}});h[p]=rd({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return h}};const Zg={kernelName:s.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:o}=r;bc(a,"unsortedSegmentSum");const l=[],u=[],c=a.shape.length-i.shape.length;let d=i;for(let s=0;s<c;++s){const e=np({inputs:{input:d},backend:n,attrs:{dim:s+1}});d=e,u.push(e)}for(let p=0;p<o;++p){const e=s.util.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),r=Uh({inputs:{a:t,b:d},backend:n}),i=jc({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=Mh({inputs:{a:i,b:a},backend:n}),c=Qh({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});l.push(c),u.push(t),u.push(r),u.push(i),u.push(o),u.push(c)}const h=ZA({inputs:l,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},em=[od,ud,dd,pd,nd,Ad,yd,bd,vd,Id,wd,Cd,Sd,Bd,Dd,Md,Od,Qd,Ld,id,zd,Wd,Hd,Kd,Jd,Kc,eh,nh,Wc,rh,lh,ch,dh,hh,ph,Ah,fh,mh,bh,vh,Ih,xh,wh,kh,Eh,Sh,Th,Nh,Bh,Rh,Dh,Fh,zh,Ec,Ph,Wh,Xh,tp,rp,ip,mp,bp,vp,wp,Ep,Sp,Tp,Bp,Dp,_p,Qp,Tc,Lp,ih,Pp,Up,Vp,Bc,Yp,Jp,Zp,nA,sA,oA,uA,hA,pA,AA,mA,vA,IA,xA,wA,kA,CA,EA,SA,BA,RA,$A,OA,Oh,LA,PA,UA,VA,YA,jA,XA,ef,tf,sf,$c,of,hf,ff,If,wf,Hc,up,Cf,Mc,Qc,sd,Ef,Sf,Tf,Nf,Bf,Rf,Ff,Mf,Qf,Pf,Gf,qf,Pc,Yf,Kf,Xf,Ud,MA,tg,ng,sg,ig,lg,ug,cg,dg,Ag,fg,yg,Ig,wg,Cg,Tg,Rg,Fg,pp,Lh,_g,Og,Qg,zg,Wg,Vg,md,Jg,Xg,Zg,JA];for(const n of em)(0,s.registerKernel)(n);const tm={},nm={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function rm(e,t){if(!(e in tm)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,s.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete tm[e]}),!1),(0,s.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(nm.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",nm)||n.getContext("experimental-webgl",nm);return n.getContext("webgl2",nm)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;tm[e]=n}const n=tm[e];return null==n||n.isContextLost()?(delete tm[e],rm(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),tm[e])}var sm,am,im;function om(e,t){return[t,e]}function lm(e){const t=s.util.sizeFromShape(e),n=Math.ceil(t/4);return s.util.sizeToSquarishShape(n)}function um(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function cm(e,t){const n=e;let r,a,i,o,l,u,c,d,h,p;return 2===(0,s.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,i=n.RGBA16F,o=n.RGBA32F,l=n.RED,c=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,i=e.RGBA,o=n.RGBA,l=e.RGBA,c=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function dm(e,t){const n=t();return(0,s.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(sm||(sm={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(am||(am={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(im||(im={}));function hm(e){return!!((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function pm(e,t){return xm(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const Am=/ERROR: [0-9]+:([0-9]+):/g;function fm(e,t){const n=Am.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map(((e,t)=>s.util.rightPad((t+1).toString(),i)+e));let l=0;for(let s=0;s<o.length;s++)l=Math.max(o[s].length,l);const u=o.slice(0,r-1),c=o.slice(r-1,r),d=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${s.util.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function gm(e,t){if(dm(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function mm(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(dm(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),dm(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),dm(e,(()=>e.enableVertexAttribArray(o))),!0)}function ym(e,t,n,r){dm(e,(()=>function(e,t,n){wm(e,n),dm(e,(()=>e.activeTexture(e.TEXTURE0+n))),dm(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),dm(e,(()=>e.uniform1i(n,r)))}function bm(e,t,n){dm(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),dm(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function vm(e,t){dm(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),dm(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Im(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function xm(e,t,n){const r=dm(e,(()=>t()));if(null==r)throw new Error(n);return r}function wm(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function km(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return s.util.sizeFromShape(e.slice(0,e.length-t))}function Cm(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Em(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[km(e),...Cm(e)]),t}function Sm(e){return e%2===0}function Tm(e,t){if(e=e.slice(-2),t=t.slice(-2),s.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(Sm(n)&&Sm(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Sm(e[0])&&Sm(t[0])}let Nm,Bm;function Rm(e,t){return null!=e.getExtension(t)}function Dm(e){try{if(null!=rm(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Fm(e){if(0===e)return!1;const t=rm(e);if(1!==e){if(Rm(t,"EXT_color_buffer_float"))return $m(t);const e="EXT_color_buffer_half_float";if(Rm(t,e)){const n=t.getExtension(e);return function(e,t){const n=cm(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!Rm(t,"OES_texture_float"))return!1;if(!Rm(t,"WEBGL_color_buffer_float"))return!1;return $m(t)}function $m(e){const t=cm(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function _m(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Mm=(0,s.env)();function Om(){let e,t,n,r,a,i,o,l,u,c;return 2===(0,s.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",o="out vec4 outputColor;",l=(0,s.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",o="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}function Qm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=s.util.computeStrides(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function Lm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=s.util.computeStrides(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / outShapeStrides[${s}]`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function zm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function Pm(e){const t=s.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Mm.registerFlag("HAS_WEBGL",(()=>Mm.getNumber("WEBGL_VERSION")>0)),Mm.registerFlag("WEBGL_VERSION",(()=>Dm(2)?2:Dm(1)?1:0)),Mm.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Mm.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Mm.get("WEBGL_VERSION"))),Mm.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Mm.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Mm.registerFlag("WEBGL_PACK",(()=>Mm.getBool("HAS_WEBGL"))),Mm.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_CLIP",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_REDUCE",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_CONV_IM2COL",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>Mm.getBool("WEBGL_PACK"))),Mm.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==Nm){const t=rm(e);Nm=t.getParameter(t.MAX_TEXTURE_SIZE)}return Nm}(Mm.getNumber("WEBGL_VERSION")))),Mm.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Bm){const t=rm(e);Bm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Bm)}(Mm.getNumber("WEBGL_VERSION")))),Mm.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Mm.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=rm(e);return t=Rm(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Rm(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Mm.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Mm.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.device_util.isMobile())),Mm.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=rm(e);if(1===e){if(!Rm(t,"OES_texture_float"))return!1}else if(!Rm(t,"EXT_color_buffer_float"))return!1;return $m(t)}(Mm.getNumber("WEBGL_VERSION")))),Mm.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Mm.getBool("WEBGL_FORCE_F16_TEXTURES")&&Mm.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Mm.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Fm(Mm.getNumber("WEBGL_VERSION")))),Mm.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Mm.getNumber("WEBGL_VERSION"))&&null!=rm(e).fenceSync;var e})),Mm.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Mm.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Mm.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Mm.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Mm.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Mm.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Mm.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Mm.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),Mm.registerFlag("WEBGL_EXP_CONV",(()=>!1)),Mm.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>Mm.getBool("IS_TEST"))),Mm.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),Mm.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),Mm.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),Mm.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Gm="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Um}=s.backend_util;function Wm(e,t,n){const r=[];if(e.forEach((e=>{const t=s.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ty(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),i=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?qm(e,r):Vm(e,r);const i=e.shapeInfo.logicalShape,o=t.logicalShape;i.length<=o.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=Um(e.shapeInfo.logicalShape,t.logicalShape),u=ey(o),c=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+c]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+c]}`)).join(", ");let A="return outputValue;";const f=1===s.util.sizeFromShape(e.shapeInfo.logicalShape),g=s.util.sizeFromShape(t.logicalShape),m=1===g;if(1!==i||f||m){if(f&&!m)A=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?A="return vec4(outputValue.x);":l.indexOf(e)>-1?A="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(A="return vec4(outputValue.xx, outputValue.zz);")}}else A="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${p});\n      ${A}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&s.util.arraysEqual(o,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=ey(u),d=Um(e.shapeInfo.logicalShape,t.logicalShape),h=u-l;let p;const A=["x","y","z","w","u","v"];p=0===l?"":u<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${A[e+h]} = 0;`)).join("\n");let f="";f=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${A[t+h]}`)).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,l=Om(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,d,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Hm}\n    ${Ym}\n    ${jm}\n  `;return t}(l);t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return Jm();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(s.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t,n){switch(e.length){case 0:return Jm();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(s.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Lm(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=Qm(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Lm(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=Qm(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=Qm(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Qm(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),n.packedInputs&&(h+=Km);return[h,u,d,a,c,i,n.userCode].join("\n")}function Vm(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Xm(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Zm(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Xm(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&s.util.arraysEqual(n,i)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:l}=s.util.squeezeShape(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${Vm(ny(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${ry(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Zm(e)}\n      }\n    `;const c=i[0],d=i[1],h=Xm(r);if(1===d)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],o=n[2],{newShape:l,keptDims:u}=s.util.squeezeShape(n),c=l;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Vm(ny(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${ry(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${Zm(e)}\n      }\n    `;const d=e.shapeInfo.texShape,h=d[0],p=d[1],A=e.shapeInfo.flatOffset;if(p===i&&null==A)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===o&&null==A)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=Xm(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],o=n[2]*i,l=n[1]*o,{newShape:u,keptDims:c}=s.util.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Vm(ny(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${ry(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${l}, ${o}, ${i}, 1)));\n        ${Zm(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],A=h[1],f=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(A===l&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${A}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(A===i&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${A}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=Xm(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${A}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,o=t[2]*i,l=t[1]*o,{newShape:u,keptDims:c}=s.util.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Vm(ny(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ry(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${Zm(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],A=h[1];if(A===l&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${A}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(A===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${A}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Xm(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${A}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=s.util.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Vm(ny(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ry(t,i)});\n      }\n    `}const o=t[5],l=t[4]*o,u=t[3]*l,c=t[2]*u,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Zm(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,A=p[0],f=p[1];if(f===d&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${A}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${A}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=Xm(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${A}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function qm(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Om();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=Om();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,o=i[0],l=i[1],u=Om();if(null!=i&&s.util.arraysEqual(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${qm(ny(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${ry(a,r)});\n        }\n      `}const o=Om();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=Om();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(a[i-1]/2);let h=d*Math.ceil(a[i-2]/2),p="int b, int row, int col",A=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let f=2;f<i-1;f++)p=`int b${f}, `+p,h*=a[i-f-1],A=`b${f} * ${h} + `+A;return`\n    vec4 ${r}(${p}) {\n      int index = ${A};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Hm="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ym="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",jm="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Km="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Jm(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Xm(e){return`offset${e}`}function Zm(e){const t=e.name,n=s.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ey(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ty(e,t,n){const{newShape:r,keptDims:a}=s.util.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],l=o?t.slice(1):r,u=!e&&i>1&&!s.util.arraysEqual(t,n)&&r.length<i||o;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:a}}function ny(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ry(e,t){return t.map((t=>e[t])).join(", ")}function sy(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Wm(a,o,t),u=function(e,t){const n=xm(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(dm(e,(()=>e.shaderSource(n,t))),dm(e,(()=>e.compileShader(n))),(0,s.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw fm(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,l),c=e.createProgram(u);return(0,s.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:l,webGLProgram:c,inShapeInfos:i,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:u,source:l,webGLProgram:c,inShapeInfos:i,outShapeInfo:o},ay(e,t,c)))}function ay(e,t,n){const r=[],a=[];let i,o,l,u=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===(0,s.env)().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,d),offset:e.getUniformLocation(n,`offset${s}`,d)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,d),a.texShape=e.getUniformLocation(n,`${s}TexShape`,d)),r.push(a)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),o=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const s of t.customUniforms)a.push(e.getUniformLocation(n,s.name,d));return{variablesLocations:r,customUniformLocations:a,infLoc:u,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:o}}function iy(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],i=a.shape;if(!s.util.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!s.util.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)}))}function oy(e){return(0,s.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ly{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Om();this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Lm(["r","c","d"],e):Qm(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class uy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Om();this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Lm(["r","c","d"],e):Qm(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class cy{constructor(e){this.variableNames=["A"],this.outTexUsage=am.DOWNLOAD;const t=Om();this.outputShape=e,this.userCode=`\n      ${Gm}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class dy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=am.DOWNLOAD;const t=Om();this.outputShape=e,this.userCode=`\n      ${Gm}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const hy={R:0,G:1,B:2,A:3};class py{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Om();this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){const e=n[i];a+=`\n          if(offset == ${i}) {\n            result = values[${hy[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Pm(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class Ay{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Om();this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const s=2*a+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Pm(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function fy(e){const t=Om();return function(e,t){const n=xm(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(dm(e,(()=>e.shaderSource(n,t))),dm(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function gy(e){return function(e,t){const n=xm(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dm(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),dm(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function my(e){return function(e,t){const n=xm(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dm(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),dm(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function yy(e,t,n,r,a,i){!function(e,t){const n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return xm(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),l=e.TEXTURE_2D;return dm(e,(()=>e.bindTexture(l,o))),dm(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),dm(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),dm(e,(()=>e.texParameteri(l,e.TEXTURE_MIN_FILTER,e.NEAREST))),dm(e,(()=>e.texParameteri(l,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,s.env)().getNumber("WEBGL_VERSION")?dm(e,(()=>e.texImage2D(l,0,r,t,n,0,a,i,null))):dm(e,(()=>e.texStorage2D(l,1,r,t,n))),dm(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function by(e){return e.internalFormatFloat}function vy(e){return e.internalFormatHalfFloat}function Iy(e){return e.downloadTextureFormat}function xy(e){return e.internalFormatPackedFloat}function wy(e){return e.internalFormatPackedHalfFloat}function ky(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=um(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class Cy{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,s.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){tm[e]=t}(t,e)):this.gl=rm(t),e=this.gl,2===(0,s.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>dm(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>dm(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>dm(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>dm(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>dm(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>dm(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>dm(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>dm(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,s.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=pm(this.gl,e),Rm(this.gl,t))this.textureHalfFloatExtension=pm(this.gl,t);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Rm(this.gl,r))this.colorBufferHalfFloatExtension=pm(this.gl,r);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Rm(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Rm(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=gy(this.gl),this.indexBuffer=my(this.gl),this.framebuffer=function(e){return xm(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=cm(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;dm(e,(()=>e.finish())),dm(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),dm(e,(()=>e.deleteFramebuffer(this.framebuffer))),dm(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),dm(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),dm(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=om(t,n);return yy(e,s,a,by(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=om(t,n);return yy(e,s,a,vy(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=om(t,n);return yy(e,s,a,Iy(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){dm(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,s.env)().getNumber("WEBGL_VERSION")?dm(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):dm(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,s.env)().getNumber("WEBGL_VERSION")?dm(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):dm(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),dm(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,i){let o,l,u;dm(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(o=new Uint8Array(n*r*4),l=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),l=e.FLOAT,u=i.internalFormatPackedFloat),o.set(a),2===(0,s.env)().getNumber("WEBGL_VERSION")?dm(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,l,o))):dm(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,l,o))),dm(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=um(t,n);return yy(e,s,a,wy(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=um(t,n);return yy(e,s,a,xy(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(vm(this.gl,this.framebuffer),this.outputTexture=null),dm(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=om(t,n),i=new Uint8Array(t*n*4);return dm(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return ky(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();dm(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return dm(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),dm(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),dm(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,s.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return dm(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=fy(t));const n=function(e){return xm(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);dm(t,(()=>t.attachShader(n,this.vertexShader))),dm(t,(()=>t.attachShader(n,e))),function(e,t){if(dm(e,(()=>e.linkProgram(t))),!(0,s.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&gm(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;dm(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){dm(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),mm(e,t,"clipSpacePos",n,3,20,0)&&mm(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(dm(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&gm(this.gl,this.program),dm(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return xm(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),dm(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ym(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=um(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gm(this.gl,this.program),Im(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}dm(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),dm(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=pm(this.gl,2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,s.env)().platform&&(n=(0,s.env)().platform.setTimeoutCustom.bind((0,s.env)().platform)),s.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bm(this.gl,e,this.framebuffer),this.debug&&Im(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(bm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Im(this.gl)):vm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;bm(r,e,this.framebuffer),this.debug&&Im(r),this.outputTexture=e,dm(r,(()=>r.viewport(0,0,t,n))),dm(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),dm(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:Ey,XI:Sy,Nk:Ty,f6:Ny,ct:By,YG:Ry,hH:Dy,z3:Fy,sG:$y,uM:_y,vS:My,qB:Oy,GG:Qy,rq:Ly,lg:zy,WR:Py,cu:Gy,GE:Uy,px:Wy,jC:Vy,He:qy,hE:Hy,BF:Yy,Dk:jy,cl:Ky,_B:Jy,ub:Xy,_f:Zy,Ku:eb,qy:tb,Zy:nb,bu:rb,zv:sb,dH:ab,HS:ib,yH:ob,l3:lb,z9:ub,x6:cb,_m:db,eW:hb,GK:pb,SP:Ab,yr:fb,dl:gb,Dw:mb,xT:yb,_X:bb,wz:vb}=e;function Ib(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function xb(e,t){return 1===t?[e]:Ib(e,t)}class wb{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=oy(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=xb("rc",this.rank),t=ey(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class kb{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?zm(["r","c","d"],"inputShape"):Qm(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Pm(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Cb{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=Sb(t,n),s=Tb(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=Eb(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===im.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===im.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===im.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===im.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===im.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Sb(n,r),i=Tb(t,a,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=Eb(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=(0,s.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Eb(e,t,n,r,s){const a=function(e,t){switch(e){case im.PACKED_2X2_FLOAT32:return xy(t);case im.PACKED_2X2_FLOAT16:return wy(t);case im.UNPACKED_FLOAT32:return by(t);case im.UNPACKED_FLOAT16:return vy(t);case im.PACKED_4X1_UNSIGNED_BYTE:return Iy(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=um(e[0],e[1]);i=t*n}else{const[t,n]=om(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function Sb(e,t){if(e===am.UPLOAD)return im.PACKED_2X2_FLOAT32;if(e===am.RENDER||null==e)return function(e){return(0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?im.PACKED_2X2_FLOAT32:im.UNPACKED_FLOAT32:e?im.PACKED_2X2_FLOAT16:im.UNPACKED_FLOAT16}(t);if(e===am.DOWNLOAD||e===am.PIXELS)return im.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Tb(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Nb{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Bb="if (isnan(x)) return x;",Rb="return abs(x);";const Db=Bb+"\n  return (x < 0.0) ? 0.0 : x;\n",Fb=Bb+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",$b="return x;";class _b{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Mb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length);const t=e.length,n=xb("rc",t),r=ey(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Ob=s.kernel_impls.whereImpl,Qb={};const Lb=(0,s.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class zb extends s.KernelBackend{nextDataId(){return zb.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Cy)t=e;else{const n=rm((0,s.env)().getNumber("WEBGL_VERSION"),e);t=new Cy(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=rm((0,s.env)().getNumber("WEBGL_VERSION"));t=new Cy(e),this.binaryCache=((n=(0,s.env)().getNumber("WEBGL_VERSION"))in Qb||(Qb[n]={}),Qb[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Cb(this.gpgpu),this.numMBBeforeWarning=null==(0,s.env)().global.screen?1024:(0,s.env)().global.screen.height*(0,s.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.DataStorage(this,(0,s.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=Em(t),u=new py(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if(((0,s.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:am.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if((0,s.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:am.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new _b(o,$b):new Nb(o,$b);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,d;if(u&&(c=s.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);d=s.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=s.util.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=a){let t;t=l?new _b(r,$b):new Nb(r,$b);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,s.env)().getBool("DEBUG")&&!(0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,d=null;if("complex64"!==i&&(0,s.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...lm(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=s.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=s.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=d){const e=this.gpgpu.gl;dm(e,(()=>e.deleteBuffer(d)))}const h=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,s.engine)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:a,slice:i,dtype:o,isPacked:l,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=l?new _b(a,$b):new Nb(a,$b);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:o}],o),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=(0,s.engine)().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>s.util.decodeString(e)));return(0,s.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!hm(n)){if((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=s.util.sizeFromShape(t);if((0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...lm(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const i=(0,s.env)().getBool("WEBGL_PACK")&&!0===r,o=i?Em(t):t,l=i?new dy(o):new cy(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=s.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=s.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=s.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.util.now(),endMs:null}}endTimer(e){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s.util.now(),e)}async getQueryTime(e){if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Lb;return(0,s.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&s.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){s.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Ob(e.shape,t)}packedUnaryOp(e,t,n){const r=new _b(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,s.engine)().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ab(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Rb,e.dtype);const t=new Nb(e.shape,Rb),n=this.compileAndRun(t,[e]);return(0,s.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s.util.isString(n[0])){const a=n.map((e=>s.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,s.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Mb(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new wb(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[km(e.shape),...Cm(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[km(t),...Cm(t)],a=new kb(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:i}=n;if(null!=t){const e=s.util.sizeFromShape(a),n=t[0]*t[1]*4;s.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=Em(a);let l;l=r?new uy(o):new ly(o);const u=[null!=t?t:lm(o)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:e}],i,u,!0,t).dataId}}runWebGLProgram(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===sm.DENSE){const t=null!=i?i:lm(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===s.util.sizeFromShape(o.shape))return l.values=s.util.getTypedArrayFromDType(o.dtype,0),o;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s.util.sizeFromShape(t.shape)<=(0,s.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Tm(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const d={shape:o.shape,texData:l,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:l,keptDims:u}=ty(e.packedInputs,t.shape,i);let c="",d="",h="";if(1===l.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==l.length||e.packedInputs){if(l.length>2&&!e.packedInputs){const e=s.util.computeStrides(l);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${l[0]>1}_${l[1]>1}`;const p=t.shape.length,A=2===l.length&&s.util.arraysEqual(t.shape,i),f=1===s.util.sizeFromShape(t.shape),g=s.backend_util.getBroadcastDims(t.shape,n.shape),m=!e.packedInputs&&p===n.shape.length&&s.util.arraysEqual(i,n.texData.texShape),y=e.packedInputs||l.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${p}_${m}_${o?u:""}_${l.length}_${f}_${g}_${A}_${c}_${d}_${h}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+a+`${(0,s.env)().getNumber("WEBGL_VERSION")}`,i}(e,c,d),p=this.getAndSaveBinary(h,(()=>sy(this.gpgpu,e,c,d))),A=null!=this.activeTimers;let f;A&&(f=this.startTimer()),(0,s.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(iy(t.inShapeInfos,n),iy([t.outShapeInfo],[r]));const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,s.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const r=n[u],{uniform:a,offset:i,shape:o,texShape:l}=t.variablesLocations[u];if(o){const{uniformShape:n}=ty(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=a)if(r.isUniform)if(s.util.sizeFromShape(r.shape)<2)e.gl.uniform1f(a,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=r.texData.slice&&null!=i&&e.gl.uniform1i(i,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,a,u)}const l=t.outShapeLocation;if(l)switch(r.shape.length){case 1:e.gl.uniform1iv(l,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(l,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(l,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(l,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=s.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let s=0;s<t.program.customUniforms.length;++s){const n=t.program.customUniforms[s],r=t.customUniformLocations[s],i=a[s];if("float"===n.type)e.gl.uniform1fv(r,i);else if("vec2"===n.type)e.gl.uniform2fv(r,i);else if("vec3"===n.type)e.gl.uniform3fv(r,i);else if("vec4"===n.type)e.gl.uniform4fv(r,i);else if("int"===n.type)e.gl.uniform1iv(r,i);else if("ivec2"===n.type)e.gl.uniform2iv(r,i);else if("ivec3"===n.type)e.gl.uniform3iv(r,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,i)}}e.executeProgram()}(this.gpgpu,p,c,d,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),A&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=(0,s.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=s.util.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,s.env)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,s.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.tidy)((()=>{if(!(0,s.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,s.env)().getBool("DEBUG");(0,s.env)().set("DEBUG",!1);const t=this.abs((0,s.scalar)(1e-8)).dataSync()[0];if((0,s.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=s.util.now());let d=t.texShape;if(null==d&&(d=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(0,s.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&(0,s.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?s.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=s.util.squeezeShape(e);e=t.newShape}let a=s.util.sizeFromShape(e),i=null;e.length<=1&&a<=n?i=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||o)if(t){const t=km(e);let n=2,r=2;e.length&&([n,r]=Cm(e)),a=t*(n/2)*(r/2),i=s.util.sizeToSquarishShape(a).map((e=>2*e))}else i=s.util.sizeToSquarishShape(a);return i}(n,l),t.texShape=d),null!=a){const e=Em(n);let i,o=d[1],h=d[0];const p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!l&&p||([o,h]=um(d[0],d[1])),i=l?new Ay(e,p):new py(e,p);const A=p?[h,o]:d,f=this.makeTensorInfo(A,r),g=this.texData.get(f.dataId);g.usage=p?am.PIXELS:am.UPLOAD,g.texShape=A,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,a);const m=[[h,o]],y=!0,b=this.runWebGLProgram(i,[f],r,m,y),v=this.texData.get(b.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,(0,s.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=s.util.now()-c)}else{const e=this.acquireTexture(d,o,r,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*s.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,s.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw fm(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=ay(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:i,channels:o}=e,l=(0,s.engine)().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,t,n,a,i,o);return(0,s.engine)().makeTensorFromDataId(u,t,n,l)}}zb.nextDataId=0;s.device_util.isBrowser()&&(0,s.registerBackend)("webgl",(()=>new zb),2);const Pb="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Gb{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=oy(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Ub="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Wb{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=oy(a);let i="";if(r)if(0===a||1===s.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${ey(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=xb("coords",a);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function Vb(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const qb={kernelName:s.Identity,backendName:"webgl",kernelFunc:Vb};function Hb(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=Vb({inputs:{x:r},backend:n}),l=Vb({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const Yb={kernelName:s.Complex,backendName:"webgl",kernelFunc:Hb},jb="return (a < 0.) ? b * a : a;",Kb="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Jb={kernelName:s.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r,o=n.makeTensorInfo([],"float32",s.util.createScalarValue(i,"float32")),l=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wb(Kb,a.shape,o.shape):new Gb(jb,a.shape,o.shape),u=n.runWebGLProgram(l,[a,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},Xb="return (a < 0.) ? b * a : a;",Zb="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ev={kernelName:s.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wb(Zb,r.shape,a.shape):new Gb(Xb,r.shape,a.shape);return n.runWebGLProgram(i,[r,a],"float32")}},tv="if (isnan(x)) return x;";function nv(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:a}=e;return e=>{let{inputs:i,backend:o}=e;const{x:l}=i,u=o,c=a||l.dtype;if(u.shouldExecuteOnCPU([l])&&null!=r){const e=u.texData.get(l.dataId),t=r(e.values,c);return u.makeTensorInfo(l.shape,c,t)}let d;return d=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new _b(l.shape,n):new Nb(l.shape,t),u.runWebGLProgram(d,[l],c)}}function rv(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:a=!1,cpuKernelImpl:i,dtype:o}=e;return e=>{let{inputs:l,backend:u}=e;const{a:c,b:d}=l,h=u;if(a&&"complex64"===c.dtype){const e=h.texData.get(c.dataId),n=h.texData.get(d.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:c.shape},i={dataId:r.dataId,dtype:r.dtype,shape:d.shape},o=new Gb(t,c.shape,d.shape);return h.runWebGLProgram(o,[a,i],(0,s.upcastType)(n.dtype,r.dtype))})),i=Hb({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),i}const p=o||(0,s.upcastType)(c.dtype,d.dtype);if(("string"===c.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([c,d]))&&null!=i){const e=h.texData.get(c.dataId).values,t=h.texData.get(d.dataId).values,n="string"===c.dtype?s.backend_util.fromUint8ToStringArray(e):e,r="string"===c.dtype?s.backend_util.fromUint8ToStringArray(t):t,[a,o]=i(c.shape,d.shape,n,r,p),l=h.makeTensorInfo(o,p);return h.texData.get(l.dataId).values=a,l}let A;return A=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Wb(n,c.shape,d.shape,r):new Gb(t,c.shape,d.shape),h.runWebGLProgram(A,[c,d],p)}}function sv(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Db;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Fb;if("prelu"===e)return t?Zb:Xb;if("leakyrelu"===e)return t?Kb:jb;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class av{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=oy(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],A=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",g="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const m=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${b};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${A[0]});\n          result += (${p[1]} * ${A[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${m}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const iv="return areal * breal - aimag * bimag;",ov="return areal * bimag + aimag * breal;";class lv{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const uv="return a * b;";function cv(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=s.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new lv(iv,r.shape,a.shape),i=new lv(ov,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=Hb({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,o]=Yy(r.shape,a.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=s,l}let o;return o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wb(uv,r.shape,a.shape):new Gb(uv,r.shape,a.shape),n.runWebGLProgram(o,[r,a],i)}const dv={kernelName:s.Multiply,backendName:"webgl",kernelFunc:cv};function hv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,o=n,l=s.util.sizeFromShape(a.shape),u=s.util.inferFromImplicitShape(i,l),c=s.util.sizeFromShape(u);s.util.assert(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const d=o.texData.get(a.dataId);return!d.isPacked||Tm(a.shape,u)||null!==d.texture&&Tm(d.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[km(e.shape),...Cm(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[km(t),...Cm(t)],i=new kb(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,u,o)}const pv={kernelName:s.Reshape,backendName:"webgl",kernelFunc:hv};class Av{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${s.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class fv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}function gv(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=s.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let s=0;s<a.length;s++){const{inSize:o,windowSize:l,outSize:u}=a[s];let c,d;c="mean"===n?0===s?new Av({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new Av({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new fv({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),d=i,i=r.runWebGLProgram(c,[i],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return i}class mv{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=ey(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class yv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ey(this.rank),s=Ib("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function bv(e,t,n){const r=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yv(e.shape,t):new mv(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function vv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;return function(e,t,n,r){const a=t,i=e.shape.length,o=s.util.parseAxisParam(a,e.shape);let l=o;const u=s.backend_util.getAxesPermutation(l,i),c=null!=u;let d=e;c&&(d=bv(e,u,r),l=s.backend_util.getInnerMostAxes(l.length,i)),s.backend_util.assertAxesAreInnerMostDims("sum",l,i);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,l);let A=h;n&&(A=s.backend_util.expandShapeToKeepDim(h,o));const f=s.util.sizeFromShape(p),g=hv({inputs:{x:d},attrs:{shape:[s.util.sizeFromShape(e.shape)/f,f]},backend:r}),m=gv(g,(0,s.sumOutType)(e.dtype),"sum",r),y=hv({inputs:{x:m},attrs:{shape:A},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),c&&r.disposeIntermediateTensorInfo(d),y}(a,i,o,n)}const Iv={kernelName:s.Sum,backendName:"webgl",kernelFunc:vv};function xv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[a[c]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=bb(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype);i.texData.get(u.dataId).values=t}else u=bv(s,a,i);return u}const wv={kernelName:s.Transpose,backendName:"webgl",kernelFunc:xv};function kv(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:i,bias:o=null,preluActivationWeights:l=null,leakyreluAlpha:u=0,activation:c=null}=e;const d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],A=a?n.shape[h-1]:n.shape[h-2],f=r?t.shape[d-1]:t.shape[d-2],g=a?n.shape[h-2]:n.shape[h-1],m=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=s.util.sizeFromShape(m),v=s.util.sizeFromShape(y),I=s.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,g]);s.util.assert(p===A,(()=>`Error in matMul: inner shapes (${p}) and (${A}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));const x=r?[b,p,f]:[b,f,p],w=a?[v,g,A]:[v,A,g],k=hv({inputs:{x:t},backend:i,attrs:{shape:x}}),C=hv({inputs:{x:n},backend:i,attrs:{shape:w}}),E=[k,C],S=Math.max(b,v),T=r?k.shape[1]:k.shape[2],N=null!=o,B=null!=l,R="leakyrelu"===c,D=null!=c?sv(c,!0):null;let F;if((1===f||1===g)&&T>1e3&&!1===(N||B||R||null!=D)){let e=k,t=C;r&&(e=xv({inputs:{x:k},backend:i,attrs:{perm:[0,2,1]}}),E.push(e)),a&&(t=xv({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),E.push(t));const n=1===g;let s=e;1!==g&&(s=hv({inputs:{x:e},backend:i,attrs:{shape:[S,T,1]}}),E.push(s));const o=1===g?2:1;let l=t;n&&(l=hv({inputs:{x:t},backend:i,attrs:{shape:[S,1,T]}}),E.push(l));const u=cv({inputs:{a:s,b:l},backend:i});F=vv({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),E.push(u)}else{const e=(0,s.upcastType)(t.dtype,n.dtype),c=new av(x,w,[S,f,g],r,a,N,D,B,R),d=[k,C];if(null!=o&&d.push(o),B&&d.push(l),R){const e=i.makeTensorInfo([],"float32",s.util.createScalarValue(u,"float32"));d.push(e),E.push(e)}F=i.runWebGLProgram(c,d,e)}const $=hv({inputs:{x:F},backend:i,attrs:{shape:I}});E.push(F);for(const s of E)i.disposeIntermediateTensorInfo(s);return $}const Cv={kernelName:s._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;return kv({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},Ev="return abs(x);";const Sv={kernelName:s.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=ab(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _b(r.shape,Ev):new Nb(r.shape,Ev),n.runWebGLProgram(a,[r],r.dtype)}},Tv=nv({opSnippet:Bb+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Nv={kernelName:s.Acos,backendName:"webgl",kernelFunc:Tv},Bv=nv({opSnippet:Bb+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Rv={kernelName:s.Acosh,backendName:"webgl",kernelFunc:Bv},Dv="return a + b;",Fv=rv({opSnippet:Dv,packedOpSnippet:Dv,supportsComplex:!0,cpuKernelImpl:Ey}),$v={kernelName:s.Add,backendName:"webgl",kernelFunc:Fv};class _v{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Mv{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Ov={kernelName:s.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return Vb({inputs:{x:a[0]},backend:r});if(a.length>(0,s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>(0,s.upcastType)(e,t))),o=a.map((e=>e.shape)),l=(0,s.env)().getBool("WEBGL_PACK")?new Mv(a[0].shape,o):new _v(a[0].shape,o);return r.runWebGLProgram(l,a,i)}};const Qv={kernelName:s.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=s.util.parseAxisParam(i,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l);let h=a;null!=d&&(h=xv({inputs:{x:a},backend:n,attrs:{perm:d}}),c=s.backend_util.getInnerMostAxes(c.length,l)),s.backend_util.assertAxesAreInnerMostDims("all",c,l);const[p,A]=s.backend_util.computeOutAndReduceShapes(h.shape,c),f=hv({inputs:{x:h},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(A)]}}),g=gv(f,f.dtype,"all",n);let m;if(o){m=hv({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,u)}})}else m=hv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),m}};const Lv={kernelName:s.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=s.util.parseAxisParam(i,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l);let h=a;null!=d&&(h=xv({inputs:{x:a},backend:n,attrs:{perm:d}}),c=s.backend_util.getInnerMostAxes(c.length,l)),s.backend_util.assertAxesAreInnerMostDims("any",c,l);const[p,A]=s.backend_util.computeOutAndReduceShapes(h.shape,c),f=hv({inputs:{x:h},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(A)]}}),g=gv(f,f.dtype,"any",n);let m;if(o){m=hv({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,u)}})}else m=hv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),m}};class zv{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Pv{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=ey(l),c=xb("coords",l);let d,h;if(1===i){h=l+1;const e=ey(h);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[l-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[l-2]};`}else h=l,d=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),A="."+p[h-1],f=p.map((e=>"int "+e)),g=xb("sourceLocR",h-1).concat("inIdx.r"),m=xb("sourceLocG",h-1).concat("inIdx.g"),y=xb("sourceLocB",h-1).concat("inIdx.b"),b=xb("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",I=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,x=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${A}, sourceLocG${A},\n          sourceLocB${A}, sourceLocA${A}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${x};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${I}\n          vec4 candidate = ${x};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Gv(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],i=t.shape[1];null!=r&&(a=r.shape[0],i=r.shape[1]);const o=s.backend_util.computeOptimalWindowSize(i),l={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},u=new zv(l,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(u,c,"int32");if(1===d.shape[1])return d;const h=Gv(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Uv(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const a=null!=r?r.shape:t.shape,i=a[a.length-1],o=s.backend_util.computeOptimalWindowSize(i),l=new Pv(a,o,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(l,u,"int32");if(c.shape.length===t.shape.length){const r=Uv(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Wv(e,t,n,r){const a=[n];if(s.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,s.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[l,u]=s.backend_util.computeOutAndReduceShapes(o.shape,a),c=s.util.sizeFromShape(u),d=hv({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(d);const h=Gv(e,d,r);n.push(h);const p=hv({inputs:{x:h},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Uv(e,t,r)}const Vv={kernelName:s.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let o=s.util.parseAxisParam(i,a.shape);const l=s.backend_util.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=xv({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=s.backend_util.getInnerMostAxes(o.length,u.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const d=Wv(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const qv={kernelName:s.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let o=s.util.parseAxisParam(i,a.shape);const l=s.backend_util.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=xv({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=s.backend_util.getInnerMostAxes(o.length,u.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const d=Wv(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Hv=nv({opSnippet:Bb+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Yv={kernelName:s.Asin,backendName:"webgl",kernelFunc:Hv},jv=nv({opSnippet:Bb+"return log(x + sqrt(x * x + 1.0));"}),Kv={kernelName:s.Asinh,backendName:"webgl",kernelFunc:jv},Jv=nv({opSnippet:Bb+"\n  return atan(x);\n"}),Xv={kernelName:s.Atan,backendName:"webgl",kernelFunc:Jv},Zv=rv({opSnippet:Pb+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ub+"\n  return result;\n"}),eI={kernelName:s.Atan2,backendName:"webgl",kernelFunc:Zv},tI=nv({opSnippet:Bb+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),nI={kernelName:s.Atanh,backendName:"webgl",kernelFunc:tI};class rI{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const A="avg"===t,f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let m="0.0";if(A||(m="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?f:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const b=4*Math.floor(a/4),v=a%4,I=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${I}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${I}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${I}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${I}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class sI{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,A=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let b="0.0";if(y||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${f}, ${g}, ${m});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${A};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${A} +\n                      wR * ${A} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const I=4*Math.floor(a/4),x=a%4,w=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${f}, ${g}, ${m});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${I}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${w}\n            }\n\n            int xC = xCCorner + ${I};\n            if (${1===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${w}\n            } else if (${2===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${w}\n            } else if (${3===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${w}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const aI={kernelName:s.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;_m(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=s.backend_util.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&s.util.arraysEqual(c.inShape,c.outShape))return Vb({inputs:{x:a},backend:n});const d=new rI(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};const iI={kernelName:s.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r,d=s.backend_util.computePool3DInfo(a.shape,i,o,[1,1,1],l,u,c),h=new sI(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};class oI{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lI{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,A=d-1-e.padInfo.top,f=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${A}, ${f});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uI={kernelName:s.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=s.backend_util.computePool3DInfo(o.shape,l,u,[1,1,1],c,d),p=new lI(h);return n.runWebGLProgram(p,[a],o.dtype)}};const cI={kernelName:s.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,o=i;_m([a,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,d=s.backend_util.computePool2DInfo(o.shape,l,u,1,c),h=new oI(d);return n.runWebGLProgram(h,[a],o.dtype)}};const dI={kernelName:s.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return kv({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class hI{constructor(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class pI{constructor(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const AI={kernelName:s.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,mean:i,variance:o,offset:l,scale:u}=t;s.util.assert(i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.util.assert(null==l||i.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.util.assert(null==u||i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=[a,i,o];let h=null;null!=l&&(h=l.shape,d.push(l));let p=null;null!=u&&(p=u.shape,d.push(u));const A=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new pI(a.shape,i.shape,o.shape,h,p,c):new hI(a.shape,i.shape,o.shape,h,p,c);return n.runWebGLProgram(A,d,d[0].dtype)}};class fI{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ey(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return gI.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${gI[t]} = start[${t}] + coords.${gI[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const gI=["x","y","z","w","u","v"];class mI{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ey(this.rank),n=xb("coords",this.rank),r=xb("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function yI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:o}=r,[l,u]=s.slice_util.parseSliceParams(a,i,o);if(s.slice_util.assertParamsValid(a,l,u),0===s.util.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=ib(e.values,l,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),d=s.slice_util.isSliceContinous(a.shape,l,u);if(c||!d){const e=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mI(u):new fI(u),t=[l];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),o=r.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let l=s.slice_util.computeFlatOffset(t,s.util.computeStrides(e.shape));a.slice&&(l+=a.slice.flatOffset),o.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),i}(a,l,u,n)}const bI={kernelName:s.Slice,backendName:"webgl",kernelFunc:yI},vI={kernelName:s.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:o}=r;s.util.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=s.backend_util.getReshaped(a.shape,i,l),c=s.backend_util.getPermuted(u.length,i.length),d=s.backend_util.getReshapedPermuted(a.shape,i,l),h=s.backend_util.getSliceBeginCoords(o,i.length),p=s.backend_util.getSliceSize(d,o,i.length),A=[],f=hv({inputs:{x:a},backend:n,attrs:{shape:u}}),g=xv({inputs:{x:f},backend:n,attrs:{perm:c}}),m=hv({inputs:{x:g},backend:n,attrs:{shape:d}}),y=yI({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return A.push(f),A.push(g),A.push(m),A.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const II={kernelName:s.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=Sy(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}};const xI={kernelName:s.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,s.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||1===o){const e=n.texData.get(r.dataId).values,t=n.texData.get(a.dataId).values,[s,i]=Ny(r.shape,a.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=s,o}let l;return l=i?new Wb("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,a.shape,!1):new Gb("\n  return float(int(a.r) & int(b.r));\n",r.shape,a.shape),n.runWebGLProgram(l,[r,a],r.dtype)}};const wI={kernelName:s.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=s.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}},kI=rv({opSnippet:"return float(a != b);",cpuKernelImpl:Ky,dtype:"bool"}),CI={kernelName:s.NotEqual,backendName:"webgl",kernelFunc:kI};function EI(e){const{inputs:t,backend:n}=e,{input:r}=t;return Vb({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const SI={kernelName:s.Real,backendName:"webgl",kernelFunc:EI};const TI={kernelName:s.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return Vb({inputs:{x:i},backend:r});const t=s.zeros(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),a=Hb({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=EI({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!s.util.hasEncodingLoss(i.dtype,o)){const e=Vb({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,s]=By(e,i.shape,i.dtype,o);return r.makeTensorInfo(t,n,s)}if("int32"===o)return function(e,t){const n=new Nb(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",s.util.getTypedArrayFromDType("bool",1)),t=kI({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},NI="return ceil(x);",BI=nv({opSnippet:NI,packedOpSnippet:NI,cpuKernelImpl:Ry}),RI={kernelName:s.Ceil,backendName:"webgl",kernelFunc:BI};class DI{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class FI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const $I={kernelName:s.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:i,clipValueMax:o}=r;let l;l=(0,s.env)().getBool("WEBGL_PACK_CLIP")?new FI(a.shape):new DI(a.shape);const u=[[i],[o]];return n.runWebGLProgram(l,[a],a.dtype,u)}};class _I{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function MI(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const OI={kernelName:s.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new _I(r.shape),i=[MI(r,s.complexTensorInfos.real),MI(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class QI{constructor(e){this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class LI{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=ey(r),i=xb("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const l=new Array(e.length-1);l[0]=e[0][t];for(let s=1;s<l.length;s++)l[s]=l[s-1]+e[s][t];const u=o[t],c=o.slice(-2),d=o.join();let h=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let s=1;s<l.length;s++){const e=l[s-1];h+=`\n        if (${u} < ${l[s]}  && ${u} >= ${l[s-1]}) {\n          return getChannel(\n            getT${s}(${zI(o,u,e)}),\n            vec2(${zI(c,u,e)}));\n        }`}const p=l.length,A=l[l.length-1];h+=`\n        return getChannel(\n          getT${p}(${zI(o,u,A)}),\n          vec2(${zI(c,u,A)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function zI(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function PI(e){const{inputs:t,backend:n}=e,{input:r}=t;return Vb({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const GI={kernelName:s.Imag,backendName:"webgl",kernelFunc:PI};function UI(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>EI({inputs:{input:e},backend:n}))),s=e.map((e=>PI({inputs:{input:e},backend:n}))),a=UI(r,t,n),i=UI(s,t,n),o=Hb({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=s.util.sizeFromShape(e.shape.slice(t));return hv({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=s.backend_util.computeOutShape(a.map((e=>e.shape)),1),l=1===a[0].shape[0],u=Dy(i,o,r,l),c=s.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const i=e.filter((e=>s.util.sizeFromShape(e.shape)>0)),o=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=o?new Nb(e[0].shape,$b):new _b(e[0].shape,$b);return n.runWebGLProgram(t,e,r)}const l=(0,s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>l){const e=[];for(let s=0;s<i.length;s+=l){const r=i.slice(s,s+l);e.push(UI(r,t,n))}const r=UI(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new LI(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:u,outShape:c}=function(e,t,n){const r=s.backend_util.computeOutShape(e.map((e=>e.shape)),t),a=e.map((e=>hv({inputs:{x:e},attrs:{shape:[-1,s.util.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:a,outShape:r}}(i,t,n),d=new QI(u.map((e=>e.shape))),h=n.runWebGLProgram(d,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=hv({inputs:{x:h},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(h),p}function WI(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=s.util.parseAxisParam(a,t[0].shape)[0],o=t.map((e=>e.shape));s.backend_util.assertParamsConsistent(o,i);const l=s.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===s.util.sizeFromShape(l))return n.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter((e=>s.util.sizeFromShape(e.shape)>0));return 1===u.length?Vb({inputs:{x:u[0]},backend:n}):UI(u,i,n)}const VI={kernelName:s.Concat,backendName:"webgl",kernelFunc:WI};class qI{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),A=e.inChannels%4,f="channelsLast"===e.dataFormat,g=f?1:2,m=f?2:3,y=f?3:1;let b="",v="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${m}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===A}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===A}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===A}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${I}\n        ${v}\n        setOutput(result);\n      }\n    `}}class HI{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),A=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===A}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===A}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===A}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YI{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oy(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<c;s++)h+=`\n           vec4 xTexelC${2*s};\n           int xTexelC${2*s}Ready;\n           vec4 xTexelC${2*s+1};\n           int xTexelC${2*s+1}Ready;\n           vec4 xC${s};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let s=0;s<c;s++)h+=`\n           xTexelC${2*s} = vec4(0.0);\n           xTexelC${2*s}Ready = 0;\n           xTexelC${2*s+1} = vec4(0.0);\n           xTexelC${2*s+1}Ready = 0;\n           xC${s} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(h+=`\n           xC = xCCorner + ${t*l};\n           `,1===o){if(t<c&&(i%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===l&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<c)){const e=i%2===0?s.util.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<c&&(i%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<c&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<c&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<c&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<c&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",A="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,A="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${A}\n         setOutput(result);\n       }\n     `}}class jI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=oy(this.outputShape.length);const{dataFormat:n}=t,r=Om(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function KI(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function JI(e){let{x:t,filter:n,convInfo:r,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape,d=a.texData.get(t.dataId),h=r.inChannels,p=c[0]*c[1]*c[2],A=r.outChannels,f="channelsLast"===r.dataFormat,g=!1;let m;const y=[];if(null!=o){const e=KI(o.shape,f);null!=e&&(o=hv({inputs:{x:o},backend:a,attrs:{shape:e}}),y.push(o))}if(null!=i){const e=KI(i.shape,f);null!=e&&(i=hv({inputs:{x:i},backend:a,attrs:{shape:e}}),y.push(i))}if(!((1===p||1===A)&&h>1e3)&&d.isPacked&&f&&null!=d.texture&&c[2]%2!==0&&s.util.arraysEqual(d.shape.slice(-3),c.slice(-3))){const e=c[0]*c[1]*(c[2]+1),h={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,s.util.assert(Tm(d.shape,h.shape),(()=>`packed reshape ${d.shape} to ${h.shape} isn't free`));const A=hv({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}});y.push(A);const f=kv({a:h,b:A,backend:a,transposeA:false,transposeB:g,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l}),b=a.texData.get(f.dataId);s.util.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=p,b.shape=r.outShape,m=Vb({inputs:{x:f},backend:a}),m.shape=r.outShape,y.push(f)}else{const e=r.outHeight*r.outWidth,s=hv({inputs:{x:t},backend:a,attrs:{shape:f?[r.batchSize,e,r.inChannels]:[r.batchSize,r.inChannels,e]}}),c=hv({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=kv({a:f?s:c,b:f?c:s,transposeA:!f,transposeB:g,backend:a,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l});m=hv({inputs:{x:d},backend:a,attrs:{shape:r.outShape}}),y.push(s),y.push(c),y.push(d)}for(const s of y)a.disposeIntermediateTensorInfo(s);return m}function XI(e){let{x:t,filter:n,convInfo:r,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const{filterWidth:c,filterHeight:d,inChannels:h,outWidth:p,outHeight:A,dataFormat:f}=r,g="channelsLast"===f,m=c*d*h,y=A*p,b=[r.batchSize,m,y],v=[];if(null!=o){const e=KI(o.shape,g);null!=e&&(o=hv({inputs:{x:o},backend:a,attrs:{shape:e}}),v.push(o))}if(null!=i){const e=KI(i.shape,g);null!=e&&(i=hv({inputs:{x:i},backend:a,attrs:{shape:e}}),v.push(i))}const I=hv({inputs:{x:n},backend:a,attrs:{shape:[1,m,s.util.sizeFromShape(n.shape)/m]}});v.push(I);const x=new jI(b,r),w=[t.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],k=a.runWebGLProgram(x,[t],"float32",w),C=hv({inputs:{x:k},backend:a,attrs:{shape:b}});v.push(k),v.push(C);const E=null!=i,S=null!=o,T="leakyrelu"===u,N=u?sv(u,!0):null,B=new av(g?C.shape:I.shape,g?I.shape:C.shape,g?[r.batchSize,y,r.outChannels]:[r.batchSize,r.outChannels,y],!0,!1,E,N,S,T),R=g?[C,I]:[I,C];if(i&&R.push(i),S&&R.push(o),T){const e=a.makeTensorInfo([],"float32",s.util.createScalarValue(l,"float32"));R.push(e),v.push(e)}const D=a.runWebGLProgram(B,R,"float32"),F=hv({inputs:{x:D},backend:a,attrs:{shape:r.outShape}});v.push(D);for(const s of v)a.disposeIntermediateTensorInfo(s);return F}const ZI={kernelName:s.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=r,h=s.backend_util.convertConv2DDataFormat(u),p=s.backend_util.computeConv2DInfo(a.shape,i.shape,o,c,l,d,!1,h);let A;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,s.env)().getBool("WEBGL_EXP_CONV")){const e=new YI(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];A=n.runWebGLProgram(e,[a,i],"float32",t)}else if((0,s.env)().getBool("WEBGL_CONV_IM2COL"))A=XI({x:a,filter:i,convInfo:p,backend:n});else{const e=new qI(p);A=n.runWebGLProgram(e,[a,i],"float32")}else A=JI({x:a,filter:i,convInfo:p,backend:n});const f=hv({inputs:{x:A},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(A),f}};class ex{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nx{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const sx={kernelName:s.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:d}=r,h=s.backend_util.convertConv2DDataFormat(u),p=s.backend_util.computeConv2DInfo(a.shape,d,o,1,l,c,!1,h),A=new ex(p);return n.runWebGLProgram(A,[a,i],"float32")}};class ax{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=oy(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const ix={kernelName:s.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:d}=r,h=s.backend_util.convertConv2DDataFormat(c),p=s.backend_util.computeConv2DInfo(o,i.shape,l,1,u,d,!1,h);if((0,s.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new ax(p);return n.runWebGLProgram(t,[a,i],"float32",e)}{const e=new tx(p);return n.runWebGLProgram(e,[a,i],"float32")}}};const ox={kernelName:s.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=s.backend_util.computeConv3DInfo(a.shape,i.shape,o,u,l),d=new HI(c);return n.runWebGLProgram(d,[a,i],"float32")}};const lx={kernelName:s.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,pad:l,filterShape:u}=r,c=s.backend_util.computeConv3DInfo(a.shape,u,o,1,l),d=new nx(c);return n.runWebGLProgram(d,[a,i],"float32")}};const ux={kernelName:s.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:o,strides:l,inputShape:u}=r,c=s.backend_util.computeConv3DInfo(u,i.shape,l,1,o),d=new rx(c);return n.runWebGLProgram(d,[a,i],"float32")}},cx=nv({opSnippet:tv+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Ub}\n  return result;\n`}),dx={kernelName:s.Cos,backendName:"webgl",kernelFunc:cx},hx=nv({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),px={kernelName:s.Cosh,backendName:"webgl",kernelFunc:hx};class Ax{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const h="bilinear"===r?1:0,[p,A]=[i-1+".0",o-1+".0"],[f,g,m]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,b,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${A} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${A}`];this.userCode=`\n      const float height_ratio = float(${f});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${m};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${A} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const fx={kernelName:s.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new Ax(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var gx;!function(e){e.Prod="*",e.Sum="+"}(gx||(gx={}));class mx{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===gx.Prod?"1.0":"0.0",i=n?a:`getX(${yx(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ey(s)} coords = getOutputCoords();\n        int end = ${bx(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${bx(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${yx(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function yx(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function bx(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function vx(e,t,n,r,a,i){const o=t.shape.length,l=s.backend_util.getAxesPermutation([r],o);let u=t;null!=l&&(u=xv({inputs:{x:t},backend:n,attrs:{perm:l}}));const c=s.backend_util.getInnerMostAxes(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const d=u.shape[c];let h=Vb({inputs:{x:u},backend:n});for(let s=0;s<=Math.ceil(Math.log2(d))-1;s++){const t=new mx(e,u.shape,!1,i),r=[[s]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(a){const t=new mx(e,u.shape,a,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=l){const e=xv({inputs:{x:h},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const Ix={kernelName:s.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return vx(gx.Prod,s,n,a,i,o)}};const xx={kernelName:s.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return vx(gx.Sum,s,n,a,i,o)}};const wx={kernelName:s.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=Sy(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=Ty(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class kx{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Cx={kernelName:s.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),d=new kx("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(d,[s],s.dtype)}};class Ex{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oy(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class Sx{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oy(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<d;s++)p+=`\n          vec4 xTexelC${2*s};\n          int xTexelC${2*s}Ready;\n          vec4 xTexelC${2*s+1};\n          int xTexelC${2*s+1}Ready;\n          vec4 xC${s};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let s=0;s<d;s++)p+=`\n          xTexelC${2*s} = vec4(0.0);\n          xTexelC${2*s}Ready = 0;\n          xTexelC${2*s+1} = vec4(0.0);\n          xTexelC${2*s+1}Ready = 0;\n          xC${s} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let m=0;m<(h+1)/2;m++){const e=2*m;if(p+=`\n          xC = xCCorner + ${e*u};\n          `,1===l){if(e<d&&(o%2===1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){const t=o%2===0?s.util.nearestLargerEven(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(o%2===1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let A="",f="";n&&(A=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${A}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${f}\n        setOutput(result);\n      }\n    `}}const Tx={kernelName:s.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;let d=u;null==d&&(d=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const h=s.backend_util.computeConv2DInfo(a.shape,i.shape,o,d,l,c,!0);let p;p=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new Sx(h):new Ex(h);const A=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[a,i],"float32",A)}};class Nx{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Rx={kernelName:s.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:d}=r,h=s.backend_util.computeConv2DInfo(a.shape,d,o,l,u,c,!0),p=new Nx(h);return n.runWebGLProgram(p,[a,i],"float32")}};const Dx={kernelName:s.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:d}=r,h=s.backend_util.computeConv2DInfo(d,i.shape,o,l,u,c,!0),p=new Bx(h);return n.runWebGLProgram(p,[a,i],"float32")}};class Fx{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const $x={kernelName:s.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],i=s.util.sizeFromShape(r.shape),o=hv({inputs:{x:r},backend:n,attrs:{shape:[i]}}),l=new Fx(i),u=n.runWebGLProgram(l,[o],o.dtype),c=hv({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class _x{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Mx={kernelName:s.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=s.backend_util.computeDilation2DInfo(a.shape,i.shape,o,l,"NHWC",u);let d;const h=new _x(c);d=n.runWebGLProgram(h,[a,i],"float32");const p=hv({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const Ox={kernelName:s.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:o,summedDims:l,idDims:u}=s.backend_util.decodeEinsumEquation(a,i.length);s.backend_util.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:d}=s.backend_util.getEinsumComputePath(l,u),h=d.length;let p=null,A=o.length;const f=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=s.backend_util.getEinsumPermutation(A,u[e]);let a;s.backend_util.isIdentityPermutation(t)?a=i[e]:(a=xv({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);s.util.arraysEqual(a.shape,o)||(a=hv({inputs:{x:a},backend:n,attrs:{shape:o}}),f.push(a)),null===p?p=a:(p=cv({inputs:{a:a,b:p},backend:n}),f.push(p))}g<h-1&&(c[g]>=0&&(p=vv({inputs:{x:p},backend:n,attrs:{axis:c[g]-(o.length-A),keepDims:!1}}),f.push(p)),A--)}for(const s of f)s!==p&&n.disposeIntermediateTensorInfo(s);return p}},Qx=nv({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Lx={kernelName:s.Elu,backendName:"webgl",kernelFunc:Qx},zx={kernelName:s.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,i=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wb("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new Gb("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(i,[r,a],r.dtype)}},Px=rv({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Fy}),Gx={kernelName:s.Equal,backendName:"webgl",kernelFunc:Px},Ux=nv({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.backend_util.ERF_P};\n  float a1 = ${s.backend_util.ERF_A1};\n  float a2 = ${s.backend_util.ERF_A2};\n  float a3 = ${s.backend_util.ERF_A3};\n  float a4 = ${s.backend_util.ERF_A4};\n  float a5 = ${s.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Wx={kernelName:s.Erf,backendName:"webgl",kernelFunc:Ux},Vx=nv({opSnippet:tv+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:$y,dtype:"float32"}),qx={kernelName:s.Exp,backendName:"webgl",kernelFunc:Vx};function Hx(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=a;return a<0&&(s.util.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),l.splice(u,0,1),hv({inputs:{x:i},backend:r,attrs:{shape:l}})}const Yx={kernelName:s.ExpandDims,backendName:"webgl",kernelFunc:Hx},jx="return exp(x) - 1.0;",Kx=nv({opSnippet:jx,packedOpSnippet:jx,cpuKernelImpl:_y}),Jx={kernelName:s.Expm1,backendName:"webgl",kernelFunc:Kx};class Xx{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Zx(e,t,n){const r=n.texData.get(e.dataId),a=s.util.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=hv({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),l=o.shape,u=new Xx("real",l,t),c=new Xx("imag",l,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],h=n.runWebGLProgram(u,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),A=Hb({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=hv({inputs:{x:A},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(A),f}const ew={kernelName:s.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Zx(r,!1,n)}};class tw{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function nw(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:i}=n;if(i=i||s.util.inferDtype(a),"string"===i){const e=s.util.getArrayFromDType(i,s.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,i,e)}{const e=new tw(r,a),n=[[a]];return t.runWebGLProgram(e,[],i,n)}}const rw={kernelName:s.Fill,backendName:"webgl",kernelFunc:nw};class sw{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const aw={kernelName:s.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,s=n,a=new sw(r.shape);return s.runWebGLProgram(a,[r],r.dtype)}},iw="return floor(x);",ow=nv({opSnippet:iw,packedOpSnippet:iw,cpuKernelImpl:My}),lw={kernelName:s.Floor,backendName:"webgl",kernelFunc:ow},uw=rv({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),cw={kernelName:s.FloorDiv,backendName:"webgl",kernelFunc:uw};class dw{constructor(e){this.variableNames=["A"];const t=Om(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class hw{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Om(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const pw={kernelName:s.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:i}=r,o="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,l="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[c,u],h=[c,u,i];if(l||o){const e=(0,s.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Aw&&e===fw||(fw=e,Aw=document.createElement("canvas").getContext("2d",{willReadFrequently:fw})),Aw.canvas.width=u,Aw.canvas.height=c,Aw.drawImage(a,0,0,u,c),a=Aw.canvas}const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=am.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const A=(0,s.env)().getBool("WEBGL_PACK")?new hw(h):new dw(h),f=n.runWebGLProgram(A,[p],"int32");return n.disposeData(p.dataId),f}};let Aw,fw=(0,s.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const gw={kernelName:s.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:d,dilations:h,dimRoundingMode:p,activation:A,leakyreluAlpha:f}=r,g=s.backend_util.convertConv2DDataFormat(d),m=s.backend_util.computeConv2DInfo(a.shape,i.shape,u,h,c,p,!1,g);let y;const b=[],v=null!=o,I=null!=l,x="leakyrelu"===A,w=()=>{const e=[a,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=hv({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(o,d)),I&&e.push(t(l,d)),x){const t=n.makeTensorInfo([],"float32",s.util.createScalarValue(f,"float32"));e.push(t),b.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&(0,s.env)().getBool("WEBGL_EXP_CONV")){const e=A?sv(A,!0):null,t=new YI(m,v,e,I,x),r=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=w();y=n.runWebGLProgram(t,s,"float32",r)}else if((0,s.env)().getBool("WEBGL_CONV_IM2COL"))y=XI({x:a,filter:i,convInfo:m,backend:n,bias:o,activation:A,preluActivationWeights:l,leakyreluAlpha:f});else{const e=A?sv(A,!1):null,t=new qI(m,v,e,I,x),r=w();y=n.runWebGLProgram(t,r,"float32")}else y=JI({x:a,filter:i,convInfo:m,backend:n,bias:o,activation:A,preluActivationWeights:l,leakyreluAlpha:f});const k=hv({inputs:{x:y},backend:n,attrs:{shape:m.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),k}};const mw={kernelName:s.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:A}=r,f=[];let g=d;null==g&&(g=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const m=s.backend_util.computeConv2DInfo(a.shape,i.shape,u,g,c,h,!0),y=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,b=p?sv(p,y):null,v=[a,i],I=null!=o,x=null!=l,w="leakyrelu"===p;if(I&&v.push(o),x&&v.push(l),w){const e=n.makeTensorInfo([],"float32",s.util.createScalarValue(A,"float32"));v.push(e),f.push(e)}let k;k=y?new Sx(m,I,b,x,w):new Ex(m,I,b,x,w);const C=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],E=n.runWebGLProgram(k,v,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class yw{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=ey(n.length);let a="\n    int index;";for(let i=0;i<this.sliceDim;i++)a+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const bw={kernelName:s.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=a.shape,o=i[i.length-1],l=s.util.sizeFromShape(r.shape),[u,c,d,h]=s.backend_util.prepareAndValidate(r,a),p=hv({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),A=hv({inputs:{x:r},backend:n,attrs:{shape:[s.util.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=Oy(e,t,r.dtype,c,o,d,h,r.shape,l);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new yw(o,h,[c,d],r.shape),g=n.runWebGLProgram(f,[A,p],A.dtype),m=hv({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(g),m}};class vw{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=ey(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Iw(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=r,u=s.util.parseAxisParam(o,a.shape)[0];if((0,s.env)().get("DEBUG")){const e=n.readSync(i.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];s.util.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=s.backend_util.segment_util.collectGatherOpShapeInfo(a,i,u,l),d=s.util.sizeFromShape(i.shape),h=[],p=hv({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),A=hv({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});h.push(p),h.push(A);const f=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(A),t=n.bufferSync(p),r=Qy(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new vw(p.shape,f),m=n.runWebGLProgram(g,[p,A],p.dtype);h.push(m);const y=hv({inputs:{x:m},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const xw={kernelName:s.GatherV2,backendName:"webgl",kernelFunc:Iw},ww=rv({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Ly,dtype:"bool"}),kw={kernelName:s.Greater,backendName:"webgl",kernelFunc:ww},Cw=rv({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:zy}),Ew={kernelName:s.GreaterEqual,backendName:"webgl",kernelFunc:Cw};const Sw={kernelName:s.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Zx(r,!0,n)}},Tw=nv({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Nw={kernelName:s.IsFinite,backendName:"webgl",kernelFunc:Tw},Bw=nv({opSnippet:"return float(isinf(x));",dtype:"bool"}),Rw={kernelName:s.IsInf,backendName:"webgl",kernelFunc:Bw},Dw=nv({opSnippet:"return float(isnan(x));",dtype:"bool"}),Fw={kernelName:s.IsNan,backendName:"webgl",kernelFunc:Dw},$w=rv({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Py,dtype:"bool"}),_w={kernelName:s.Less,backendName:"webgl",kernelFunc:$w},Mw=rv({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Gy,dtype:"bool"}),Ow={kernelName:s.LessEqual,backendName:"webgl",kernelFunc:Mw};const Qw={kernelName:s.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Uy(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Lw=nv({opSnippet:tv+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Wy}),zw={kernelName:s.Log,backendName:"webgl",kernelFunc:Lw},Pw=nv({opSnippet:tv+"\n  return log(1.0 + x);\n"}),Gw={kernelName:s.Log1p,backendName:"webgl",kernelFunc:Pw},Uw=rv({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ww={kernelName:s.LogicalAnd,backendName:"webgl",kernelFunc:Uw},Vw=nv({opSnippet:"return float(!(x >= 1.0));"}),qw={kernelName:s.LogicalNot,backendName:"webgl",kernelFunc:Vw},Hw=rv({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Yw={kernelName:s.LogicalOr,backendName:"webgl",kernelFunc:Hw};class jw{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Kw{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Jw={kernelName:s.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=r,c=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Kw(a.shape,i,o,l,u):new jw(a.shape,i,o,l,u);return n.runWebGLProgram(c,[a],a.dtype)}};class Xw{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Zw={kernelName:s.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,d=new Xw(s.shape,o,l,u,c);return n.runWebGLProgram(d,[s,a,i],s.dtype)}};function ek(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=r,l=a.shape.length,u=s.util.parseAxisParam(i,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l),h=null!=d,p=n.shouldExecuteOnCPU([a]);let A=a;if(h){if(p){const e=n.texData.get(A.dataId).values,t=new Array(l);for(let n=0;n<t.length;n++)t[n]=a.shape[d[n]];const r=bb(e,a.shape,a.dtype,d,t);A=n.makeTensorInfo(t,a.dtype);n.texData.get(A.dataId).values=r}else A=bv(a,d,n);c=s.backend_util.getInnerMostAxes(c.length,l)}s.backend_util.assertAxesAreInnerMostDims("max",c,l);const[f,g]=s.backend_util.computeOutAndReduceShapes(A.shape,c);let m,y=f;if(o&&(y=s.backend_util.expandShapeToKeepDim(f,u)),p){const e=n.texData.get(A.dataId).values,t=Vy(e,s.util.sizeFromShape(g),y,a.dtype);m=n.makeTensorInfo(y,a.dtype);n.texData.get(m.dataId).values=t}else m=function(e,t,n,r){const a=s.util.sizeFromShape(t),i=hv({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/a,a]},backend:r}),o=gv(i,e.dtype,"max",r),l=hv({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(A,g,y,n);return h&&n.disposeIntermediateTensorInfo(A),m}const tk={kernelName:s.Max,backendName:"webgl",kernelFunc:ek},nk=rv({opSnippet:Pb+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ub+"\n  return result;\n",cpuKernelImpl:qy}),rk={kernelName:s.Maximum,backendName:"webgl",kernelFunc:nk};const sk={kernelName:s.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;_m(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=s.backend_util.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&s.util.arraysEqual(c.inShape,c.outShape))return Vb({inputs:{x:a},backend:n});const d=new rI(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};const ak={kernelName:s.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,d=s.backend_util.computePool3DInfo(a.shape,i,o,[1,1,1],l,c,u),h=new sI(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};class ik{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ok{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const lk={kernelName:s.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=s.backend_util.computePool3DInfo(o.shape,l,u,[1,1,1],c,d),p=new sI(h,"max",!0),A=n.runWebGLProgram(p,[o],o.dtype),f=new ok(h),g=n.runWebGLProgram(f,[a,A],o.dtype);return n.disposeIntermediateTensorInfo(A),g}};const uk={kernelName:s.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:o}=t,l=i;_m([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:d,dimRoundingMode:h}=r,p=s.backend_util.computePool2DInfo(l.shape,u,c,1,d,h),A=new rI(p,"max",!0),f=n.runWebGLProgram(A,[l],l.dtype),g=new ik(p),m=n.runWebGLProgram(g,[a,f],l.dtype);return n.disposeIntermediateTensorInfo(f),m}};const ck={kernelName:s.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{filterSize:i,strides:o,pad:l,includeBatchInIndex:u}=n,c=r;s.util.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const d=[1,1];s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const h=s.backend_util.computePool2DInfo(a.shape,i,o,d,l),[p,A]=function(e,t,n,r){let s=new rI(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new rI(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(a,u,h,c);return[p,A]}};const dk={kernelName:s.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{keepDims:i,axis:o}=n,l=r,u=a.shape.length,c=s.util.parseAxisParam(o,a.shape);let d=c;const h=s.backend_util.getAxesPermutation(d,u),p=null!=h,A=l.shouldExecuteOnCPU([a]),f=[];let g=a;if(p){if(A){const e=l.texData.get(g.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=a.shape[h[r]];const n=bb(e,a.shape,a.dtype,h,t);g=l.makeTensorInfo(t,a.dtype);l.texData.get(g.dataId).values=n}else g=bv(a,h,l);f.push(g),d=s.backend_util.getInnerMostAxes(d.length,u)}s.backend_util.assertAxesAreInnerMostDims("sum",d,u);const[m,y]=s.backend_util.computeOutAndReduceShapes(g.shape,d);let b=m;i&&(b=s.backend_util.expandShapeToKeepDim(m,c));const v=function(e,t,n,r){const a=s.util.sizeFromShape(t),i=hv({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/a,a]},backend:r}),o=gv(i,"float32","mean",r),l=hv({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(g,y,b,l);for(const s of f)l.disposeIntermediateTensorInfo(s);return v}};const hk={kernelName:s.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=s.util.parseAxisParam(i,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l);let h=a;null!=d&&(h=xv({inputs:{x:a},backend:n,attrs:{perm:d}}),c=s.backend_util.getInnerMostAxes(c.length,a.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",c,l);const[p,A]=s.backend_util.computeOutAndReduceShapes(h.shape,c),f=hv({inputs:{x:h},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(A)]}}),g=gv(f,f.dtype,"min",n);let m;if(o){m=hv({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,u)}})}else m=hv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),m}},pk=rv({opSnippet:Pb+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ub+"\n  return result;\n",cpuKernelImpl:Hy}),Ak={kernelName:s.Minimum,backendName:"webgl",kernelFunc:pk};class fk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=ey(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class gk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=ey(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=xb("rc",r),l=xb("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const mk={kernelName:s.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{paddings:i,mode:o}=r,l=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gk(a.shape,i,o):new fk(a.shape,i,o);return n.runWebGLProgram(l,[a],a.dtype)}},yk=rv({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Ub+"\n  return result;\n"}),bk={kernelName:s.Mod,backendName:"webgl",kernelFunc:yk};class vk{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Ik=rv({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),xk={kernelName:s.RealDiv,backendName:"webgl",kernelFunc:Ik},wk="return a - b;",kk=rv({opSnippet:wk,packedOpSnippet:wk,supportsComplex:!0,cpuKernelImpl:gb}),Ck={kernelName:s.Sub,backendName:"webgl",kernelFunc:kk};function Ek(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,o=s.util.parseAxisParam([i],a.shape),l=ek({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=s.backend_util.expandShapeToKeepDim(l.shape,o),c=hv({inputs:{x:l},backend:n,attrs:{shape:u}}),d=kk({inputs:{a:a,b:c},backend:n}),h=Vx({inputs:{x:d},backend:n}),p=vv({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),A=hv({inputs:{x:p},backend:n,attrs:{shape:u}}),f=Ik({inputs:{a:h,b:A},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(A),f}const Sk={kernelName:s.Softmax,backendName:"webgl",kernelFunc:Ek};const Tk={kernelName:s.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:Ek({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new vk(u,c,a),h=[[i]],p=n.runWebGLProgram(d,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),p}},Nk=Bb+"\n  return -x;\n";const Bk={kernelName:s.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=jy(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let a;return a=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _b(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Nb(r.shape,Nk),n.runWebGLProgram(a,[r],r.dtype)}},Rk=s.kernel_impls.nonMaxSuppressionV3Impl;const Dk={kernelName:s.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=r,c=n.readSync(a.dataId),d=n.readSync(i.dataId),{selectedIndices:h}=Rk(c,d,o,l,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Fk=s.kernel_impls.nonMaxSuppressionV4Impl;const $k={kernelName:s.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:c}=r,d=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:p,validOutputs:A}=Fk(d,h,o,l,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([A]))]}},_k=s.kernel_impls.nonMaxSuppressionV5Impl;const Mk={kernelName:s.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=r,d=n.readSync(a.dataId),h=n.readSync(i.dataId),p=o,A=l,f=u,g=c,{selectedIndices:m,selectedScores:y}=_k(d,h,p,A,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Ok{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Qk={kernelName:s.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:o,onValue:l,offValue:u}=r,c=s.util.sizeFromShape(a.shape),d=new Ok(c,o,l,u),h=hv({inputs:{x:a},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(d,[h],i);n.disposeIntermediateTensorInfo(h);const A=hv({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,o]}});return n.disposeIntermediateTensorInfo(p),A}};function Lk(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=EI({inputs:{input:r},backend:n}),t=Lk({inputs:{x:e},backend:n}),s=PI({inputs:{input:r},backend:n}),a=Lk({inputs:{x:s},backend:n}),i=Hb({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return nw({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const zk={kernelName:s.ZerosLike,backendName:"webgl",kernelFunc:Lk};const Pk={kernelName:s.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=EI({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=PI({inputs:{input:s},backend:r}),i=Lk({inputs:{x:a},backend:r}),o=Hb({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return nw({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const Gk={kernelName:s.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Hx({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=WI({inputs:t.map((e=>{const t=Hx({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t})),backend:n,attrs:{axis:a}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Uk{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=ey(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Wk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=ey(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=xb("rc",r),l=xb("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let A=0,f=1===r?2:4;A<f;A++)p+=`\n        ${d[A]}\n        if (${h}) {\n          result[${A}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${A}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Vk=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:o}=r;if(0===s.util.sizeFromShape(a.shape)){const e=i.map(((e,t)=>e[0]+a.shape[t]+e[1]));return nw({backend:n,attrs:{shape:e,value:o,dtype:a.dtype}})}const l=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wk(a.shape,i,o):new Uk(a.shape,i,o),u=[[o]];return n.runWebGLProgram(l,[a],a.dtype,u)},qk={kernelName:s.PadV2,backendName:"webgl",kernelFunc:Vk},Hk=rv({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Ub+"\n  return result;\n"}),Yk={kernelName:s.Pow,backendName:"webgl",kernelFunc:Hk};const jk={kernelName:s.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=[],c=s.util.parseAxisParam(i,a.shape);let d=c;const h=s.backend_util.getAxesPermutation(d,l);let p,A=a;if(null!=h&&(A=xv({inputs:{x:a},backend:n,attrs:{perm:h}}),d=s.backend_util.getInnerMostAxes(d.length,l),u.push(A)),s.backend_util.assertAxesAreInnerMostDims("prod",d,l),n.shouldExecuteOnCPU([A])){const e=n.texData.get(A.dataId).values,{outVals:t,outShape:r,outDtype:s}=Jy(A.shape,A.dtype,e,d);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=s.backend_util.computeOutAndReduceShapes(A.shape,d),r=s.util.sizeFromShape(t),i=hv({inputs:{x:A},backend:n,attrs:{shape:[-1,r]}}),o=gv(i,(0,s.sumOutType)(a.dtype),"prod",n);p=hv({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(p);const e=s.backend_util.expandShapeToKeepDim(p.shape,c);p=hv({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const Kk={kernelName:s.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),d=n.readSync(i.dataId),[h,p,A]=Xy(l,u,c,a.shape,a.dtype,d,i.shape,o),f=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(A,a.dtype,p);return f.concat([g])}};const Jk={kernelName:s.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=Zy(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const Xk={kernelName:s.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),d=n.readSync(i.dataId),h=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[A,f]=eb(u,s.shape,c,a.shape,a.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(A,a.dtype,f)}},Zk=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=tb(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},eC={kernelName:s.Range,backendName:"webgl",kernelFunc:Zk},tC=nv({opSnippet:"return 1.0 / x;"}),nC={kernelName:s.Reciprocal,backendName:"webgl",kernelFunc:tC},rC=nv({opSnippet:Bb+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),sC={kernelName:s.Relu,backendName:"webgl",kernelFunc:rC},aC=nv({opSnippet:Bb+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iC={kernelName:s.Relu6,backendName:"webgl",kernelFunc:aC};class oC{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class lC{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const uC={kernelName:s.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lC(a.shape,u,c,i,o):new oC(a.shape,u,c,i,o);return n.runWebGLProgram(d,[a],"float32")}};class cC{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,A=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${A});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const dC={kernelName:s.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new cC(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class hC{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class pC{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const AC={kernelName:s.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pC(a.shape,u,c,i,o):new hC(a.shape,u,c,i,o);return n.runWebGLProgram(d,[a],a.dtype)}};class fC{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,A=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${A});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const gC={kernelName:s.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new fC(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class mC{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=ey(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class yC{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=xb("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ey(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const bC={kernelName:s.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,o=a.shape.length,l=s.util.parseAxisParam(i,a.shape);if(0===o)return Vb({inputs:{x:a},backend:n});const u=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yC(a.shape,l):new mC(a.shape,l);return n.runWebGLProgram(u,[a],a.dtype)}};class vC{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const IC={kernelName:s.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,{radians:i,fillValue:o,center:l}=n,u=r,c=new vC(a.shape,o),[d,h]=s.backend_util.getImageCenter(l,a.shape[1],a.shape[2]),p=[[d,h,Math.sin(i),Math.cos(i)]];return u.runWebGLProgram(c,[a],a.dtype,p)}},xC=nv({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),wC={kernelName:s.Round,backendName:"webgl",kernelFunc:xC},kC=nv({opSnippet:"return inversesqrt(x);",cpuKernelImpl:nb}),CC={kernelName:s.Rsqrt,backendName:"webgl",kernelFunc:kC};class EC{constructor(e,t,n,r,s,a){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=ey(s.length),l=ey(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let p="";i&&(p="coords[0], coords[1]");const A=`getDefaultValue(${p})`,f=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${f};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${A}, sum, float(found)));\n        }\n      `}}class SC{constructor(e,t,n,r,s,a){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const o=ey(s.length),l=ey(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let p="";i&&(p="coords[0], coords[1]");const A=`getDefaultValue(${p})`,f=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${c});\n              flattenedIndex += index.xz * ${f};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${A}, sum, found));\n        }\n      `}}const TC={kernelName:s.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=s.backend_util.calculateShapes(i,a,o),p=[h/c,c];if(0===h)return n.makeTensorInfo(o,a.dtype);const A=hv({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),f=hv({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=(0,s.env)().getBool("WEBGL_PACK")?new SC(u,l,A.shape.length,f.shape.length,d,p):new EC(u,l,A.shape.length,f.shape.length,d,p);const y=n.runWebGLProgram(m,[f,A,g],f.dtype),b=hv({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),b}};class NC{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===(0,s.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":a,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const BC={kernelName:s.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new NC(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class RC{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=ey(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const DC={kernelName:s.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,o=new RC(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,i],(0,s.upcastType)(a.dtype,i.dtype))}},FC=nv({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.backend_util.SELU_SCALEALPHA};\n  float scale = ${s.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),$C={kernelName:s.Selu,backendName:"webgl",kernelFunc:FC},_C=nv({opSnippet:tv+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:sb}),MC={kernelName:s.Sigmoid,backendName:"webgl",kernelFunc:_C},OC=nv({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),QC={kernelName:s.Sign,backendName:"webgl",kernelFunc:OC},LC=nv({opSnippet:tv+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Ub}\n  return result;\n`}),zC={kernelName:s.Sin,backendName:"webgl",kernelFunc:LC},PC=nv({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),GC={kernelName:s.Sinh,backendName:"webgl",kernelFunc:PC},UC=nv({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),WC={kernelName:s.Softplus,backendName:"webgl",kernelFunc:UC},VC={kernelName:s.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:o}=r;s.util.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let s=1+i.length;s<a.shape.length;++s)u.push([0,0]);const c=[],d=Vk({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=s.backend_util.getReshaped(d.shape,i,l,!1),p=s.backend_util.getPermuted(h.length,i.length,!1),A=s.backend_util.getReshapedPermuted(d.shape,i,l,!1),f=hv({inputs:{x:d},backend:n,attrs:{shape:h}}),g=xv({inputs:{x:f},backend:n,attrs:{perm:p}}),m=hv({inputs:{x:g},backend:n,attrs:{shape:A}});return c.push(d),c.push(f),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const qC={kernelName:s.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[d,h,p,A,f]=ob(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([A.length],"bool",new Uint8Array(A.map((e=>Number(e))))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}};const HC={kernelName:s.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,d]=lb(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}};const YC={kernelName:s.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=ub(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const jC={kernelName:s.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=ub(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const KC={kernelName:s.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=s.backend_util.calculateShapes(i,a,l),A=!1;if("string"===i.dtype){const e=n.bufferSync(a),t=n.bufferSync(i),r=s.util.decodeString(n.readSync(o.dataId)[0]),f=rb(e,t,l,p,d,c,u,h,r,A);return n.makeTensorInfo(l,f.dtype,f.values)}const f=new EC(c,u,a.shape.length,i.shape.length,h,[p,1],A),g=n.runWebGLProgram(f,[i,a,o],i.dtype),m=hv({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(g),m}};const JC={kernelName:s.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=r,l=s.util.parseAxisParam(o,a.shape)[0],u=s.backend_util.prepareSplitSize(a,i,l),c=a.shape.length,d=new Array(c).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[l]=e;const r=yI({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[l]+=e,r}))}},XC="return sqrt(x);",ZC=nv({opSnippet:XC,packedOpSnippet:XC,cpuKernelImpl:cb}),eE={kernelName:s.Sqrt,backendName:"webgl",kernelFunc:ZC},tE=nv({opSnippet:"return x * x;"}),nE={kernelName:s.Square,backendName:"webgl",kernelFunc:tE},rE="return (a - b) * (a - b);",sE=rv({opSnippet:rE,packedOpSnippet:rE}),aE={kernelName:s.SquaredDifference,backendName:"webgl",kernelFunc:sE};const iE={kernelName:s.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const i=n.readSync(a.dataId),o=s.backend_util.fromUint8ToStringArray(i),l=db(o,"string",r);return n.makeTensorInfo(a.shape,"string",l)}};const oE={kernelName:s.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,a=Bb+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new Nb(s.shape,a);return r.runWebGLProgram(i,[s],s.dtype)}};class lE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=ey(n.length),a=ey(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const uE={kernelName:s.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:A,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:v,strides:I}=s.slice_util.sliceInfo(a.shape,i,o,l,u,c,d,h,p);let x;if(g)x=hv({inputs:{x:a},backend:n,attrs:{shape:f}});else if(m||y){s.util.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=s.slice_util.computeOutShape(b,v,I),t=yI({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});x=hv({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=(0,s.buffer)(a.shape,a.dtype,e),r=hb(A,t,I,b);x=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new lE(b,I,A);x=n.runWebGLProgram(e,[a],a.dtype)}}const w=hv({inputs:{x:x},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(x),w}};const cE={kernelName:s.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[A,f]=pb(h,p,s,a,i,o,l,u);return[n.makeTensorInfo([A.length],"string",A),n.makeTensorInfo(d.shape,"int32",f)]}};const dE={kernelName:s.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,d]=Ab(o,l,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const hE={kernelName:s.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=fb(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},pE=nv({opSnippet:"return tan(x);"}),AE={kernelName:s.Tan,backendName:"webgl",kernelFunc:pE},fE=nv({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),gE={kernelName:s.Tanh,backendName:"webgl",kernelFunc:fE};const mE={kernelName:s.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:i,updates:o}=t,{}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=s.backend_util.calculateShapes(o,i,a.shape),p=[h/c,c];if(0===h)return n.makeTensorInfo(a.shape,i.dtype);const A=hv({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),f=hv({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),g=hv({inputs:{x:a},backend:n,attrs:{shape:p}}),m=new EC(u,l,A.shape.length,f.shape.length,d,p,!1,!0),y=n.runWebGLProgram(m,[f,A,g],g.dtype),b=hv({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),b}};class yE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=ey(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function bE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>s.util.decodeString(e))):e,r=(0,s.buffer)(a.shape,a.dtype,t),o=mb(r,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new yE(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const vE={kernelName:s.Tile,backendName:"webgl",kernelFunc:bE};class IE{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class xE{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function wE(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function kE(e){let t=1;for(;t<e;)t*=2;return t}const CE={kernelName:s.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:o}=r,l=(0,s.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,s.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([a])||d<l||i>u){const e=n.readSync(a.dataId),[t,r]=yb(e,c,a.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[a,nw({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,A=p?n.unpackTensor(a):a,f=s.util.sizeFromShape(c)/d,g=hv({inputs:{x:A},attrs:{shape:[f,d]},backend:n});p&&wE(n,A);const m=kE(i),y=kE(d);let b=null;const v=()=>null===b?[g,g]:[g,b],I=(e,t,r)=>{const s=v(),a=new IE(r),i=[[d],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),wE(n,o)};for(let s=1;s<m;s*=2){const e=2*s;for(let t=s;t>=1;t/=2)I(e,t,[f,y])}for(let s=y;s>m;s/=2){const e=v(),t=new xE([f,s/2]),r=[[d],[null===b?1:0],[m]],a=b;b=n.runWebGLProgram(t,e,"int32",r),wE(n,a);const i=m/2,o=2*i;for(let n=i;n>=1;n/=2)I(o,n,b.shape)}let x=b;b=yI({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,i]}}),wE(n,x);let w=Iw({inputs:{x:g,indices:b},backend:n,attrs:{axis:1,batchDims:1}});wE(n,g);const k=c.slice(0,-1);k.push(i),x=b,b=hv({inputs:{x:b},attrs:{shape:k},backend:n}),wE(n,x);const C=w;return w=hv({inputs:{x:w},attrs:{shape:k},backend:n}),wE(n,C),[w,b]}};class EE{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const SE={kernelName:s.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,d,h,p]=s.shape,[A,f]=null!=u?u:[d,h],g=new EE(d,h,i,o,l,[c,A,f,p]);return n.runWebGLProgram(g,[s,a],"float32")}};const TE={kernelName:s.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;_m(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=vb(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const NE={kernelName:s.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==a&&(u[c++]=i.shape[f]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const A=new Array(l);for(let f=0;f<A.length;f++){h[a]=f;const e=yI({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),t=hv({inputs:{x:e},backend:n,attrs:{shape:u}});A[f]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}};class BE{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const RE={kernelName:s.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:o}=r,l=a.shape.length,u=[];let c=0;const d=s.backend_util.getAxesPermutation([c],l);let h=a;null!=d&&(h=xv({inputs:{x:a},backend:n,attrs:{perm:d}}),u.push(h),c=s.backend_util.getInnerMostAxes(1,l)[0]);const p=s.backend_util.segment_util.computeOutShape(h.shape,c,o),A=s.util.sizeFromShape([h.shape[c]]),f=hv({inputs:{x:h},backend:n,attrs:{shape:[-1,A]}});u.push(f);const g=(0,s.sumOutType)(a.dtype),m=(e,t,r,a,i)=>{const o=e.shape[0],l=e.shape[1],c=s.backend_util.segment_util.segOpComputeOptimalWindowSize(l,i),d=new BE({windowSize:c,inSize:l,batchSize:o,numSegments:i},t),h=n.compileAndRun(d,[e,r],a);if(u.push(h),h.shape[1]===i)return h;const p=Zk({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),A=bE({inputs:{x:p},backend:n,attrs:{reps:[l/c]}});u.push(p),u.push(A);return m(h,t,A,a,i)},y=hv({inputs:{x:m(f,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:p}});let b=y;if(null!=d){u.push(y);const e=s.backend_util.getUndoAxesPermutation(d);b=xv({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},DE=[Cv,Sv,Nv,Rv,$v,Ov,Qv,Lv,Vv,qv,Yv,Kv,Xv,eI,nI,aI,iI,uI,cI,dI,AI,vI,II,xI,wI,TI,RI,$I,Yb,OI,VI,ZI,sx,ix,ox,lx,ux,dx,px,fx,Ix,xx,wx,Cx,Tx,Rx,Dx,$x,Mx,Ox,Lx,zx,Gx,Wx,qx,Yx,Jx,ew,rw,aw,lw,cw,pw,gw,mw,bw,xw,kw,Ew,qb,Sw,GI,Nw,Rw,Fw,Jb,_w,Ow,Qw,zw,Gw,Ww,qw,Yw,Jw,Zw,tk,rk,sk,ak,lk,uk,ck,dk,hk,Ak,mk,bk,Tk,dv,Bk,Dk,$k,Mk,CI,Qk,Pk,Gk,qk,Yk,ev,jk,Kk,Jk,Xk,eC,SI,xk,nC,sC,iC,pv,uC,dC,AC,gC,bC,IC,wC,CC,TC,BC,DC,$C,MC,QC,zC,GC,bI,Sk,WC,VC,qC,HC,YC,jC,KC,JC,eE,nE,aE,iE,oE,uE,cE,dE,hE,Ck,Iv,AE,gE,mE,vE,CE,SE,wv,TE,NE,RE,zk];for(const n of DE)(0,s.registerKernel)(n);s.version_core,Pu.version_converter;var FE=n(7075);function $E(){return $E=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},$E.apply(null,arguments)}function _E(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ME(e,t)}function ME(e,t){return ME=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ME(e,t)}var OE=e=>"string"===typeof e&&e.constructor===String,QE=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t=e,"Promise"===Object.prototype.toString.call(t).slice(8,-1)?e:new Promise((t=>{e(),setTimeout(t,n)}))};var LE="WJ3NAvwFY9",zE="tR2-0dd-e1",PE="ZgIIHVSSYI",GE="kAA8SjbHe2",UE="OueN4AU4CJ";!function(e,t){void 0===t&&(t={});var n=t.insertAt;if("undefined"!==typeof document){var r=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css","top"===n&&r.firstChild?r.insertBefore(s,r.firstChild):r.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e))}}(".WJ3NAvwFY9,.ZgIIHVSSYI,.kAA8SjbHe2,.tR2-0dd-e1{height:100%;left:0;position:absolute;top:0;width:100%;z-index:1}.ZgIIHVSSYI{-ms-flex-pack:center;-ms-flex-align:center;-webkit-align-items:center;align-items:center;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-justify-content:center;justify-content:center}.WJ3NAvwFY9,.tR2-0dd-e1{display:block}.tR2-0dd-e1.OueN4AU4CJ{display:none}.ZgIIHVSSYI,.kAA8SjbHe2{-webkit-tap-highlight-color:rgba(255,0,0,0);cursor:pointer;opacity:.7}.OueN4AU4CJ.ZgIIHVSSYI,.OueN4AU4CJ.kAA8SjbHe2{display:none}.ZgIIHVSSYI{z-index:10}.ZgIIHVSSYI>svg{fill:#fff;height:12vw;max-height:60px;max-width:60px;width:12vw}.kAA8SjbHe2{-ms-flex-pack:end;-ms-flex-align:end;-webkit-align-items:flex-end;align-items:flex-end;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-justify-content:flex-end;justify-content:flex-end;z-index:10}.kAA8SjbHe2>svg{fill:#fff;height:9vw;margin:0 15px 15px 0;max-height:40px;max-width:40px;width:9vw}");var WE=function(){function e(e,t,n,r){var s=void 0===n?{}:n,a=s.canvas,i=void 0===a?"":a,o=s.poster,l=void 0===o?"":o,u=s.autoplay,c=void 0!==u&&u,d=s.autoSetWrapperSize,h=void 0!==d&&d,p=s.loop,A=void 0!==p&&p,f=s.control,g=void 0===f||f,m=s.decodeFirstFrame,y=void 0===m||m,b=s.picMode,v=void 0!==b&&b,I=s.progressive,x=void 0===I||I,w=s.chunkSize,k=void 0===w?1048576:w,C=s.hooks,E=void 0===C?{}:C;void 0===r&&(r={}),this.options=$E({videoUrl:t,canvas:i,poster:l,picMode:v,autoplay:c,autoSetWrapperSize:h,loop:A,control:g,decodeFirstFrame:y,progressive:x,chunkSize:k,hooks:$E({play:function(){},pause:function(){},stop:function(){},load:function(){}},E)},r),this.options.needPlayButton=this.options.control&&!this.options.picMode,this.player=null,this.els={wrapper:OE(e)?document.querySelector(e):e,canvas:null,playButton:document.createElement("div"),unmuteButton:null,poster:null},"static"===window.getComputedStyle(this.els.wrapper).getPropertyValue("position")&&(this.els.wrapper.style.position="relative"),this.els.wrapper.clientRect=this.els.wrapper.getBoundingClientRect(),this.initCanvas(),this.initPlayButton(),this.initPlayer()}var t=e.prototype;return t.initCanvas=function(){this.options.canvas?this.els.canvas=OE(this.options.canvas)?document.querySelector(this.options.canvas):this.options.canvas:(this.els.canvas=document.createElement("canvas"),this.els.canvas.classList.add(LE),this.els.wrapper.appendChild(this.els.canvas))},t.initPlayer=function(){var e=this;this.options=$E(this.options,{canvas:this.els.canvas});var t=$E({},this.options,{autoplay:!1});if(this.player=new uS(this.options.videoUrl,t,{play:function(){e.options.needPlayButton&&e.els.playButton.classList.add(UE),e.els.poster&&e.els.poster.classList.add(UE),e.options.hooks.play()},pause:function(){e.options.needPlayButton&&e.els.playButton.classList.remove(UE),e.options.hooks.pause()},stop:function(){e.els.poster&&e.els.poster.classList.remove(UE),e.options.hooks.stop()},load:function(){e.options.autoplay&&e.play(),e._autoSetWrapperSize(),e.options.hooks.load()}}),this._copyPlayerFuncs(),this.els.wrapper.playerInstance=this.player,!this.options.poster||this.options.autoplay||this.player.options.streaming||(this.options.decodeFirstFrame=!1,this.els.poster=new Image,this.els.poster.src=this.options.poster,this.els.poster.classList.add(zE),this.els.wrapper.appendChild(this.els.poster)),this.player.options.streaming||this.els.wrapper.addEventListener("click",this.onClick.bind(this)),(this.options.autoplay||this.player.options.streaming)&&this.els.playButton.classList.add(UE),this.player.audioOut&&!this.player.audioOut.unlocked){var n=this.els.wrapper;(this.options.autoplay||this.player.options.streaming)&&(this.els.unmuteButton=document.createElement("div"),this.els.unmuteButton.innerHTML='\n<svg viewBox="0 0 64 64">\n  <path d="M58.3,45.5l-4.8-4.3c1.4-2.9,2.2-6.2,2.2-9.6c0-11.1-8.2-20.3-18.9-21.9V3.3C50.9,4.9,62,16.9,62,31.6 C62,36.6,60.6,41.4,58.3,45.5L58.3,45.5z M30.4,5.6v15.2l-8.3-7.3L30.4,5.6L30.4,5.6z M36.7,19.9c4.6,1.9,7.9,6.4,7.9,11.7 c0,0.6-0.1,1.1-0.1,1.7l-7.8-6.9V19.9L36.7,19.9z M57.5,60.7l-7.1-6.3c-3.9,2.9-8.6,4.8-13.7,5.4v-6.4c3.2-0.5,6.2-1.7,8.8-3.4 l-8.1-7.2c-0.2,0.1-0.5,0.3-0.7,0.4v-1l-6.3-5.6v20.2L15.4,42.6H2V20.5h10.2l-9.7-8.6l4.2-4.7L61.7,56L57.5,60.7L57.5,60.7z"/>\n</svg>\n',this.els.unmuteButton.classList.add(GE),this.els.wrapper.appendChild(this.els.unmuteButton),n=this.els.unmuteButton),this.unlockAudioBound=this.onUnlockAudio.bind(this,n),n.addEventListener("touchstart",this.unlockAudioBound,!1),n.addEventListener("click",this.unlockAudioBound,!0)}},t.initPlayButton=function(){this.options.needPlayButton&&(this.els.playButton.classList.add(PE),this.els.playButton.innerHTML='\n<svg viewBox="0 0 64 64">\n  <path d="M26,45.5L44,32L26,18.6v27V45.5L26,45.5z M32,2C15.4,2,2,15.5,2,32c0,16.6,13.4,30,30,30c16.6,0,30-13.4,30-30 C62,15.4,48.5,2,32,2L32,2z M32,56c-9.7,0-18.5-5.9-22.2-14.8C6.1,32.2,8.1,21.9,15,15c6.9-6.9,17.2-8.9,26.2-5.2 C50.1,13.5,56,22.3,56,32C56,45.3,45.2,56,32,56L32,56z"/>\n</svg>\n',this.els.wrapper.appendChild(this.els.playButton))},t._autoSetWrapperSize=function(){var e=this;if(!this.options.autoSetWrapperSize)return Promise.resolve();var t=this.player.video.destination;return t?Promise.resolve().then((function(){return QE((function(){e.els.wrapper.style.width=t.width+"px",e.els.wrapper.style.height=t.height+"px"}))})):Promise.resolve()},t.onUnlockAudio=function(e,t){var n=this;this.els.unmuteButton&&(t.preventDefault(),t.stopPropagation()),this.player.audioOut.unlock((function(){n.els.unmuteButton&&n.els.unmuteButton.classList.add(UE),e.removeEventListener("touchstart",n.unlockAudioBound),e.removeEventListener("click",n.unlockAudioBound)}))},t.onClick=function(){this.options.control&&(this.player.isPlaying?this.pause():this.play())},t._copyPlayerFuncs=function(){var e=this;this.play=function(){return e.player.play()},this.pause=function(){return e.player.pause()},this.stop=function(){return e.player.stop()},this.destroy=function(){e.player.destroy(),e.els.wrapper.innerHTML="",e.els.wrapper.playerInstance=null}},e}(),VE=function(){return window.performance?window.performance.now()/1e3:Date.now()/1e3},qE=function(e,t){if(e.fill)e.fill(t);else for(var n=0;n<e.length;n++)e[n]=t},HE=function(e){for(var t=window.atob(e),n=t.length,r=new Uint8Array(n),s=0;s<n;s++)r[s]=t.charCodeAt(s);return r.buffer},YE=function(){function e(e,t){this.url=e,this.destination=null,this.request=null,this.streaming=!1,this.completed=!1,this.established=!1,this.progress=0,this.onEstablishedCallback=t.onSourceEstablished,this.onCompletedCallback=t.onSourceCompleted,t.hookOnEstablished&&(this.hookOnEstablished=t.hookOnEstablished)}var t=e.prototype;return t.connect=function(e){this.destination=e},t.start=function(){this.request=new XMLHttpRequest,this.request.onreadystatechange=function(){this.request.readyState===this.request.DONE&&200===this.request.status&&this.onLoad(this.request.response)}.bind(this),this.request.onprogress=this.onProgress.bind(this),this.request.open("GET",this.url),this.request.responseType="arraybuffer",this.request.send()},t.resume=function(){},t.destroy=function(){this.request.abort()},t.onProgress=function(e){this.progress=e.loaded/e.total},t.onLoad=function(e){this.established=!0,this.completed=!0,this.progress=1,this.hookOnEstablished&&this.hookOnEstablished(),this.onEstablishedCallback&&this.onEstablishedCallback(this),this.onCompletedCallback&&this.onCompletedCallback(this),this.destination&&this.destination.write(e)},e}(),jE=function(){function e(e,t){this.url=e,this.destination=null,this.request=null,this.streaming=!1,this.completed=!1,this.established=!1,this.progress=0,this.fileSize=0,this.loadedSize=0,this.chunkSize=t.chunkSize||1048576,this.isLoading=!1,this.loadStartTime=0,this.throttled=!1!==t.throttled,this.aborted=!1,this.onEstablishedCallback=t.onSourceEstablished,this.onCompletedCallback=t.onSourceCompleted,t.hookOnEstablished&&(this.hookOnEstablished=t.hookOnEstablished)}var t=e.prototype;return t.connect=function(e){this.destination=e},t.start=function(){var e=this;this.request=new XMLHttpRequest,this.request.onreadystatechange=function(){e.request.readyState===e.request.DONE&&(e.fileSize=parseInt(e.request.getResponseHeader("Content-Length"),10),e.loadNextChunk())},this.request.onprogress=this.onProgress.bind(this),this.request.open("HEAD",this.url),this.request.send()},t.resume=function(e){!this.isLoading&&this.throttled&&(8*this.loadTime+2>e&&this.loadNextChunk())},t.destroy=function(){this.request.abort(),this.aborted=!0},t.loadNextChunk=function(){var e=this,t=this.loadedSize,n=Math.min(this.loadedSize+this.chunkSize-1,this.fileSize-1);if(t>=this.fileSize||this.aborted)return this.completed=!0,void(this.onCompletedCallback&&this.onCompletedCallback(this));this.isLoading=!0,this.loadStartTime=VE(),this.request=new XMLHttpRequest,this.request.onreadystatechange=function(){e.request.readyState===e.request.DONE&&e.request.status>=200&&e.request.status<300?e.onChunkLoad(e.request.response):e.request.readyState===e.request.DONE&&e.loadFails++<3&&e.loadNextChunk()},0===t&&(this.request.onprogress=this.onProgress.bind(this)),this.request.open("GET",this.url+"?"+t+"-"+n),this.request.setRequestHeader("Range","bytes="+t+"-"+n),this.request.responseType="arraybuffer",this.request.send()},t.onProgress=function(e){this.progress=e.loaded/e.total},t.onChunkLoad=function(e){var t=!this.established;this.established=!0,this.progress=1,this.loadedSize+=e.byteLength,this.loadFails=0,this.isLoading=!1,t&&this.hookOnEstablished&&this.hookOnEstablished(),t&&this.onEstablishedCallback&&this.onEstablishedCallback(this),this.destination&&this.destination.write(e),this.loadTime=VE()-this.loadStartTime,this.throttled||this.loadNextChunk()},e}(),KE=function(){function e(e,t){this.url=e,this.options=t,this.socket=null,this.streaming=!0,this.callbacks={connect:[],data:[]},this.destination=null,this.reconnectInterval=void 0!==t.reconnectInterval?t.reconnectInterval:5,this.shouldAttemptReconnect=!!this.reconnectInterval,this.completed=!1,this.established=!1,this.progress=0,this.reconnectTimeoutId=0,this.onEstablishedCallback=t.onSourceEstablished,this.onCompletedCallback=t.onSourceCompleted,t.hookOnEstablished&&(this.hookOnEstablished=t.hookOnEstablished)}var t=e.prototype;return t.connect=function(e){this.destination=e},t.destroy=function(){clearTimeout(this.reconnectTimeoutId),this.shouldAttemptReconnect=!1,this.socket.close()},t.start=function(){this.shouldAttemptReconnect=!!this.reconnectInterval,this.progress=0,this.established=!1,this.options.protocols?this.socket=new WebSocket(this.url,this.options.protocols):this.socket=new WebSocket(this.url),this.socket.binaryType="arraybuffer",this.socket.onmessage=this.onMessage.bind(this),this.socket.onopen=this.onOpen.bind(this),this.socket.onerror=this.onClose.bind(this),this.socket.onclose=this.onClose.bind(this)},t.resume=function(){},t.onOpen=function(){this.progress=1},t.onClose=function(){var e=this;this.shouldAttemptReconnect&&(clearTimeout(this.reconnectTimeoutId),this.reconnectTimeoutId=setTimeout((function(){e.start()}),1e3*this.reconnectInterval))},t.onMessage=function(e){var t=!this.established;this.established=!0,t&&this.hookOnEstablished&&this.hookOnEstablished(),t&&this.onEstablishedCallback&&this.onEstablishedCallback(this),this.destination&&this.destination.write(e.data)},e}(),JE=function(){function e(t,n){"object"===typeof t?(this.bytes=t instanceof Uint8Array?t:new Uint8Array(t),this.byteLength=this.bytes.length):(this.bytes=new Uint8Array(t||1048576),this.byteLength=0),this.mode=n||e.MODE.EXPAND,this.index=0}var t=e.prototype;return t.resize=function(e){var t=new Uint8Array(e);0!==this.byteLength&&(this.byteLength=Math.min(this.byteLength,e),t.set(this.bytes,0,this.byteLength)),this.bytes=t,this.index=Math.min(this.index,this.byteLength<<3)},t.evict=function(e){var t=this.index>>3,n=this.bytes.length-this.byteLength;if(this.index===this.byteLength<<3||e>n+t)return this.byteLength=0,void(this.index=0);0!==t&&(this.bytes.copyWithin?this.bytes.copyWithin(0,t,this.byteLength):this.bytes.set(this.bytes.subarray(t,this.byteLength)),this.byteLength-=t,this.index-=t<<3)},t.write=function(t){var n="object"===typeof t[0],r=0,s=this.bytes.length-this.byteLength;if(n){r=0;for(var a=0;a<t.length;a++)r+=t[a].byteLength}else r=t.byteLength;if(r>s)if(this.mode===e.MODE.EXPAND){var i=Math.max(2*this.bytes.length,r-s);this.resize(i)}else this.evict(r);if(n)for(var o=0;o<t.length;o++)this.appendSingleBuffer(t[o]);else this.appendSingleBuffer(t);return r},t.appendSingleBuffer=function(e){e=e instanceof Uint8Array?e:new Uint8Array(e),this.bytes.set(e,this.byteLength),this.byteLength+=e.length},t.findNextStartCode=function(){for(var e=this.index+7>>3;e<this.byteLength;e++)if(0===this.bytes[e]&&0===this.bytes[e+1]&&1===this.bytes[e+2])return this.index=e+4<<3,this.bytes[e+3];return this.index=this.byteLength<<3,-1},t.findStartCode=function(e){var t=this.findNextStartCode();return t===e||-1===t?t:-1},t.nextBytesAreStartCode=function(){var e=this.index+7>>3;return e>=this.byteLength||0===this.bytes[e]&&0===this.bytes[e+1]&&1===this.bytes[e+2]},t.peek=function(e){for(var t=this.index,n=0;e;){var r=8-(7&t),s=r<e?r:e,a=r-s;n=n<<s|(this.bytes[t>>3]&255>>8-s<<a)>>a,t+=s,e-=s}return n},t.read=function(e){var t=this.peek(e);return this.index+=e,t},t.skip=function(e){return this.index+=e},t.rewind=function(e){this.index=Math.max(this.index-e,0)},t.has=function(e){return(this.byteLength<<3)-this.index>=e},e}();JE.MODE={EVICT:1,EXPAND:2};var XE=function(){function e(){this.bits=null,this.leftoverBytes=null,this.guessVideoFrameEnd=!0,this.pidsToStreamIds={},this.pesPacketInfo={},this.startTime=0,this.currentTime=0}var t=e.prototype;return t.connect=function(e,t){this.pesPacketInfo[e]={destination:t,currentLength:0,totalLength:0,pts:0,buffers:[]}},t.write=function(e){if(this.leftoverBytes){var t=e.byteLength+this.leftoverBytes.byteLength;this.bits=new JE(t),this.bits.write([this.leftoverBytes,e])}else this.bits=new JE(e);for(;this.bits.has(1504)&&this.parsePacket(););var n=this.bits.byteLength-(this.bits.index>>3);this.leftoverBytes=n>0?this.bits.bytes.subarray(this.bits.index>>3):null},t.parsePacket=function(){if(71!==this.bits.read(8)&&!this.resync())return!1;var e=187+(this.bits.index>>3);this.bits.read(1);var t=this.bits.read(1);this.bits.read(1);var n=this.bits.read(13);this.bits.read(2);var r=this.bits.read(2);this.bits.read(4);var s=this.pidsToStreamIds[n];if(t&&s){var a=this.pesPacketInfo[s];a&&a.currentLength&&this.packetComplete(a)}if(1&r){if(2&r){var i=this.bits.read(8);this.bits.skip(i<<3)}if(t&&this.bits.nextBytesAreStartCode()){this.bits.skip(24),s=this.bits.read(8),this.pidsToStreamIds[n]=s;var o=this.bits.read(16);this.bits.skip(8);var l=this.bits.read(2);this.bits.skip(6);var u=this.bits.read(8),c=this.bits.index+(u<<3),d=this.pesPacketInfo[s];if(d){var h=0;if(2&l){this.bits.skip(4);var p=this.bits.read(3);this.bits.skip(1);var A=this.bits.read(15);this.bits.skip(1);var f=this.bits.read(15);this.bits.skip(1),h=(1073741824*p+32768*A+f)/9e4,this.currentTime=h,-1===this.startTime&&(this.startTime=h)}var g=o?o-u-3:0;this.packetStart(d,h,g)}this.bits.index=c}if(s){var m=this.pesPacketInfo[s];if(m){var y=this.bits.index>>3,b=!t&&2&r;(this.packetAddData(m,y,e)||this.guessVideoFrameEnd&&b)&&this.packetComplete(m)}}}return this.bits.index=e<<3,!0},t.resync=function(){if(!this.bits.has(9024))return!1;for(var e=this.bits.index>>3,t=0;t<187;t++)if(71===this.bits.bytes[e+t]){for(var n=!0,r=1;r<5;r++)if(71!==this.bits.bytes[e+t+188*r]){n=!1;break}if(n)return this.bits.index=e+t+1<<3,!0}return console.warn("JSMpeg: Possible garbage data. Skipping."),this.bits.skip(1496),!1},t.packetStart=function(e,t,n){e.totalLength=n,e.currentLength=0,e.pts=t},t.packetAddData=function(e,t,n){return e.buffers.push(this.bits.bytes.subarray(t,n)),e.currentLength+=n-t,0!==e.totalLength&&e.currentLength>=e.totalLength},t.packetComplete=function(e){e.destination.write(e.pts,e.buffers),e.totalLength=0,e.currentLength=0,e.buffers=[]},e}();XE.STREAM={PACK_HEADER:186,SYSTEM_HEADER:187,PROGRAM_MAP:188,PRIVATE_1:189,PADDING:190,PRIVATE_2:191,AUDIO_1:192,VIDEO_1:224,DIRECTORY:255};var ZE=function(){function e(e){this.destination=null,this.canPlay=!1,this.collectTimestamps=!e.streaming,this.bytesWritten=0,this.timestamps=[],this.timestampIndex=0,this.startTime=0,this.decodedTime=0,Object.defineProperty(this,"currentTime",{get:this.getCurrentTime})}var t=e.prototype;return t.destroy=function(){},t.connect=function(e){this.destination=e},t.bufferGetIndex=function(){return this.bits.index},t.bufferSetIndex=function(e){this.bits.index=e},t.bufferWrite=function(e){return this.bits.write(e)},t.write=function(e,t){this.collectTimestamps&&(0===this.timestamps.length&&(this.startTime=e,this.decodedTime=e),this.timestamps.push({index:this.bytesWritten<<3,time:e})),this.bytesWritten+=this.bufferWrite(t),this.canPlay=!0},t.seek=function(e){if(this.collectTimestamps){this.timestampIndex=0;for(var t=0;t<this.timestamps.length&&!(this.timestamps[t].time>e);t++)this.timestampIndex=t;var n=this.timestamps[this.timestampIndex];n?(this.bufferSetIndex(n.index),this.decodedTime=n.time):(this.bufferSetIndex(0),this.decodedTime=this.startTime)}},t.decode=function(){this.advanceDecodedTime(0)},t.advanceDecodedTime=function(e){if(this.collectTimestamps){for(var t=-1,n=this.bufferGetIndex(),r=this.timestampIndex;r<this.timestamps.length&&!(this.timestamps[r].index>n);r++)t=r;if(-1!==t&&t!==this.timestampIndex)return this.timestampIndex=t,void(this.decodedTime=this.timestamps[this.timestampIndex].time)}this.decodedTime+=e},t.getCurrentTime=function(){return this.decodedTime},e}(),eS=function(e){function t(t){var n;(n=e.call(this,t)||this).onDecodeCallback=t.onVideoDecode;var r=t.videoBufferSize||524288,s=t.streaming?JE.MODE.EVICT:JE.MODE.EXPAND;return n.bits=new JE(r,s),n.customIntraQuantMatrix=new Uint8Array(64),n.customNonIntraQuantMatrix=new Uint8Array(64),n.blockData=new Int32Array(64),n.currentFrame=0,n.decodeFirstFrame=!1!==t.decodeFirstFrame,n}_E(t,e);var n=t.prototype;return n.write=function(e,n){if(ZE.prototype.write.call(this,e,n),!this.hasSequenceHeader){if(-1===this.bits.findStartCode(t.START.SEQUENCE))return!1;this.decodeSequenceHeader(),this.decodeFirstFrame&&this.decode()}},n.decode=function(){var e=VE();if(!this.hasSequenceHeader)return!1;if(-1===this.bits.findStartCode(t.START.PICTURE))return!1;this.decodePicture(),this.advanceDecodedTime(1/this.frameRate);var n=VE()-e;return this.onDecodeCallback&&this.onDecodeCallback(this,n),!0},n.readHuffman=function(e){var t=0;do{t=e[t+this.bits.read(1)]}while(t>=0&&0!==e[t]);return e[t+2]},n.decodeSequenceHeader=function(){var e=this.bits.read(12),n=this.bits.read(12);if(this.bits.skip(4),this.frameRate=t.PICTURE_RATE[this.bits.read(4)],this.bits.skip(30),e===this.width&&n===this.height||(this.width=e,this.height=n,this.initBuffers(),this.destination&&this.destination.resize(e,n)),this.bits.read(1)){for(var r=0;r<64;r++)this.customIntraQuantMatrix[t.ZIG_ZAG[r]]=this.bits.read(8);this.intraQuantMatrix=this.customIntraQuantMatrix}if(this.bits.read(1)){for(var s=0;s<64;s++){var a=t.ZIG_ZAG[s];this.customNonIntraQuantMatrix[a]=this.bits.read(8)}this.nonIntraQuantMatrix=this.customNonIntraQuantMatrix}this.hasSequenceHeader=!0},n.initBuffers=function(){this.intraQuantMatrix=t.DEFAULT_INTRA_QUANT_MATRIX,this.nonIntraQuantMatrix=t.DEFAULT_NON_INTRA_QUANT_MATRIX,this.mbWidth=this.width+15>>4,this.mbHeight=this.height+15>>4,this.mbSize=this.mbWidth*this.mbHeight,this.codedWidth=this.mbWidth<<4,this.codedHeight=this.mbHeight<<4,this.codedSize=this.codedWidth*this.codedHeight,this.halfWidth=this.mbWidth<<3,this.halfHeight=this.mbHeight<<3,this.currentY=new Uint8ClampedArray(this.codedSize),this.currentY32=new Uint32Array(this.currentY.buffer),this.currentCr=new Uint8ClampedArray(this.codedSize>>2),this.currentCr32=new Uint32Array(this.currentCr.buffer),this.currentCb=new Uint8ClampedArray(this.codedSize>>2),this.currentCb32=new Uint32Array(this.currentCb.buffer),this.forwardY=new Uint8ClampedArray(this.codedSize),this.forwardY32=new Uint32Array(this.forwardY.buffer),this.forwardCr=new Uint8ClampedArray(this.codedSize>>2),this.forwardCr32=new Uint32Array(this.forwardCr.buffer),this.forwardCb=new Uint8ClampedArray(this.codedSize>>2),this.forwardCb32=new Uint32Array(this.forwardCb.buffer)},n.decodePicture=function(){if(this.currentFrame++,this.bits.skip(10),this.pictureType=this.bits.read(3),this.bits.skip(16),!(this.pictureType<=0||this.pictureType>=t.PICTURE_TYPE.B)){if(this.pictureType===t.PICTURE_TYPE.PREDICTIVE){if(this.fullPelForward=this.bits.read(1),this.forwardFCode=this.bits.read(3),0===this.forwardFCode)return;this.forwardRSize=this.forwardFCode-1,this.forwardF=1<<this.forwardRSize}var e=0;do{e=this.bits.findNextStartCode()}while(e===t.START.EXTENSION||e===t.START.USER_DATA);for(;e>=t.START.SLICE_FIRST&&e<=t.START.SLICE_LAST;)this.decodeSlice(255&e),e=this.bits.findNextStartCode();if(-1!==e&&this.bits.rewind(32),this.destination&&this.destination.render(this.currentY,this.currentCr,this.currentCb,!0),this.pictureType===t.PICTURE_TYPE.INTRA||this.pictureType===t.PICTURE_TYPE.PREDICTIVE){var n=this.forwardY,r=this.forwardY32,s=this.forwardCr,a=this.forwardCr32,i=this.forwardCb,o=this.forwardCb32;this.forwardY=this.currentY,this.forwardY32=this.currentY32,this.forwardCr=this.currentCr,this.forwardCr32=this.currentCr32,this.forwardCb=this.currentCb,this.forwardCb32=this.currentCb32,this.currentY=n,this.currentY32=r,this.currentCr=s,this.currentCr32=a,this.currentCb=i,this.currentCb32=o}}},n.decodeSlice=function(e){for(this.sliceBegin=!0,this.macroblockAddress=(e-1)*this.mbWidth-1,this.motionFwH=this.motionFwHPrev=0,this.motionFwV=this.motionFwVPrev=0,this.dcPredictorY=128,this.dcPredictorCr=128,this.dcPredictorCb=128,this.quantizerScale=this.bits.read(5);this.bits.read(1);)this.bits.skip(8);do{this.decodeMacroblock()}while(!this.bits.nextBytesAreStartCode())},n.decodeMacroblock=function(){for(var e=0,n=this.readHuffman(t.MACROBLOCK_ADDRESS_INCREMENT);34===n;)n=this.readHuffman(t.MACROBLOCK_ADDRESS_INCREMENT);for(;35===n;)e+=33,n=this.readHuffman(t.MACROBLOCK_ADDRESS_INCREMENT);if(e+=n,this.sliceBegin)this.sliceBegin=!1,this.macroblockAddress+=e;else{if(this.macroblockAddress+e>=this.mbSize)return;for(e>1&&(this.dcPredictorY=128,this.dcPredictorCr=128,this.dcPredictorCb=128,this.pictureType===t.PICTURE_TYPE.PREDICTIVE&&(this.motionFwH=this.motionFwHPrev=0,this.motionFwV=this.motionFwVPrev=0));e>1;)this.macroblockAddress++,this.mbRow=this.macroblockAddress/this.mbWidth|0,this.mbCol=this.macroblockAddress%this.mbWidth,this.copyMacroblock(this.motionFwH,this.motionFwV,this.forwardY,this.forwardCr,this.forwardCb),e--;this.macroblockAddress++}this.mbRow=this.macroblockAddress/this.mbWidth|0,this.mbCol=this.macroblockAddress%this.mbWidth;var r=t.MACROBLOCK_TYPE[this.pictureType];this.macroblockType=this.readHuffman(r),this.macroblockIntra=1&this.macroblockType,this.macroblockMotFw=8&this.macroblockType,0!==(16&this.macroblockType)&&(this.quantizerScale=this.bits.read(5)),this.macroblockIntra?(this.motionFwH=this.motionFwHPrev=0,this.motionFwV=this.motionFwVPrev=0):(this.dcPredictorY=128,this.dcPredictorCr=128,this.dcPredictorCb=128,this.decodeMotionVectors(),this.copyMacroblock(this.motionFwH,this.motionFwV,this.forwardY,this.forwardCr,this.forwardCb));for(var s=0!==(2&this.macroblockType)?this.readHuffman(t.CODE_BLOCK_PATTERN):this.macroblockIntra?63:0,a=0,i=32;a<6;a++)0!==(s&i)&&this.decodeBlock(a),i>>=1},n.decodeMotionVectors=function(){var e,n,r=0;this.macroblockMotFw?(0!==(e=this.readHuffman(t.MOTION))&&1!==this.forwardF?(r=this.bits.read(this.forwardRSize),n=(Math.abs(e)-1<<this.forwardRSize)+r+1,e<0&&(n=-n)):n=e,this.motionFwHPrev+=n,this.motionFwHPrev>(this.forwardF<<4)-1?this.motionFwHPrev-=this.forwardF<<5:this.motionFwHPrev<-this.forwardF<<4&&(this.motionFwHPrev+=this.forwardF<<5),this.motionFwH=this.motionFwHPrev,this.fullPelForward&&(this.motionFwH<<=1),0!==(e=this.readHuffman(t.MOTION))&&1!==this.forwardF?(r=this.bits.read(this.forwardRSize),n=(Math.abs(e)-1<<this.forwardRSize)+r+1,e<0&&(n=-n)):n=e,this.motionFwVPrev+=n,this.motionFwVPrev>(this.forwardF<<4)-1?this.motionFwVPrev-=this.forwardF<<5:this.motionFwVPrev<-this.forwardF<<4&&(this.motionFwVPrev+=this.forwardF<<5),this.motionFwV=this.motionFwVPrev,this.fullPelForward&&(this.motionFwV<<=1)):this.pictureType===t.PICTURE_TYPE.PREDICTIVE&&(this.motionFwH=this.motionFwHPrev=0,this.motionFwV=this.motionFwVPrev=0)},n.copyMacroblock=function(e,t,n,r,s){var a,i,o,l,u,c,d,h,p,A,f,g,m,y,b,v,I,x,w,k=this.currentY32,C=this.currentCb32,E=this.currentCr32;if(i=(a=this.codedWidth)-16,o=e>>1,l=t>>1,u=1===(1&e),c=1===(1&t),d=((this.mbRow<<4)+l)*a+(this.mbCol<<4)+o,p=(h=this.mbRow*a+this.mbCol<<2)+(a<<2),u)if(c)for(;h<p;){for(f=n[d]+n[d+a],d++,A=0;A<4;A++)m=f+(g=n[d]+n[d+a])+2>>2&255,m|=(f=n[++d]+n[d+a])+g+2<<6&65280,m|=f+(g=n[++d]+n[d+a])+2<<14&16711680,f=n[++d]+n[d+a],d++,m|=f+g+2<<22&4278190080,k[h++]=m;h+=i>>2,d+=i-1}else for(;h<p;){for(f=n[d++],A=0;A<4;A++)m=f+(g=n[d++])+1>>1&255,m|=(f=n[d++])+g+1<<7&65280,m|=f+(g=n[d++])+1<<15&16711680,m|=(f=n[d++])+g+1<<23&4278190080,k[h++]=m;h+=i>>2,d+=i-1}else if(c)for(;h<p;){for(A=0;A<4;A++)m=n[d]+n[d+a]+1>>1&255,m|=n[++d]+n[d+a]+1<<7&65280,m|=n[++d]+n[d+a]+1<<15&16711680,m|=n[++d]+n[d+a]+1<<23&4278190080,d++,k[h++]=m;h+=i>>2,d+=i}else for(;h<p;){for(A=0;A<4;A++)m=n[d],m|=n[++d]<<8,m|=n[++d]<<16,m|=n[++d]<<24,d++,k[h++]=m;h+=i>>2,d+=i}if(i=(a=this.halfWidth)-8,o=e/2>>1,l=t/2>>1,u=1===(e/2&1),c=1===(t/2&1),d=((this.mbRow<<3)+l)*a+(this.mbCol<<3)+o,p=(h=this.mbRow*a+this.mbCol<<1)+(a<<1),u)if(c)for(;h<p;){for(y=r[d]+r[d+a],I=s[d]+s[d+a],d++,A=0;A<2;A++)v=y+(b=r[d]+r[d+a])+2>>2&255,w=I+(x=s[d]+s[d+a])+2>>2&255,v|=(y=r[++d]+r[d+a])+b+2<<6&65280,w|=(I=s[d]+s[d+a])+x+2<<6&65280,v|=y+(b=r[++d]+r[d+a])+2<<14&16711680,w|=I+(x=s[d]+s[d+a])+2<<14&16711680,y=r[++d]+r[d+a],I=s[d]+s[d+a],d++,v|=y+b+2<<22&4278190080,w|=I+x+2<<22&4278190080,E[h]=v,C[h]=w,h++;h+=i>>2,d+=i-1}else for(;h<p;){for(y=r[d],I=s[d],d++,A=0;A<2;A++)v=y+(b=r[d])+1>>1&255,w=I+(x=s[d++])+1>>1&255,v|=(y=r[d])+b+1<<7&65280,w|=(I=s[d++])+x+1<<7&65280,v|=y+(b=r[d])+1<<15&16711680,w|=I+(x=s[d++])+1<<15&16711680,v|=(y=r[d])+b+1<<23&4278190080,w|=(I=s[d++])+x+1<<23&4278190080,E[h]=v,C[h]=w,h++;h+=i>>2,d+=i-1}else if(c)for(;h<p;){for(A=0;A<2;A++)v=r[d]+r[d+a]+1>>1&255,w=s[d]+s[d+a]+1>>1&255,v|=r[++d]+r[d+a]+1<<7&65280,w|=s[d]+s[d+a]+1<<7&65280,v|=r[++d]+r[d+a]+1<<15&16711680,w|=s[d]+s[d+a]+1<<15&16711680,v|=r[++d]+r[d+a]+1<<23&4278190080,w|=s[d]+s[d+a]+1<<23&4278190080,d++,E[h]=v,C[h]=w,h++;h+=i>>2,d+=i}else for(;h<p;){for(A=0;A<2;A++)v=r[d],w=s[d],v|=r[++d]<<8,w|=s[d]<<8,v|=r[++d]<<16,w|=s[d]<<16,v|=r[++d]<<24,w|=s[d]<<24,d++,E[h]=v,C[h]=w,h++;h+=i>>2,d+=i}},n.decodeBlock=function(e){var n,r=0;if(this.macroblockIntra){var s,a;if(e<4?(s=this.dcPredictorY,a=this.readHuffman(t.DCT_DC_SIZE_LUMINANCE)):(s=4===e?this.dcPredictorCr:this.dcPredictorCb,a=this.readHuffman(t.DCT_DC_SIZE_CHROMINANCE)),a>0){var i=this.bits.read(a);this.blockData[0]=0!==(i&1<<a-1)?s+i:s+(-1<<a|i+1)}else this.blockData[0]=s;e<4?this.dcPredictorY=this.blockData[0]:4===e?this.dcPredictorCr=this.blockData[0]:this.dcPredictorCb=this.blockData[0],this.blockData[0]<<=8,n=this.intraQuantMatrix,r=1}else n=this.nonIntraQuantMatrix;for(var o,l,u,c=0;;){var d=0,h=this.readHuffman(t.DCT_COEFF);if(1===h&&r>0&&0===this.bits.read(1))break;65535===h?(d=this.bits.read(6),0===(c=this.bits.read(8))?c=this.bits.read(8):128===c?c=this.bits.read(8)-256:c>128&&(c-=256)):(d=h>>8,c=255&h,this.bits.read(1)&&(c=-c)),r+=d;var p=t.ZIG_ZAG[r];r++,c<<=1,this.macroblockIntra||(c+=c<0?-1:1),0===(1&(c=c*this.quantizerScale*n[p]>>4))&&(c-=c>0?1:-1),c>2047?c=2047:c<-2048&&(c=-2048),this.blockData[p]=c*t.PREMULTIPLIER_MATRIX[p]}e<4?(o=this.currentY,u=this.codedWidth-8,l=this.mbRow*this.codedWidth+this.mbCol<<4,0!==(1&e)&&(l+=8),0!==(2&e)&&(l+=this.codedWidth<<3)):(o=4===e?this.currentCb:this.currentCr,u=(this.codedWidth>>1)-8,l=(this.mbRow*this.codedWidth<<2)+(this.mbCol<<3)),this.macroblockIntra?1===r?(t.CopyValueToDestination(this.blockData[0]+128>>8,o,l,u),this.blockData[0]=0):(t.IDCT(this.blockData),t.CopyBlockToDestination(this.blockData,o,l,u),qE(this.blockData,0)):1===r?(t.AddValueToDestination(this.blockData[0]+128>>8,o,l,u),this.blockData[0]=0):(t.IDCT(this.blockData),t.AddBlockToDestination(this.blockData,o,l,u),qE(this.blockData,0)),r=0},t.CopyBlockToDestination=function(e,t,n,r){for(var s=0;s<64;s+=8,n+=r+8)t[n+0]=e[s+0],t[n+1]=e[s+1],t[n+2]=e[s+2],t[n+3]=e[s+3],t[n+4]=e[s+4],t[n+5]=e[s+5],t[n+6]=e[s+6],t[n+7]=e[s+7]},t.AddBlockToDestination=function(e,t,n,r){for(var s=0;s<64;s+=8,n+=r+8)t[n+0]+=e[s+0],t[n+1]+=e[s+1],t[n+2]+=e[s+2],t[n+3]+=e[s+3],t[n+4]+=e[s+4],t[n+5]+=e[s+5],t[n+6]+=e[s+6],t[n+7]+=e[s+7]},t.CopyValueToDestination=function(e,t,n,r){for(var s=0;s<64;s+=8,n+=r+8)t[n+0]=e,t[n+1]=e,t[n+2]=e,t[n+3]=e,t[n+4]=e,t[n+5]=e,t[n+6]=e,t[n+7]=e},t.AddValueToDestination=function(e,t,n,r){for(var s=0;s<64;s+=8,n+=r+8)t[n+0]+=e,t[n+1]+=e,t[n+2]+=e,t[n+3]+=e,t[n+4]+=e,t[n+5]+=e,t[n+6]+=e,t[n+7]+=e},t.IDCT=function(e){for(var t,n,r,s,a,i,o,l,u,c,d,h,p,A,f,g,m,y,b=0;b<8;++b)t=e[32+b],n=e[16+b]+e[48+b],r=e[40+b]-e[24+b],i=e[8+b]+e[56+b],o=e[24+b]+e[40+b],u=(p=(473*(s=e[8+b]-e[56+b])-196*r+128>>8)-(a=i+o))-(362*(i-o)+128>>8),A=(c=(l=e[0+b])-t)+(d=(362*(e[16+b]-e[48+b])+128>>8)-n),f=(h=l+t)+n,g=c-d,m=h-n,y=-u-(473*r+196*s+128>>8),e[0+b]=a+f,e[8+b]=p+A,e[16+b]=g-u,e[24+b]=m-y,e[32+b]=m+y,e[40+b]=u+g,e[48+b]=A-p,e[56+b]=f-a;for(var v=0;v<64;v+=8)t=e[4+v],n=e[2+v]+e[6+v],r=e[5+v]-e[3+v],i=e[1+v]+e[7+v],o=e[3+v]+e[5+v],u=(p=(473*(s=e[1+v]-e[7+v])-196*r+128>>8)-(a=i+o))-(362*(i-o)+128>>8),A=(c=(l=e[0+v])-t)+(d=(362*(e[2+v]-e[6+v])+128>>8)-n),f=(h=l+t)+n,g=c-d,m=h-n,y=-u-(473*r+196*s+128>>8),e[0+v]=a+f+128>>8,e[1+v]=p+A+128>>8,e[2+v]=g-u+128>>8,e[3+v]=m-y+128>>8,e[4+v]=m+y+128>>8,e[5+v]=u+g+128>>8,e[6+v]=A-p+128>>8,e[7+v]=f-a+128>>8},t}(ZE);eS.prototype.frameRate=30,eS.prototype.currentY=null,eS.prototype.currentCr=null,eS.prototype.currentCb=null,eS.prototype.pictureType=0,eS.prototype.forwardY=null,eS.prototype.forwardCr=null,eS.prototype.forwardCb=null,eS.prototype.fullPelForward=!1,eS.prototype.forwardFCode=0,eS.prototype.forwardRSize=0,eS.prototype.forwardF=0,eS.prototype.quantizerScale=0,eS.prototype.sliceBegin=!1,eS.prototype.macroblockAddress=0,eS.prototype.mbRow=0,eS.prototype.mbCol=0,eS.prototype.macroblockType=0,eS.prototype.macroblockIntra=!1,eS.prototype.macroblockMotFw=!1,eS.prototype.motionFwH=0,eS.prototype.motionFwV=0,eS.prototype.motionFwHPrev=0,eS.prototype.motionFwVPrev=0,eS.prototype.dcPredictorY=0,eS.prototype.dcPredictorCr=0,eS.prototype.dcPredictorCb=0,eS.prototype.blockData=null,eS.PICTURE_RATE=[0,23.976,24,25,29.97,30,50,59.94,60,0,0,0,0,0,0,0],eS.ZIG_ZAG=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),eS.DEFAULT_INTRA_QUANT_MATRIX=new Uint8Array([8,16,19,22,26,27,29,34,16,16,22,24,27,29,34,37,19,22,26,27,29,34,34,38,22,22,26,27,29,34,37,40,22,26,27,29,32,35,40,48,26,27,29,32,35,40,48,58,26,27,29,34,38,46,56,69,27,29,35,38,46,56,69,83]),eS.DEFAULT_NON_INTRA_QUANT_MATRIX=new Uint8Array([16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]),eS.PREMULTIPLIER_MATRIX=new Uint8Array([32,44,42,38,32,25,17,9,44,62,58,52,44,35,24,12,42,58,55,49,42,33,23,12,38,52,49,44,38,30,20,10,32,44,42,38,32,25,17,9,25,35,33,30,25,20,14,7,17,24,23,20,17,14,9,5,9,12,12,10,9,7,5,2]),eS.MACROBLOCK_ADDRESS_INCREMENT=new Int16Array([3,6,0,9,12,0,0,0,1,15,18,0,21,24,0,27,30,0,33,36,0,0,0,3,0,0,2,39,42,0,45,48,0,0,0,5,0,0,4,51,54,0,57,60,0,0,0,7,0,0,6,63,66,0,69,72,0,75,78,0,81,84,0,-1,87,0,-1,90,0,93,96,0,99,102,0,105,108,0,111,114,0,0,0,9,0,0,8,117,120,0,123,126,0,129,132,0,135,138,0,0,0,15,0,0,14,0,0,13,0,0,12,0,0,11,0,0,10,141,-1,0,-1,144,0,147,150,0,153,156,0,159,162,0,165,168,0,171,174,0,177,180,0,183,-1,0,-1,186,0,189,192,0,195,198,0,201,204,0,207,210,0,213,216,0,219,222,0,0,0,21,0,0,20,0,0,19,0,0,18,0,0,17,0,0,16,0,0,35,0,0,34,0,0,33,0,0,32,0,0,31,0,0,30,0,0,29,0,0,28,0,0,27,0,0,26,0,0,25,0,0,24,0,0,23,0,0,22]),eS.MACROBLOCK_TYPE_INTRA=new Int8Array([3,6,0,-1,9,0,0,0,1,0,0,17]),eS.MACROBLOCK_TYPE_PREDICTIVE=new Int8Array([3,6,0,9,12,0,0,0,10,15,18,0,0,0,2,21,24,0,0,0,8,27,30,0,33,36,0,-1,39,0,0,0,18,0,0,26,0,0,1,0,0,17]),eS.MACROBLOCK_TYPE_B=new Int8Array([3,6,0,9,15,0,12,18,0,24,21,0,0,0,12,27,30,0,0,0,14,39,42,0,36,33,0,0,0,4,0,0,6,54,48,0,45,51,0,0,0,8,0,0,10,-1,57,0,0,0,1,60,63,0,0,0,30,0,0,17,0,0,22,0,0,26]),eS.MACROBLOCK_TYPE=[null,eS.MACROBLOCK_TYPE_INTRA,eS.MACROBLOCK_TYPE_PREDICTIVE,eS.MACROBLOCK_TYPE_B],eS.CODE_BLOCK_PATTERN=new Int16Array([6,3,0,9,18,0,12,15,0,24,33,0,36,39,0,27,21,0,30,42,0,60,57,0,54,48,0,69,51,0,81,75,0,63,84,0,45,66,0,72,78,0,0,0,60,105,120,0,132,144,0,114,108,0,126,141,0,87,93,0,117,96,0,0,0,32,135,138,0,99,123,0,129,102,0,0,0,4,90,111,0,0,0,8,0,0,16,0,0,44,150,168,0,0,0,28,0,0,52,0,0,62,183,177,0,156,180,0,0,0,1,165,162,0,0,0,61,0,0,56,171,174,0,0,0,2,0,0,40,153,186,0,0,0,48,192,189,0,147,159,0,0,0,20,0,0,12,240,249,0,0,0,63,231,225,0,195,219,0,252,198,0,0,0,24,0,0,36,0,0,3,207,261,0,243,237,0,204,213,0,210,234,0,201,228,0,216,222,0,258,255,0,264,246,0,-1,282,0,285,291,0,0,0,33,0,0,9,318,330,0,306,348,0,0,0,5,0,0,10,279,267,0,0,0,6,0,0,18,0,0,17,0,0,34,339,357,0,309,312,0,270,276,0,327,321,0,351,354,0,303,297,0,294,288,0,300,273,0,342,345,0,315,324,0,336,333,0,363,375,0,0,0,41,0,0,14,0,0,21,372,366,0,360,369,0,0,0,11,0,0,19,0,0,7,0,0,35,0,0,13,0,0,50,0,0,49,0,0,58,0,0,37,0,0,25,0,0,45,0,0,57,0,0,26,0,0,29,0,0,38,0,0,53,0,0,23,0,0,43,0,0,46,0,0,42,0,0,22,0,0,54,0,0,51,0,0,15,0,0,30,0,0,39,0,0,47,0,0,55,0,0,27,0,0,59,0,0,31]),eS.MOTION=new Int16Array([3,6,0,12,9,0,0,0,0,18,15,0,24,21,0,0,0,-1,0,0,1,27,30,0,36,33,0,0,0,2,0,0,-2,42,45,0,48,39,0,60,54,0,0,0,3,0,0,-3,51,57,0,-1,69,0,81,75,0,78,63,0,72,66,0,96,84,0,87,93,0,-1,99,0,108,105,0,0,0,-4,90,102,0,0,0,4,0,0,-7,0,0,5,111,123,0,0,0,-5,0,0,7,114,120,0,126,117,0,0,0,-6,0,0,6,153,162,0,150,147,0,135,138,0,156,141,0,129,159,0,132,144,0,0,0,10,0,0,9,0,0,8,0,0,-8,171,198,0,0,0,-9,180,192,0,168,183,0,165,186,0,174,189,0,0,0,-10,177,195,0,0,0,12,0,0,16,0,0,13,0,0,14,0,0,11,0,0,15,0,0,-16,0,0,-12,0,0,-14,0,0,-15,0,0,-11,0,0,-13]),eS.DCT_DC_SIZE_LUMINANCE=new Int8Array([6,3,0,18,15,0,9,12,0,0,0,1,0,0,2,27,24,0,21,30,0,0,0,0,36,33,0,0,0,4,0,0,3,39,42,0,0,0,5,0,0,6,48,45,0,51,-1,0,0,0,7,0,0,8]),eS.DCT_DC_SIZE_CHROMINANCE=new Int8Array([6,3,0,12,9,0,18,15,0,24,21,0,0,0,2,0,0,1,0,0,0,30,27,0,0,0,3,36,33,0,0,0,4,42,39,0,0,0,5,48,45,0,0,0,6,51,-1,0,0,0,7,0,0,8]),eS.DCT_COEFF=new Int32Array([3,6,0,12,9,0,0,0,1,21,24,0,18,15,0,39,27,0,33,30,0,42,36,0,0,0,257,60,66,0,54,63,0,48,57,0,0,0,513,51,45,0,0,0,2,0,0,3,81,75,0,87,93,0,72,78,0,96,90,0,0,0,1025,69,84,0,0,0,769,0,0,258,0,0,1793,0,0,65535,0,0,1537,111,108,0,0,0,1281,105,102,0,117,114,0,99,126,0,120,123,0,156,150,0,162,159,0,144,147,0,129,135,0,138,132,0,0,0,2049,0,0,4,0,0,514,0,0,2305,153,141,0,165,171,0,180,168,0,177,174,0,183,186,0,0,0,2561,0,0,3329,0,0,6,0,0,259,0,0,5,0,0,770,0,0,2817,0,0,3073,228,225,0,201,210,0,219,213,0,234,222,0,216,231,0,207,192,0,204,189,0,198,195,0,243,261,0,273,240,0,246,237,0,249,258,0,279,276,0,252,255,0,270,282,0,264,267,0,0,0,515,0,0,260,0,0,7,0,0,1026,0,0,1282,0,0,4097,0,0,3841,0,0,3585,315,321,0,333,342,0,312,291,0,375,357,0,288,294,0,-1,369,0,285,303,0,318,363,0,297,306,0,339,309,0,336,348,0,330,300,0,372,345,0,351,366,0,327,354,0,360,324,0,381,408,0,417,420,0,390,378,0,435,438,0,384,387,0,0,0,2050,396,402,0,465,462,0,0,0,8,411,399,0,429,432,0,453,414,0,426,423,0,0,0,10,0,0,9,0,0,11,0,0,5377,0,0,1538,0,0,771,0,0,5121,0,0,1794,0,0,4353,0,0,4609,0,0,4865,444,456,0,0,0,1027,459,450,0,0,0,261,393,405,0,0,0,516,447,441,0,516,519,0,486,474,0,510,483,0,504,498,0,471,537,0,507,501,0,522,513,0,534,531,0,468,477,0,492,495,0,549,546,0,525,528,0,0,0,263,0,0,2562,0,0,2306,0,0,5633,0,0,5889,0,0,6401,0,0,6145,0,0,1283,0,0,772,0,0,13,0,0,12,0,0,14,0,0,15,0,0,517,0,0,6657,0,0,262,540,543,0,480,489,0,588,597,0,0,0,27,609,555,0,606,603,0,0,0,19,0,0,22,591,621,0,0,0,18,573,576,0,564,570,0,0,0,20,552,582,0,0,0,21,558,579,0,0,0,23,612,594,0,0,0,25,0,0,24,600,615,0,0,0,31,0,0,30,0,0,28,0,0,29,0,0,26,0,0,17,0,0,16,567,618,0,561,585,0,654,633,0,0,0,37,645,648,0,0,0,36,630,636,0,0,0,34,639,627,0,663,666,0,657,624,0,651,642,0,669,660,0,0,0,35,0,0,267,0,0,40,0,0,268,0,0,266,0,0,32,0,0,264,0,0,265,0,0,38,0,0,269,0,0,270,0,0,33,0,0,39,0,0,7937,0,0,6913,0,0,7681,0,0,4098,0,0,7425,0,0,7169,0,0,271,0,0,274,0,0,273,0,0,272,0,0,1539,0,0,2818,0,0,3586,0,0,3330,0,0,3074,0,0,3842]),eS.PICTURE_TYPE={INTRA:1,PREDICTIVE:2,B:3},eS.START={SEQUENCE:179,SLICE_FIRST:1,SLICE_LAST:175,PICTURE:0,EXTENSION:181,USER_DATA:178};var tS=function(e){function t(t){var n;return(n=e.call(this,t)||this).onDecodeCallback=t.onVideoDecode,n.module=t.wasmModule,n.bufferSize=t.videoBufferSize||524288,n.bufferMode=t.streaming?JE.MODE.EVICT:JE.MODE.EXPAND,n.decodeFirstFrame=!1!==t.decodeFirstFrame,n.hasSequenceHeader=!1,n}_E(t,e);var n=t.prototype;return n.initializeWasmDecoder=function(){this.module.instance?(this.instance=this.module.instance,this.functions=this.module.instance.exports,this.decoder=this.functions._mpeg1_decoder_create(this.bufferSize,this.bufferMode)):console.warn("JSMpeg: WASM module not compiled yet")},n.destroy=function(){this.decoder&&this.functions._mpeg1_decoder_destroy(this.decoder)},n.bufferGetIndex=function(){if(this.decoder)return this.functions._mpeg1_decoder_get_index(this.decoder)},n.bufferSetIndex=function(e){this.decoder&&this.functions._mpeg1_decoder_set_index(this.decoder,e)},n.bufferWrite=function(e){this.decoder||this.initializeWasmDecoder();for(var t=0,n=0;n<e.length;n++)t+=e[n].length;for(var r=this.functions._mpeg1_decoder_get_write_ptr(this.decoder,t),s=0;s<e.length;s++)this.instance.heapU8.set(e[s],r),r+=e[s].length;return this.functions._mpeg1_decoder_did_write(this.decoder,t),t},n.write=function(e,t){ZE.prototype.write.call(this,e,t),!this.hasSequenceHeader&&this.functions._mpeg1_decoder_has_sequence_header(this.decoder)&&this.loadSequenceHeader()},n.loadSequenceHeader=function(){if(this.hasSequenceHeader=!0,this.frameRate=this.functions._mpeg1_decoder_get_frame_rate(this.decoder),this.codedSize=this.functions._mpeg1_decoder_get_coded_size(this.decoder),this.destination){var e=this.functions._mpeg1_decoder_get_width(this.decoder),t=this.functions._mpeg1_decoder_get_height(this.decoder);this.destination.resize(e,t)}this.decodeFirstFrame&&this.decode()},n.decode=function(){var e=VE();if(!this.decoder)return!1;if(!this.functions._mpeg1_decoder_decode(this.decoder))return!1;if(this.destination){var t=this.functions._mpeg1_decoder_get_y_ptr(this.decoder),n=this.functions._mpeg1_decoder_get_cr_ptr(this.decoder),r=this.functions._mpeg1_decoder_get_cb_ptr(this.decoder),s=this.instance.heapU8.subarray(t,t+this.codedSize),a=this.instance.heapU8.subarray(n,n+(this.codedSize>>2)),i=this.instance.heapU8.subarray(r,r+(this.codedSize>>2));this.destination.render(s,a,i,!1)}this.advanceDecodedTime(1/this.frameRate);var o=VE()-e;return this.onDecodeCallback&&this.onDecodeCallback(this,o),!0},t}(ZE),nS=function(e){function t(n){var r;(r=e.call(this,n)||this).onDecodeCallback=n.onAudioDecode;var s=n.audioBufferSize||131072,a=n.streaming?JE.MODE.EVICT:JE.MODE.EXPAND;r.bits=new JE(s,a),r.left=new Float32Array(1152),r.right=new Float32Array(1152),r.sampleRate=44100,r.D=new Float32Array(1024),r.D.set(t.SYNTHESIS_WINDOW,0),r.D.set(t.SYNTHESIS_WINDOW,512),r.V=[new Float32Array(1024),new Float32Array(1024)],r.U=new Int32Array(32),r.VPos=0,r.allocation=[new Array(32),new Array(32)],r.scaleFactorInfo=[new Uint8Array(32),new Uint8Array(32)],r.scaleFactor=[new Array(32),new Array(32)],r.sample=[new Array(32),new Array(32)];for(var i=0;i<2;i++)for(var o=0;o<32;o++)r.scaleFactor[i][o]=[0,0,0],r.sample[i][o]=[0,0,0];return r}_E(t,e);var n=t.prototype;return n.decode=function(){var e=VE(),t=this.bits.index>>3;if(t>=this.bits.byteLength)return!1;var n=this.decodeFrame(this.left,this.right);if(this.bits.index=t+n<<3,!n)return!1;this.destination&&this.destination.play(this.sampleRate,this.left,this.right),this.advanceDecodedTime(this.left.length/this.sampleRate);var r=VE()-e;return this.onDecodeCallback&&this.onDecodeCallback(this,r),!0},n.getCurrentTime=function(){var e=this.destination?this.destination.enqueuedTime:0;return this.decodedTime-e},n.decodeFrame=function(e,n){var r=this.bits.read(11),s=this.bits.read(2),a=this.bits.read(2),i=!this.bits.read(1);if(r!==t.FRAME_SYNC||s!==t.VERSION.MPEG_1||a!==t.LAYER.II)return 0;var o=this.bits.read(4)-1;if(o>13)return 0;var l=this.bits.read(2),u=t.SAMPLE_RATE[l];if(3===l)return 0;s===t.VERSION.MPEG_2&&(l+=4,o+=14);var c=this.bits.read(1);this.bits.read(1);var d=this.bits.read(2),h=0;d===t.MODE.JOINT_STEREO?h=this.bits.read(2)+1<<2:(this.bits.skip(2),h=d===t.MODE.MONO?0:32),this.bits.skip(4),i&&this.bits.skip(16);var p=144e3*t.BIT_RATE[o]/(u=t.SAMPLE_RATE[l])+c|0,A=0,f=0;if(s===t.VERSION.MPEG_2)A=2,f=30;else{var g=d===t.MODE.MONO?0:1,m=t.QUANT_LUT_STEP_1[g][o];f=63&(A=t.QUANT_LUT_STEP_2[m][l]),A>>=6}h>f&&(h=f);for(var y=0;y<h;y++)this.allocation[0][y]=this.readAllocation(y,A),this.allocation[1][y]=this.readAllocation(y,A);for(var b=h;b<f;b++)this.allocation[0][b]=this.allocation[1][b]=this.readAllocation(b,A);for(var v=d===t.MODE.MONO?1:2,I=0;I<f;I++){for(var x=0;x<v;x++)this.allocation[x][I]&&(this.scaleFactorInfo[x][I]=this.bits.read(2));d===t.MODE.MONO&&(this.scaleFactorInfo[1][I]=this.scaleFactorInfo[0][I])}for(var w=0;w<f;w++){for(var k=0;k<v;k++)if(this.allocation[k][w]){var C=this.scaleFactor[k][w];switch(this.scaleFactorInfo[k][w]){case 0:C[0]=this.bits.read(6),C[1]=this.bits.read(6),C[2]=this.bits.read(6);break;case 1:C[0]=C[1]=this.bits.read(6),C[2]=this.bits.read(6);break;case 2:C[0]=C[1]=C[2]=this.bits.read(6);break;case 3:C[0]=this.bits.read(6),C[1]=C[2]=this.bits.read(6)}}d===t.MODE.MONO&&(this.scaleFactor[1][w][0]=this.scaleFactor[0][w][0],this.scaleFactor[1][w][1]=this.scaleFactor[0][w][1],this.scaleFactor[1][w][2]=this.scaleFactor[0][w][2])}for(var E=0,S=0;S<3;S++)for(var T=0;T<4;T++){for(var N=0;N<h;N++)this.readSamples(0,N,S),this.readSamples(1,N,S);for(var B=h;B<f;B++)this.readSamples(0,B,S),this.sample[1][B][0]=this.sample[0][B][0],this.sample[1][B][1]=this.sample[0][B][1],this.sample[1][B][2]=this.sample[0][B][2];for(var R=f;R<32;R++)this.sample[0][R][0]=0,this.sample[0][R][1]=0,this.sample[0][R][2]=0,this.sample[1][R][0]=0,this.sample[1][R][1]=0,this.sample[1][R][2]=0;for(var D=0;D<3;D++){this.VPos=this.VPos-64&1023;for(var F=0;F<2;F++){t.MatrixTransform(this.sample[F],D,this.V[F],this.VPos),qE(this.U,0);for(var $=512-(this.VPos>>1),_=this.VPos%128>>1;_<1024;){for(var M=0;M<32;++M)this.U[M]+=this.D[$++]*this.V[F][_++];_+=96,$+=32}for(_=1120-_,$-=480;_<1024;){for(var O=0;O<32;++O)this.U[O]+=this.D[$++]*this.V[F][_++];_+=96,$+=32}for(var Q=0===F?e:n,L=0;L<32;L++)Q[E+L]=this.U[L]/2147418112}E+=32}}return this.sampleRate=u,p},n.readAllocation=function(e,n){var r=t.QUANT_LUT_STEP_3[n][e],s=t.QUANT_LUT_STEP4[15&r][this.bits.read(r>>4)];return s?t.QUANT_TAB[s-1]:0},n.readSamples=function(e,n,r){var s=this.allocation[e][n],a=this.scaleFactor[e][n][r],i=this.sample[e][n],o=0;if(s){if(63===a)a=0;else{var l=a/3|0;a=t.SCALEFACTOR_BASE[a%3]+(1<<l>>1)>>l}var u=s.levels;s.group?(o=this.bits.read(s.bits),i[0]=o%u,o=o/u|0,i[1]=o%u,i[2]=o/u|0):(i[0]=this.bits.read(s.bits),i[1]=this.bits.read(s.bits),i[2]=this.bits.read(s.bits));var c=65536/(u+1)|0;o=((u=(u+1>>1)-1)-i[0])*c,i[0]=o*(a>>12)+(o*(4095&a)+2048>>12)>>12,o=(u-i[1])*c,i[1]=o*(a>>12)+(o*(4095&a)+2048>>12)>>12,o=(u-i[2])*c,i[2]=o*(a>>12)+(o*(4095&a)+2048>>12)>>12}else i[0]=i[1]=i[2]=0},t.MatrixTransform=function(e,t,n,r){var s,a,i,o,l,u,c,d,h,p,A,f,g,m,y,b,v,I,x,w,k,C,E,S,T,N,B,R,D,F,$,_,M;s=e[0][t]+e[31][t],a=.500602998235*(e[0][t]-e[31][t]),i=e[1][t]+e[30][t],o=.505470959898*(e[1][t]-e[30][t]),l=e[2][t]+e[29][t],u=.515447309923*(e[2][t]-e[29][t]),c=e[3][t]+e[28][t],d=.53104259109*(e[3][t]-e[28][t]),h=e[4][t]+e[27][t],p=.553103896034*(e[4][t]-e[27][t]),A=e[5][t]+e[26][t],f=.582934968206*(e[5][t]-e[26][t]),g=e[6][t]+e[25][t],m=.622504123036*(e[6][t]-e[25][t]),y=e[7][t]+e[24][t],b=.674808341455*(e[7][t]-e[24][t]),v=e[8][t]+e[23][t],I=.744536271002*(e[8][t]-e[23][t]),x=e[9][t]+e[22][t],w=.839349645416*(e[9][t]-e[22][t]),k=e[10][t]+e[21][t],C=.972568237862*(e[10][t]-e[21][t]),E=e[11][t]+e[20][t],S=1.16943993343*(e[11][t]-e[20][t]),T=e[12][t]+e[19][t],N=1.48416461631*(e[12][t]-e[19][t]),B=e[13][t]+e[18][t],R=2.05778100995*(e[13][t]-e[18][t]),D=e[14][t]+e[17][t],F=3.40760841847*(e[14][t]-e[17][t]),M=s+($=e[15][t]+e[16][t]),$=.502419286188*(s-$),s=i+D,D=.52249861494*(i-D),i=l+B,B=.566944034816*(l-B),l=c+T,T=.64682178336*(c-T),c=h+E,E=.788154623451*(h-E),h=A+k,k=1.06067768599*(A-k),A=g+x,x=1.72244709824*(g-x),g=y+v,v=5.10114861869*(y-v),y=M+g,g=.509795579104*(M-g),M=s+A,s=.601344886935*(s-A),A=i+h,h=.899976223136*(i-h),i=l+c,c=2.56291544774*(l-c),l=y+i,y=.541196100146*(y-i),i=M+A,A=1.30656296488*(M-A),M=l+i,l=.707106781187*(l-i),i=y+A,i+=y=.707106781187*(y-A),A=g+c,g=.541196100146*(g-c),c=s+h,h=1.30656296488*(s-h),s=A+c,c=.707106781187*(A-c),A=g+h,s+=A+=g=.707106781187*(g-h),A+=c,c+=g,h=$+v,$=.509795579104*($-v),v=D+x,D=.601344886935*(D-x),x=B+k,k=.899976223136*(B-k),B=T+E,E=2.56291544774*(T-E),T=h+B,h=.541196100146*(h-B),B=v+x,x=1.30656296488*(v-x),v=T+B,B=.707106781187*(T-B),T=h+x,x=.707106781187*(h-x),h=$+E,$=.541196100146*($-E),E=D+k,k=1.30656296488*(D-k),D=h+E,E=.707106781187*(h-E),h=$+k,v+=D+=h+=$=.707106781187*($-k),D+=T+=x,T+=h+=E,h+=B,B+=E+=$,E+=x,x+=$,k=a+(_=10.1900081235*(e[15][t]-e[16][t])),a=.502419286188*(a-_),_=o+F,o=.52249861494*(o-F),F=u+R,R=.566944034816*(u-R),u=d+N,d=.64682178336*(d-N),N=p+S,p=.788154623451*(p-S),S=f+C,C=1.06067768599*(f-C),f=m+w,w=1.72244709824*(m-w),m=b+I,b=5.10114861869*(b-I),I=k+m,m=.509795579104*(k-m),k=_+f,_=.601344886935*(_-f),f=F+S,S=.899976223136*(F-S),F=u+N,N=2.56291544774*(u-N),u=I+F,I=.541196100146*(I-F),F=k+f,f=1.30656296488*(k-f),k=u+F,F=.707106781187*(u-F),u=I+f,f=.707106781187*(I-f),I=m+N,N=.541196100146*(m-N),m=_+S,S=1.30656296488*(_-S),_=I+m,m=.707106781187*(I-m),I=N+S,_+=I+=S=.707106781187*(N-S),I+=m,N=m+S,m=a+b,a=.509795579104*(a-b),b=o+w,o=.601344886935*(o-w),w=R+C,C=.899976223136*(R-C),R=d+p,p=2.56291544774*(d-p),d=m+R,m=.541196100146*(m-R),R=b+w,w=1.30656296488*(b-w),b=d+R,R=.707106781187*(d-R),d=m+w,w=.707106781187*(m-w),m=a+p,a=.541196100146*(a-p),p=o+C,C=1.30656296488*(o-C),o=m+p,p=.707106781187*(m-p),m=a+C,k+=b+=o+=m+=a=.707106781187*(a-C),b+=_,_+=o+=d+=w,o+=u+=f,u+=d+=m+=p,d+=I,I+=m+=R,m+=F,F+=R+=p+=a,R+=N,N+=p+=w,p+=f,f+=w+=a,w+=S,S+=a,n[r+48]=-M,n[r+49]=n[r+47]=-k,n[r+50]=n[r+46]=-v,n[r+51]=n[r+45]=-b,n[r+52]=n[r+44]=-s,n[r+53]=n[r+43]=-_,n[r+54]=n[r+42]=-D,n[r+55]=n[r+41]=-o,n[r+56]=n[r+40]=-i,n[r+57]=n[r+39]=-u,n[r+58]=n[r+38]=-T,n[r+59]=n[r+37]=-d,n[r+60]=n[r+36]=-A,n[r+61]=n[r+35]=-I,n[r+62]=n[r+34]=-h,n[r+63]=n[r+33]=-m,n[r+32]=-l,n[r+0]=l,n[r+31]=-F,n[r+1]=F,n[r+30]=-B,n[r+2]=B,n[r+29]=-R,n[r+3]=R,n[r+28]=-c,n[r+4]=c,n[r+27]=-N,n[r+5]=N,n[r+26]=-E,n[r+6]=E,n[r+25]=-p,n[r+7]=p,n[r+24]=-y,n[r+8]=y,n[r+23]=-f,n[r+9]=f,n[r+22]=-x,n[r+10]=x,n[r+21]=-w,n[r+11]=w,n[r+20]=-g,n[r+12]=g,n[r+19]=-S,n[r+13]=S,n[r+18]=-$,n[r+14]=$,n[r+17]=-a,n[r+15]=a,n[r+16]=0},t}(ZE);nS.FRAME_SYNC=2047,nS.VERSION={MPEG_2_5:0,MPEG_2:2,MPEG_1:3},nS.LAYER={III:1,II:2,I:3},nS.MODE={STEREO:0,JOINT_STEREO:1,DUAL_CHANNEL:2,MONO:3},nS.SAMPLE_RATE=new Uint16Array([44100,48e3,32e3,0,22050,24e3,16e3,0]),nS.BIT_RATE=new Uint16Array([32,48,56,64,80,96,112,128,160,192,224,256,320,384,8,16,24,32,40,48,56,64,80,96,112,128,144,160]),nS.SCALEFACTOR_BASE=new Uint32Array([33554432,26632170,21137968]),nS.SYNTHESIS_WINDOW=new Float32Array([0,-.5,-.5,-.5,-.5,-.5,-.5,-1,-1,-1,-1,-1.5,-1.5,-2,-2,-2.5,-2.5,-3,-3.5,-3.5,-4,-4.5,-5,-5.5,-6.5,-7,-8,-8.5,-9.5,-10.5,-12,-13,-14.5,-15.5,-17.5,-19,-20.5,-22.5,-24.5,-26.5,-29,-31.5,-34,-36.5,-39.5,-42.5,-45.5,-48.5,-52,-55.5,-58.5,-62.5,-66,-69.5,-73.5,-77,-80.5,-84.5,-88,-91.5,-95,-98,-101,-104,106.5,109,111,112.5,113.5,114,114,113.5,112,110.5,107.5,104,100,94.5,88.5,81.5,73,63.5,53,41.5,28.5,14.5,-1,-18,-36,-55.5,-76.5,-98.5,-122,-147,-173.5,-200.5,-229.5,-259.5,-290.5,-322.5,-355.5,-389.5,-424,-459.5,-495.5,-532,-568.5,-605,-641.5,-678,-714,-749,-783.5,-817,-849,-879.5,-908.5,-935,-959.5,-981,-1000.5,-1016,-1028.5,-1037.5,-1042.5,-1043.5,-1040,-1031.5,1018.5,1e3,976,946.5,911,869.5,822,767.5,707,640,565.5,485,397,302.5,201,92.5,-22.5,-144,-272.5,-407,-547.5,-694,-846,-1003,-1165,-1331.5,-1502,-1675.5,-1852.5,-2031.5,-2212.5,-2394,-2576.5,-2758.5,-2939.5,-3118.5,-3294.5,-3467.5,-3635.5,-3798.5,-3955,-4104.5,-4245.5,-4377.5,-4499,-4609.5,-4708,-4792.5,-4863.5,-4919,-4958,-4979.5,-4983,-4967.5,-4931.5,-4875,-4796,-4694.5,-4569.5,-4420,-4246,-4046,-3820,-3567,3287,2979.5,2644,2280.5,1888,1467.5,1018.5,541,35,-499,-1061,-1650,-2266.5,-2909,-3577,-4270,-4987.5,-5727.5,-6490,-7274,-8077.5,-8899.5,-9739,-10594.5,-11464.5,-12347,-13241,-14144.5,-15056,-15973.5,-16895.5,-17820,-18744.5,-19668,-20588,-21503,-22410.5,-23308.5,-24195,-25068.5,-25926.5,-26767,-27589,-28389,-29166.5,-29919,-30644.5,-31342,-32009.5,-32645,-33247,-33814.5,-34346,-34839.5,-35295,-35710,-36084.5,-36417.5,-36707.5,-36954,-37156.5,-37315,-37428,-37496,37519,37496,37428,37315,37156.5,36954,36707.5,36417.5,36084.5,35710,35295,34839.5,34346,33814.5,33247,32645,32009.5,31342,30644.5,29919,29166.5,28389,27589,26767,25926.5,25068.5,24195,23308.5,22410.5,21503,20588,19668,18744.5,17820,16895.5,15973.5,15056,14144.5,13241,12347,11464.5,10594.5,9739,8899.5,8077.5,7274,6490,5727.5,4987.5,4270,3577,2909,2266.5,1650,1061,499,-35,-541,-1018.5,-1467.5,-1888,-2280.5,-2644,-2979.5,3287,3567,3820,4046,4246,4420,4569.5,4694.5,4796,4875,4931.5,4967.5,4983,4979.5,4958,4919,4863.5,4792.5,4708,4609.5,4499,4377.5,4245.5,4104.5,3955,3798.5,3635.5,3467.5,3294.5,3118.5,2939.5,2758.5,2576.5,2394,2212.5,2031.5,1852.5,1675.5,1502,1331.5,1165,1003,846,694,547.5,407,272.5,144,22.5,-92.5,-201,-302.5,-397,-485,-565.5,-640,-707,-767.5,-822,-869.5,-911,-946.5,-976,-1e3,1018.5,1031.5,1040,1043.5,1042.5,1037.5,1028.5,1016,1000.5,981,959.5,935,908.5,879.5,849,817,783.5,749,714,678,641.5,605,568.5,532,495.5,459.5,424,389.5,355.5,322.5,290.5,259.5,229.5,200.5,173.5,147,122,98.5,76.5,55.5,36,18,1,-14.5,-28.5,-41.5,-53,-63.5,-73,-81.5,-88.5,-94.5,-100,-104,-107.5,-110.5,-112,-113.5,-114,-114,-113.5,-112.5,-111,-109,106.5,104,101,98,95,91.5,88,84.5,80.5,77,73.5,69.5,66,62.5,58.5,55.5,52,48.5,45.5,42.5,39.5,36.5,34,31.5,29,26.5,24.5,22.5,20.5,19,17.5,15.5,14.5,13,12,10.5,9.5,8.5,8,7,6.5,5.5,5,4.5,4,3.5,3.5,3,2.5,2.5,2,2,1.5,1.5,1,1,1,1,.5,.5,.5,.5,.5,.5]),nS.QUANT_LUT_STEP_1=[[0,0,1,1,1,2,2,2,2,2,2,2,2,2],[0,0,0,0,0,0,1,1,1,2,2,2,2,2]],nS.QUANT_TAB={A:91,B:94,C:8,D:12},nS.QUANT_LUT_STEP_2=[[nS.QUANT_TAB.C,nS.QUANT_TAB.C,nS.QUANT_TAB.D],[nS.QUANT_TAB.A,nS.QUANT_TAB.A,nS.QUANT_TAB.A],[nS.QUANT_TAB.B,nS.QUANT_TAB.A,nS.QUANT_TAB.B]],nS.QUANT_LUT_STEP_3=[[68,68,52,52,52,52,52,52,52,52,52,52],[67,67,67,66,66,66,66,66,66,66,66,49,49,49,49,49,49,49,49,49,49,49,49,32,32,32,32,32,32,32],[69,69,69,69,52,52,52,52,52,52,52,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36]],nS.QUANT_LUT_STEP4=[[0,1,2,17],[0,1,2,3,4,5,6,17],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17],[0,1,3,5,6,7,8,9,10,11,12,13,14,15,16,17],[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]],nS.QUANT_TAB=[{levels:3,group:1,bits:5},{levels:5,group:1,bits:7},{levels:7,group:0,bits:3},{levels:9,group:1,bits:10},{levels:15,group:0,bits:4},{levels:31,group:0,bits:5},{levels:63,group:0,bits:6},{levels:127,group:0,bits:7},{levels:255,group:0,bits:8},{levels:511,group:0,bits:9},{levels:1023,group:0,bits:10},{levels:2047,group:0,bits:11},{levels:4095,group:0,bits:12},{levels:8191,group:0,bits:13},{levels:16383,group:0,bits:14},{levels:32767,group:0,bits:15},{levels:65535,group:0,bits:16}];var rS=function(e){function t(t){var n;return(n=e.call(this,t)||this).onDecodeCallback=t.onAudioDecode,n.module=t.wasmModule,n.bufferSize=t.audioBufferSize||131072,n.bufferMode=t.streaming?JE.MODE.EVICT:JE.MODE.EXPAND,n.sampleRate=0,n}_E(t,e);var n=t.prototype;return n.initializeWasmDecoder=function(){this.module.instance?(this.instance=this.module.instance,this.functions=this.module.instance.exports,this.decoder=this.functions._mp2_decoder_create(this.bufferSize,this.bufferMode)):console.warn("JSMpeg: WASM module not compiled yet")},n.destroy=function(){this.decoder&&this.functions._mp2_decoder_destroy(this.decoder)},n.bufferGetIndex=function(){if(this.decoder)return this.functions._mp2_decoder_get_index(this.decoder)},n.bufferSetIndex=function(e){this.decoder&&this.functions._mp2_decoder_set_index(this.decoder,e)},n.bufferWrite=function(e){this.decoder||this.initializeWasmDecoder();for(var t=0,n=0;n<e.length;n++)t+=e[n].length;for(var r=this.functions._mp2_decoder_get_write_ptr(this.decoder,t),s=0;s<e.length;s++)this.instance.heapU8.set(e[s],r),r+=e[s].length;return this.functions._mp2_decoder_did_write(this.decoder,t),t},n.decode=function(){var e=VE();if(!this.decoder)return!1;if(0===this.functions._mp2_decoder_decode(this.decoder))return!1;if(this.sampleRate||(this.sampleRate=this.functions._mp2_decoder_get_sample_rate(this.decoder)),this.destination){var n=this.functions._mp2_decoder_get_left_channel_ptr(this.decoder),r=this.functions._mp2_decoder_get_right_channel_ptr(this.decoder),s=n/Float32Array.BYTES_PER_ELEMENT,a=r/Float32Array.BYTES_PER_ELEMENT,i=this.instance.heapF32.subarray(s,s+t.SAMPLES_PER_FRAME),o=this.instance.heapF32.subarray(a,a+t.SAMPLES_PER_FRAME);this.destination.play(this.sampleRate,i,o)}this.advanceDecodedTime(t.SAMPLES_PER_FRAME/this.sampleRate);var l=VE()-e;return this.onDecodeCallback&&this.onDecodeCallback(this,l),!0},n.getCurrentTime=function(){var e=this.destination?this.destination.enqueuedTime:0;return this.decodedTime-e},t}(ZE);rS.SAMPLES_PER_FRAME=1152;var sS=function(){function e(e){e.canvas?(this.canvas=e.canvas,this.ownsCanvasElement=!1):(this.canvas=document.createElement("canvas"),this.ownsCanvasElement=!0),this.width=this.canvas.width,this.height=this.canvas.height,this.enabled=!0,this.hasTextureData={};var t={preserveDrawingBuffer:!!e.preserveDrawingBuffer,alpha:!1,depth:!1,stencil:!1,antialias:!1,premultipliedAlpha:!1};if(this.gl=this.canvas.getContext("webgl",t)||this.canvas.getContext("experimental-webgl",t),!this.gl)throw new Error("Failed to get WebGL Context");this.handleContextLostBound=this.handleContextLost.bind(this),this.handleContextRestoredBound=this.handleContextRestored.bind(this),this.canvas.addEventListener("webglcontextlost",this.handleContextLostBound,!1),this.canvas.addEventListener("webglcontextrestored",this.handleContextRestoredBound,!1),this.initGL()}var t=e.prototype;return t.initGL=function(){this.hasTextureData={};var t=this.gl,n=null;t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),this.vertexBuffer=t.createBuffer();var r=new Float32Array([0,0,0,1,1,0,1,1]);t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW),this.program=this.createProgram(e.SHADER.VERTEX_IDENTITY,e.SHADER.FRAGMENT_YCRCB_TO_RGBA),n=t.getAttribLocation(this.program,"vertex"),t.enableVertexAttribArray(n),t.vertexAttribPointer(n,2,t.FLOAT,!1,0,0),this.textureY=this.createTexture(0,"textureY"),this.textureCb=this.createTexture(1,"textureCb"),this.textureCr=this.createTexture(2,"textureCr"),this.loadingProgram=this.createProgram(e.SHADER.VERTEX_IDENTITY,e.SHADER.FRAGMENT_LOADING),n=t.getAttribLocation(this.loadingProgram,"vertex"),t.enableVertexAttribArray(n),t.vertexAttribPointer(n,2,t.FLOAT,!1,0,0),this.shouldCreateUnclampedViews=!this.allowsClampedTextureData()},t.handleContextLost=function(e){e.preventDefault(),this.contextLost=!0},t.handleContextRestored=function(){this.initGL()},t.destroy=function(){var e=this.gl;this.deleteTexture(e.TEXTURE0,this.textureY),this.deleteTexture(e.TEXTURE1,this.textureCb),this.deleteTexture(e.TEXTURE2,this.textureCr),e.useProgram(null),e.deleteProgram(this.program),e.deleteProgram(this.loadingProgram),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexBuffer),this.canvas.removeEventListener("webglcontextlost",this.handleContextLostBound,!1),this.canvas.removeEventListener("webglcontextrestored",this.handleContextRestoredBound,!1),this.ownsCanvasElement&&this.canvas.remove()},t.resize=function(e,t){this.width=0|e,this.height=0|t,this.canvas.width=this.width,this.canvas.height=this.height,this.gl.useProgram(this.program);var n=this.width+15>>4<<4;this.gl.viewport(0,0,n,this.height)},t.createTexture=function(e,t){var n=this.gl,r=n.createTexture();return n.bindTexture(n.TEXTURE_2D,r),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.uniform1i(n.getUniformLocation(this.program,t),e),r},t.createProgram=function(e,t){var n=this.gl,r=n.createProgram();return n.attachShader(r,this.compileShader(n.VERTEX_SHADER,e)),n.attachShader(r,this.compileShader(n.FRAGMENT_SHADER,t)),n.linkProgram(r),n.useProgram(r),r},t.compileShader=function(e,t){var n=this.gl,r=n.createShader(e);if(n.shaderSource(r,t),n.compileShader(r),!n.getShaderParameter(r,n.COMPILE_STATUS))throw new Error(n.getShaderInfoLog(r));return r},t.allowsClampedTextureData=function(){var e=this.gl,t=e.createTexture();return e.bindTexture(e.TEXTURE_2D,t),e.texImage2D(e.TEXTURE_2D,0,e.LUMINANCE,1,1,0,e.LUMINANCE,e.UNSIGNED_BYTE,new Uint8ClampedArray([0])),0===e.getError()},t.renderProgress=function(e){var t=this.gl;t.useProgram(this.loadingProgram);var n=t.getUniformLocation(this.loadingProgram,"progress");t.uniform1f(n,e),t.drawArrays(t.TRIANGLE_STRIP,0,4)},t.render=function(e,t,n,r){if(this.enabled){var s=this.gl,a=this.width+15>>4<<4,i=this.height,o=a>>1,l=i>>1;r&&this.shouldCreateUnclampedViews&&(e=new Uint8Array(e.buffer),t=new Uint8Array(t.buffer),n=new Uint8Array(n.buffer)),s.useProgram(this.program),this.updateTexture(s.TEXTURE0,this.textureY,a,i,e),this.updateTexture(s.TEXTURE1,this.textureCb,o,l,t),this.updateTexture(s.TEXTURE2,this.textureCr,o,l,n),s.drawArrays(s.TRIANGLE_STRIP,0,4)}},t.updateTexture=function(e,t,n,r,s){var a=this.gl;a.activeTexture(e),a.bindTexture(a.TEXTURE_2D,t),this.hasTextureData[e]?a.texSubImage2D(a.TEXTURE_2D,0,0,0,n,r,a.LUMINANCE,a.UNSIGNED_BYTE,s):(this.hasTextureData[e]=!0,a.texImage2D(a.TEXTURE_2D,0,a.LUMINANCE,n,r,0,a.LUMINANCE,a.UNSIGNED_BYTE,s))},t.deleteTexture=function(e,t){var n=this.gl;n.activeTexture(e),n.bindTexture(n.TEXTURE_2D,null),n.deleteTexture(t)},e.IsSupported=function(){try{if(!window.WebGLRenderingContext)return!1;var e=document.createElement("canvas");return!(!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(t){return!1}},e}();sS.SHADER={FRAGMENT_YCRCB_TO_RGBA:["precision mediump float;","uniform sampler2D textureY;","uniform sampler2D textureCb;","uniform sampler2D textureCr;","varying vec2 texCoord;","mat4 rec601 = mat4(","1.16438,  0.00000,  1.59603, -0.87079,","1.16438, -0.39176, -0.81297,  0.52959,","1.16438,  2.01723,  0.00000, -1.08139,","0, 0, 0, 1",");","void main() {","float y = texture2D(textureY, texCoord).r;","float cb = texture2D(textureCb, texCoord).r;","float cr = texture2D(textureCr, texCoord).r;","gl_FragColor = vec4(y, cr, cb, 1.0) * rec601;","}"].join("\n"),FRAGMENT_LOADING:["precision mediump float;","uniform float progress;","varying vec2 texCoord;","void main() {","float c = ceil(progress-(1.0-texCoord.y));","gl_FragColor = vec4(c,c,c,1);","}"].join("\n"),VERTEX_IDENTITY:["attribute vec2 vertex;","varying vec2 texCoord;","void main() {","texCoord = vertex;","gl_Position = vec4((vertex * 2.0 - 1.0) * vec2(1, -1), 0.0, 1.0);","}"].join("\n")};var aS=function(){function e(e){e.canvas?(this.canvas=e.canvas,this.ownsCanvasElement=!1):(this.canvas=document.createElement("canvas"),this.ownsCanvasElement=!0),this.width=this.canvas.width,this.height=this.canvas.height,this.enabled=!0,this.context=this.canvas.getContext("2d")}var t=e.prototype;return t.destroy=function(){this.ownsCanvasElement&&this.canvas.remove()},t.resize=function(e,t){this.width=0|e,this.height=0|t,this.canvas.width=this.width,this.canvas.height=this.height,this.imageData=this.context.getImageData(0,0,this.width,this.height),qE(this.imageData.data,255)},t.renderProgress=function(e){var t=this.canvas.width,n=this.canvas.height,r=this.context;r.fillStyle="#222",r.fillRect(0,0,t,n),r.fillStyle="#fff",r.fillRect(0,n-n*e,t,n*e)},t.render=function(e,t,n){this.YCbCrToRGBA(e,t,n,this.imageData.data),this.context.putImageData(this.imageData,0,0)},t.YCbCrToRGBA=function(e,t,n,r){if(this.enabled)for(var s,a,i,o,l,u=this.width+15>>4<<4,c=u>>1,d=0,h=u,p=u+(u-this.width),A=0,f=c-(this.width>>1),g=0,m=4*this.width,y=4*this.width,b=this.width>>1,v=this.height>>1,I=0;I<v;I++){for(var x=0;x<b;x++){s=t[A],a=n[A],A++,i=s+(103*s>>8)-179,o=(88*a>>8)-44+(183*s>>8)-91,l=a+(198*a>>8)-227;var w=e[d++],k=e[d++];r[g]=w+i,r[g+1]=w-o,r[g+2]=w+l,r[g+4]=k+i,r[g+5]=k-o,r[g+6]=k+l,g+=8;var C=e[h++],E=e[h++];r[m]=C+i,r[m+1]=C-o,r[m+2]=C+l,r[m+4]=E+i,r[m+5]=E-o,r[m+6]=E+l,m+=8}d+=p,h+=p,g+=y,m+=y,A+=f}},e}(),iS=function(){function e(){this.context=e.CachedContext=e.CachedContext||new(window.AudioContext||window.webkitAudioContext),this.gain=this.context.createGain(),this.destination=this.gain,this.gain.connect(this.context.destination),this.context._connections=(this.context._connections||0)+1,this.startTime=0,this.buffer=null,this.wallclockStartTime=0,this.volume=1,this.enabled=!0,this.unlocked=!e.NeedsUnlocking(),Object.defineProperty(this,"enqueuedTime",{get:this.getEnqueuedTime})}var t=e.prototype;return t.destroy=function(){this.gain.disconnect(),this.context._connections--,0===this.context._connections&&(this.context.close(),e.CachedContext=null)},t.play=function(e,t,n){if(this.enabled){if(!this.unlocked){var r=VE();return this.wallclockStartTime<r&&(this.wallclockStartTime=r),void(this.wallclockStartTime+=t.length/e)}this.gain.gain.value=this.volume;var s=this.context.createBuffer(2,t.length,e);s.getChannelData(0).set(t),s.getChannelData(1).set(n);var a=this.context.createBufferSource();a.buffer=s,a.connect(this.destination);var i=this.context.currentTime,o=s.duration;this.startTime<i&&(this.startTime=i,this.wallclockStartTime=VE()),a.start(this.startTime),this.startTime+=o,this.wallclockStartTime+=o}},t.stop=function(){this.gain.gain.value=0},t.getEnqueuedTime=function(){return Math.max(this.wallclockStartTime-VE(),0)},t.resetEnqueuedTime=function(){this.startTime=this.context.currentTime,this.wallclockStartTime=VE()},t.unlock=function(e){if(this.unlocked)e&&e();else{this.unlockCallback=e;var t=this.context.createBuffer(1,1,22050),n=this.context.createBufferSource();n.buffer=t,n.connect(this.destination),n.start?n.start(0):n.noteOn(0),setTimeout(this.checkIfUnlocked.bind(this,n,0),0)}},t.checkIfUnlocked=function(e,t){e.playbackState===e.PLAYING_STATE||e.playbackState===e.FINISHED_STATE?(this.unlocked=!0,this.unlockCallback&&(this.unlockCallback(),this.unlockCallback=null)):t<10&&setTimeout(this.checkIfUnlocked.bind(this,e,t+1),100)},e.NeedsUnlocking=function(){return/iPhone|iPad|iPod/i.test(navigator.userAgent)},e.IsSupported=function(){return window.AudioContext||window.webkitAudioContext},e}();iS.CachedContext=null;var oS=function(){function e(){this.stackSize=5242880,this.pageSize=65536,this.onInitCallbacks=[],this.ready=!1,this.loadingFromFileStarted=!1,this.loadingFromBufferStarted=!1}var t=e.prototype;return t.write=function(e){this.loadFromBuffer(e)},t.loadFromFile=function(e,t){if(t&&this.onInitCallbacks.push(t),!this.loadingFromFileStarted){this.loadingFromFileStarted=!0,this.onInitCallback=t;var n=new YE(e,{});n.connect(this),n.start()}},t.loadFromBuffer=function(e,t){var n=this;if(t&&this.onInitCallbacks.push(t),!this.loadingFromBufferStarted)if(this.loadingFromBufferStarted=!0,this.moduleInfo=this.readDylinkSection(e),this.moduleInfo){this.memory=new WebAssembly.Memory({initial:256});var r={memory:this.memory,memoryBase:0,__memory_base:0,table:new WebAssembly.Table({initial:this.moduleInfo.tableSize,element:"anyfunc"}),tableBase:0,__table_base:0,abort:this.c_abort.bind(this),___assert_fail:this.c_assertFail.bind(this),_sbrk:this.c_sbrk.bind(this)};this.brk=this.align(this.moduleInfo.memorySize+this.stackSize),WebAssembly.instantiate(e,{env:r}).then((function(e){n.instance=e.instance,n.instance.exports.__post_instantiate&&n.instance.exports.__post_instantiate(),n.createHeapViews(),n.ready=!0;for(var t=0;t<n.onInitCallbacks.length;t++)n.onInitCallbacks[t](n)}))}else for(var s=0;s<this.onInitCallbacks.length;s++)this.onInitCallbacks[s](null)},t.createHeapViews=function(){this.instance.heapU8=new Uint8Array(this.memory.buffer),this.instance.heapU32=new Uint32Array(this.memory.buffer),this.instance.heapF32=new Float32Array(this.memory.buffer)},t.align=function(e){var t=Math.pow(2,this.moduleInfo.memoryAlignment);return Math.ceil(e/t)*t},t.c_sbrk=function(e){var t=this.brk;if(this.brk+=e,this.brk>this.memory.buffer.byteLength){var n=this.brk-this.memory.buffer.byteLength,r=Math.ceil(n/this.pageSize);this.memory.grow(r),this.createHeapViews()}return t},t.c_abort=function(e){console.warn("JSMPeg: WASM abort",arguments)},t.c_assertFail=function(e){console.warn("JSMPeg: WASM ___assert_fail",arguments)},t.readDylinkSection=function(e){var t=new Uint8Array(e),n=0,r=function(){for(var e=0,r=1;;){var s=t[n++];if(e+=(127&s)*r,r*=128,!(128&s))return e}},s=function(e){for(var r=0;r<e.length;r++){var s="string"===typeof e[r]?e[r].charCodeAt(0):e[r];if(t[n++]!==s)return!1}return!0};return s([0,"a","s","m"])?(n=9,r(),s([6,"d","y","l","i","n","k"])?{memorySize:r(),memoryAlignment:r(),tableSize:r(),tableAlignment:r()}:(console.warn("JSMpeg: No dylink section found in WASM"),null)):(console.warn("JSMpeg: WASM header not found"),null)},e.IsSupported=function(){return!!window.WebAssembly},e.GetModule=function(){return e.CACHED_MODULE=e.CACHED_MODULE||new e,e.CACHED_MODULE},e}(),lS="AGFzbQEAAAAADwZkeWxpbmuA0MACBAAAAAE0CWAEf39/fwBgAX8Bf2ACf38Bf2ABfwBgAn9/AGABfwF9YAZ/f39/f38AYAN/f38Bf2AAAAJGBANlbnYOX19fYXNzZXJ0X2ZhaWwAAANlbnYFX3NicmsAAQNlbnYNX19tZW1vcnlfYmFzZQN/AANlbnYGbWVtb3J5AgCAAgM9PAIDAgEEBAMBBQEBAQEBAQEDBAMGAwQAAwAAAAIDAgEEBAEBAQEBAAACAwIBAgECAQEBAQMEAwMCBwcHCAYLAn8BQQALfwFBAAsHggYfEl9fcG9zdF9pbnN0YW50aWF0ZQA9BV9mcmVlADgHX21hbGxvYwAxB19tZW1jcHkAOghfbWVtbW92ZQA7B19tZW1zZXQAPBNfbXAyX2RlY29kZXJfY3JlYXRlAB0TX21wMl9kZWNvZGVyX2RlY29kZQAmFF9tcDJfZGVjb2Rlcl9kZXN0cm95AB4WX21wMl9kZWNvZGVyX2RpZF93cml0ZQAiFl9tcDJfZGVjb2Rlcl9nZXRfaW5kZXgAICFfbXAyX2RlY29kZXJfZ2V0X2xlZnRfY2hhbm5lbF9wdHIAJCJfbXAyX2RlY29kZXJfZ2V0X3JpZ2h0X2NoYW5uZWxfcHRyACUcX21wMl9kZWNvZGVyX2dldF9zYW1wbGVfcmF0ZQAjGl9tcDJfZGVjb2Rlcl9nZXRfd3JpdGVfcHRyAB8WX21wMl9kZWNvZGVyX3NldF9pbmRleAAhFV9tcGVnMV9kZWNvZGVyX2NyZWF0ZQACFV9tcGVnMV9kZWNvZGVyX2RlY29kZQARFl9tcGVnMV9kZWNvZGVyX2Rlc3Ryb3kAAxhfbXBlZzFfZGVjb2Rlcl9kaWRfd3JpdGUABxlfbXBlZzFfZGVjb2Rlcl9nZXRfY2JfcHRyABAdX21wZWcxX2RlY29kZXJfZ2V0X2NvZGVkX3NpemUACxlfbXBlZzFfZGVjb2Rlcl9nZXRfY3JfcHRyAA8dX21wZWcxX2RlY29kZXJfZ2V0X2ZyYW1lX3JhdGUAChlfbXBlZzFfZGVjb2Rlcl9nZXRfaGVpZ2h0AA0YX21wZWcxX2RlY29kZXJfZ2V0X2luZGV4AAUYX21wZWcxX2RlY29kZXJfZ2V0X3dpZHRoAAwcX21wZWcxX2RlY29kZXJfZ2V0X3dyaXRlX3B0cgAEGF9tcGVnMV9kZWNvZGVyX2dldF95X3B0cgAOIl9tcGVnMV9kZWNvZGVyX2hhc19zZXF1ZW5jZV9oZWFkZXIACRhfbXBlZzFfZGVjb2Rlcl9zZXRfaW5kZXgABgql2AE8IQEBf0GcBBAxIgJBAEGcBBA8GiACIAAgARAqNgKAASACC08AIAAoAoABECsgAEFAaygCAEUEQCAAEDgPCyAAKAKEARA4IAAoAogBEDggACgCjAEQOCAAKAKQARA4IAAoApQBEDggACgCmAEQOCAAEDgLDAAgACgCgAEgARAsCwsAIAAoAoABKAIECw0AIAAoAoABIAE2AgQLOQEBfyAAKAKAASICIAEgAigCDGo2AgwgAEFAaygCAARADwsgACgCgAFBswEQLkF/RgRADwsgABAIC6sGAQt/IAAoAgQhAiAAKAIIIQMgACAAKAKAAUEMEDA2AgQgACAAKAKAAUEMEDA2AgggACgCgAEiASABKAIEQQRqNgIEIAAoAoABQQQQMCEBIAAjACABQQJ0aigCADYCACAAKAKAASIBIAEoAgRBHmo2AgQgACgCgAFBARAwBEBBACEBA0AgACgCgAFBCBAwQf8BcSEEIAEjAEFAa2otAAAgAEGcA2pqIAQ6AAAgAUEBaiIBQcAARw0ACwUgACMAKQKAATcCnAMgACMAKQKIATcCpAMgACMAKQKQATcCrAMgACMAKQKYATcCtAMgACMAKQKgATcCvAMgACMAKQKoATcCxAMgACMAKQKwATcCzAMgACMAKQK4ATcC1AMLIAAoAoABQQEQMARAQQAhAQNAIAEjAEFAa2otAAAgAEHcA2pqIAAoAoABQQgQMDoAACABQQFqIgFBwABHDQALBSAAQpCgwICBgoSIEDcC3AMgAEKQoMCAgYKEiBA3AuQDIABCkKDAgIGChIgQNwLsAyAAQpCgwICBgoSIEDcC9AMgAEKQoMCAgYKEiBA3AvwDIABCkKDAgIGChIgQNwKEBCAAQpCgwICBgoSIEDcCjAQgAEKQoMCAgYKEiBA3ApQECyAAQUBrIgsoAgAEQCACIAAoAgRGBEAgAyAAKAIIRgRADwsLIABBhAFqIgMoAgAQOCAAQYgBaiIEKAIAEDggAEGMAWoiBigCABA4IABBkAFqIgcoAgAQOCAAQZQBaiIIKAIAEDggAEGYAWoiASgCABA4BSAAQZgBaiEBIABBjAFqIQYgAEGIAWohBCAAQZQBaiEIIABBhAFqIQMgAEGQAWohBwsgACAAKAIEQQ9qIgJBBHUiCTYCDCAAIAAoAghBD2oiBUEEdSIKNgIQIAAgCSAKbDYCFCAAIAJBcHEiAjYCGCAAIAVBcHEiBTYCHCAAIAIgBWwiAjYCICAAIAlBA3Q2AiQgACAKQQN0NgIoIAMgAhAxNgIAIAQgAkECdSIAEDE2AgAgBiAAEDE2AgAgByACEDE2AgAgCCAAEDE2AgAgASAAEDE2AgAgC0EBNgIACwoAIABBQGsoAgALBwAgACoCAAsHACAAKAIgCwcAIAAoAgQLBwAgACgCCAsIACAAKAKQAQsIACAAKAKUAQsIACAAKAKYAQsqACAAQUBrKAIARQRAQQAPCyAAKAKAAUEAEC5Bf0YEQEEADwsgABASQQEL3wIBAn8jASECIwFBEGokASAAKAKAASIBIAEoAgRBCmo2AgQgACAAKAKAAUEDEDA2AiwgACgCgAEiASABKAIEQRBqNgIEIAAoAiwiAUF/akEBSwRAIAIkAQ8LIAFBAkYEQCAAIAAoAoABQQEQMDYCMCAAIAAoAoABQQMQMCIBNgI0IAEEQCAAIAFBf2oiATYCOCAAQQEgAXQ2AjwFIAIkAQ8LCwNAAkAgACgCgAEQLSIBQbIBaw4EAQAAAQALCyABQX9qQa8BSQRAA0AgACABQf8BcRATIAAoAoABEC0iAUF/akGvAUkNAAsLIAFBf0cEQCAAKAKAASIBIAEoAgRBIGs2AgQLIAAoAixBf2pBAk8EQCACJAEPCyACIAApApABNwIAIAIgACgCmAE2AgggACAAKQKEATcCkAEgACAAKAKMATYCmAEgACACKQIANwKEASAAIAIoAgg2AowBIAIkAQuSAQAgAEEBNgJIIAAgACgCDCABQX9qbEF/ajYCTCAAQgA3AmQgAEIANwJsIABBgAE2AnQgAEGAATYCeCAAQYABNgJ8IAAgACgCgAFBBRAwNgJEIAAoAoABQQEQMARAA0AgACgCgAEiASABKAIEQQhqNgIEIAAoAoABQQEQMA0ACwsDQCAAEBQgACgCgAEQL0UNAAsLngkBBH8gACgCgAEhAgJAAkADQAJAIAJBARAwIAFqIQEjAEHAAWogAUECdGooAgAiAUF/TA0AIwBBwAFqIAFBAnRqKAIADQEMAgsLIAFBAmohAkEAIQEMAQsgAUECaiIBQbwBRgRAAkADQAJAIAAoAoABIQJBACEBA0AgAkEBEDAgAWohASMAQcABaiABQQJ0aigCACIBQX9MDQEjAEHAAWogAUECdGooAgANAAsgAUECaiIBQbwBRg0BDAILCyABQQJqIQJBACEBDAILCyABQbkBRgRAQQAhAQNAAkAgAUEhaiEBIAAoAoABIQNBACECA0AgA0EBEDAgAmohAiMAQcABaiACQQJ0aigCACICQX9MDQEjAEHAAWogAkECdGooAgANAAsgAkECaiICQbkBRg0BDAMLCyACQQJqIQIFIAEhAkEAIQELCyABIwBBwAFqIAJBAnRqKAIAaiECIAAoAkgEQCAAQQA2AkggACAAKAJMIAJqIgE2AkwFAkAgACgCTCIBIAJqIAAoAhROBEAPCyACQQFMBEAgACABQQFqIgE2AkwMAQsgAEGAATYCdCAAQYABNgJ4IABBgAE2AnwgACgCLEECRgRAIABCADcCZCAAQgA3AmwLIAAgAUEBaiIBNgJMA0AgACABIAAoAgwiBG0iAzYCUCAAIAEgAyAEbGs2AlQgACAAKAJkIAAoAmggACgCkAEgACgClAEgACgCmAEQFSACQX9qIQMgACAAKAJMQQFqIgE2AkwgAkECSgRAIAMhAgwBCwsLCyAAIAEgACgCDCIDbSICNgJQIAAgASACIANsazYCVAJAAkACQAJAIAAoAixBAWsOAgABAgsgACgCgAEhAkEAIQEDQAJAIAJBARAwIAFqIQMjAEHQCGogA0ECdGooAgAhASADQQNGDQBB5A0gAXZBAXFFDQELCyAAQdgAaiIDIwAgAUECdGpB2AhqKAIAIgI2AgAgAyEBDAILIAAoAoABIQJBACEBA0ACQCACQQEQMCABaiEDIwBBgAlqIANBAnRqKAIAIQEgA0EbRg0AIwBBgAlqIAFBAnRqKAIADQELCyAAQdgAaiIDIwAgAUECdGpBiAlqKAIAIgI2AgAgAyEBDAELIABB2ABqIgEoAgAhAgsgACACQQFxIgM2AlwgACACQQhxNgJgIAJBEHEEQCAAIAAoAoABQQUQMDYCRCAAKAJcIQMLIAMEQCAAQgA3AmQgAEIANwJsBSAAQYABNgJ0IABBgAE2AnggAEGAATYCfCAAEBYgACAAKAJkIAAoAmggACgCkAEgACgClAEgACgCmAEQFQsgASgCAEECcQR/IAAoAoABIQJBACEBA0ACQCACQQEQMCABaiEDIwBBsApqIANBAnRqKAIAIQEgA0HDAUYNACMAQbAKaiABQQJ0aigCAA0BCwsjACABQQJ0akG4CmooAgAFQT9BACAAKAJcGwsiAUEgcQRAIABBABAXCyABQRBxBEAgAEEBEBcLIAFBCHEEQCAAQQIQFwsgAUEEcQRAIABBAxAXCyABQQJxBEAgAEEEEBcLIAFBAXFFBEAPCyAAQQUQFwuEJwEPfyAAKAKEASEKIAAoAowBIRAgACgCiAEhESAAKAIYIghBcGohCyACQQFxQQBHIQwgACgCVCIJQQR0IAFBAXVqIAggACgCUCINQQR0IAJBAXVqbGohByAJIAggDWxqQQJ0IgkgCEECdCIGaiENIAZBAEohBgJAIAFBAXEEQCAMBEAgBkUNAiALQQJ1IQsDQCAJQQJ0IApqIAMgB0EDaiIGai0AACADIAYgCGpqLQAAaiIGIAMgB0EEaiIMai0AACADIAggDGpqLQAAaiIMakEWdEGAgIAEakGAgIB4cSADIAdBAmoiDmotAAAgAyAIIA5qai0AAGoiDiAGakEOdEGAgAJqQYCA/AdxIAMgB0EBaiIGai0AACADIAYgCGpqLQAAaiIGIAMgB2otAAAgAyAHIAhqai0AAGpBAmpqQQJ2Qf8BcSAGIA5qQQZ0QYABakGA/gNxcnJyNgIAIAlBAWpBAnQgCmogAyAHQQdqIgZqLQAAIAMgBiAIamotAABqIgYgAyAHQQhqIg5qLQAAIAMgCCAOamotAABqIg5qQRZ0QYCAgARqQYCAgHhxIAMgB0EGaiIPai0AACADIAggD2pqLQAAaiIPIAZqQQ50QYCAAmpBgID8B3EgAyAHQQVqIgZqLQAAIAMgBiAIamotAABqIgYgDEECampBAnZB/wFxIAYgD2pBBnRBgAFqQYD+A3FycnI2AgAgCUECakECdCAKaiADIAdBC2oiBmotAAAgAyAGIAhqai0AAGoiBiADIAdBDGoiDGotAAAgAyAIIAxqai0AAGoiDGpBFnRBgICABGpBgICAeHEgAyAHQQpqIg9qLQAAIAMgCCAPamotAABqIg8gBmpBDnRBgIACakGAgPwHcSADIAdBCWoiBmotAAAgAyAGIAhqai0AAGoiBiAOQQJqakECdkH/AXEgBiAPakEGdEGAAWpBgP4DcXJycjYCACAJQQNqQQJ0IApqIAMgB0EPaiIGai0AACADIAYgCGpqLQAAaiIGIAMgB0EQaiIOai0AACADIAggDmpqLQAAampBFnRBgICABGpBgICAeHEgAyAHQQ5qIg5qLQAAIAMgCCAOamotAABqIg4gBmpBDnRBgIACakGAgPwHcSADIAdBDWoiBmotAAAgAyAGIAhqai0AAGoiBiAMQQJqakECdkH/AXEgBiAOakEGdEGAAWpBgP4DcXJycjYCACAHIAhqIQcgCUEEaiALaiIJIA1IDQALBSAGRQ0CIAtBAnUhCwNAIAlBAnQgCmogAyAHQQNqai0AACIGIAMgB0EEamotAAAiDGpBF3RBgICABGpBgICAeHEgAyAHQQJqai0AACIOIAZqQQ90QYCAAmpBgID8B3EgDiADIAdBAWpqLQAAIgZqQQd0QYABakGA/gNxIAMgB2otAABBAWogBmpBAXZB/wFxcnJyNgIAIAlBAWpBAnQgCmogAyAHQQdqai0AACIGIAMgB0EIamotAAAiDmpBF3RBgICABGpBgICAeHEgAyAHQQZqai0AACIPIAZqQQ90QYCAAmpBgID8B3EgDyADIAdBBWpqLQAAIgZqQQd0QYABakGA/gNxIAxBAWogBmpBAXZB/wFxcnJyNgIAIAlBAmpBAnQgCmogAyAHQQtqai0AACIGIAMgB0EMamotAAAiDGpBF3RBgICABGpBgICAeHEgAyAHQQpqai0AACIPIAZqQQ90QYCAAmpBgID8B3EgDyADIAdBCWpqLQAAIgZqQQd0QYABakGA/gNxIA5BAWogBmpBAXZB/wFxcnJyNgIAIAlBA2pBAnQgCmogAyAHQQ9qai0AACIGIAMgB0EQamotAABqQRd0QYCAgARqQYCAgHhxIAMgB0EOamotAAAiDiAGakEPdEGAgAJqQYCA/AdxIA4gAyAHQQ1qai0AACIGakEHdEGAAWpBgP4DcSAMQQFqIAZqQQF2Qf8BcXJycjYCACAHIAhqIQcgCUEEaiALaiIJIA1IDQALCwUgDARAIAZFDQIgC0ECdSELA0AgCUECdCAKaiADIAdBA2oiBmotAAAgAyAGIAhqai0AAGpBF3RBgICABGpBgICAeHEgAyAHQQJqIgZqLQAAIAMgBiAIamotAABqQQ90QYCAAmpBgID8B3EgAyAHIAhqai0AACADIAdqLQAAQQFqakEBdkH/AXEgAyAHQQFqIgZqLQAAIAMgBiAIamotAABqQQd0QYABakGA/gNxcnJyNgIAIAlBAWpBAnQgCmogAyAHQQdqIgZqLQAAIAMgBiAIamotAABqQRd0QYCAgARqQYCAgHhxIAMgB0EGaiIGai0AACADIAYgCGpqLQAAakEPdEGAgAJqQYCA/AdxIAMgB0EEaiIGai0AAEEBaiADIAYgCGpqLQAAakEBdkH/AXEgAyAHQQVqIgZqLQAAIAMgBiAIamotAABqQQd0QYABakGA/gNxcnJyNgIAIAlBAmpBAnQgCmogAyAHQQtqIgZqLQAAIAMgBiAIamotAABqQRd0QYCAgARqQYCAgHhxIAMgB0EKaiIGai0AACADIAYgCGpqLQAAakEPdEGAgAJqQYCA/AdxIAMgB0EIaiIGai0AAEEBaiADIAYgCGpqLQAAakEBdkH/AXEgAyAHQQlqIgZqLQAAIAMgBiAIamotAABqQQd0QYABakGA/gNxcnJyNgIAIAlBA2pBAnQgCmogAyAHQQ9qIgZqLQAAIAMgBiAIamotAABqQRd0QYCAgARqQYCAgHhxIAMgB0EOaiIGai0AACADIAYgCGpqLQAAakEPdEGAgAJqQYCA/AdxIAMgB0EMaiIGai0AAEEBaiADIAYgCGpqLQAAakEBdkH/AXEgAyAHQQ1qIgZqLQAAIAMgBiAIamotAABqQQd0QYABakGA/gNxcnJyNgIAIAcgCGohByAJQQRqIAtqIgkgDUgNAAsFIAZFDQIgC0ECdSELA0AgCUECdCAKaiADIAdqLQAAIAMgB0EBamotAABBCHRyIAMgB0ECamotAABBEHRyIAMgB0EDamotAABBGHRyNgIAIAlBAWpBAnQgCmogAyAHQQRqai0AACADIAdBBWpqLQAAQQh0ciADIAdBBmpqLQAAQRB0ciADIAdBB2pqLQAAQRh0cjYCACAJQQJqQQJ0IApqIAMgB0EIamotAAAgAyAHQQlqai0AAEEIdHIgAyAHQQpqai0AAEEQdHIgAyAHQQtqai0AAEEYdHI2AgAgCUEDakECdCAKaiADIAdBDGpqLQAAIAMgB0ENamotAABBCHRyIAMgB0EOamotAABBEHRyIAMgB0EPamotAABBGHRyNgIAIAcgCGohByAJQQRqIAtqIgkgDUgNAAsLCwsgACgCJCIDQXhqIQcgAkECbSICQQFxQQBHIQggACgCVCIJQQN0IAFBAm0iCkEBdWogAyAAKAJQIgFBA3QgAkEBdWpsaiEAIAkgASADbGpBAXQiASADQQF0IglqIQIgCUEASiEJIApBAXEEQCAIBEAgCUUEQA8LIAdBAnUhDgNAIAMgAEEBaiIHaiEJIAMgAEECaiIIaiEKIAMgAEEDaiILaiENIAMgAEEEaiIGaiEMIAUgC2otAAAgBSANai0AAGoiDyAFIAZqLQAAIAUgDGotAABqIhJqQRZ0QYCAgARqQYCAgHhxIAUgCGotAAAgBSAKai0AAGoiEyAPakEOdEGAgAJqQYCA/AdxIAUgB2otAAAgBSAJai0AAGoiDyAAIAVqLQAAIAUgACADaiIUai0AAGpBAmpqQQJ2Qf8BcSAPIBNqQQZ0QYABakGA/gNxcnJyIQ8gAUECdCARaiAEIAtqLQAAIAQgDWotAABqIgsgBCAGai0AACAEIAxqLQAAaiITakEWdEGAgIAEakGAgIB4cSAEIAhqLQAAIAQgCmotAABqIgggC2pBDnRBgIACakGAgPwHcSAEIAdqLQAAIAQgCWotAABqIgcgACAEai0AACAEIBRqLQAAakECampBAnZB/wFxIAcgCGpBBnRBgAFqQYD+A3FycnI2AgAgAUECdCAQaiAPNgIAIAMgAEEFaiIHaiEJIAMgAEEGaiIIaiEKIAMgAEEHaiILaiENIAMgAEEIaiIGaiEMIAUgC2otAAAgBSANai0AAGoiDyAFIAZqLQAAIAUgDGotAABqakEWdEGAgIAEakGAgIB4cSAFIAhqLQAAIAUgCmotAABqIhQgD2pBDnRBgIACakGAgPwHcSAFIAdqLQAAIAUgCWotAABqIg8gEkECampBAnZB/wFxIA8gFGpBBnRBgAFqQYD+A3FycnIhDyABQQFqIhJBAnQgEWogBCALai0AACAEIA1qLQAAaiILIAQgBmotAAAgBCAMai0AAGpqQRZ0QYCAgARqQYCAgHhxIAQgCGotAAAgBCAKai0AAGoiCCALakEOdEGAgAJqQYCA/AdxIAQgB2otAAAgBCAJai0AAGoiByATQQJqakECdkH/AXEgByAIakEGdEGAAWpBgP4DcXJycjYCACASQQJ0IBBqIA82AgAgACADaiEAIAFBAmogDmoiASACSA0ACwUgCUUEQA8LIAdBAnUhCwNAIAQgAEEBaiINai0AACEHIAQgAEECaiIGai0AACEJIAQgAEEDaiIMai0AACEIIAQgAEEEaiIOai0AACEKIAUgDGotAAAiDCAFIA5qLQAAIg5qQRd0QYCAgARqQYCAgHhxIAUgBmotAAAiBiAMakEPdEGAgAJqQYCA/AdxIAUgDWotAAAiDSAAIAVqLQAAQQFqakEBdkH/AXEgBiANakEHdEGAAWpBgP4DcXJyciENIAFBAnQgEWogCCAKakEXdEGAgIAEakGAgIB4cSAIIAlqQQ90QYCAAmpBgID8B3EgACAEai0AAEEBaiAHakEBdkH/AXEgByAJakEHdEGAAWpBgP4DcXJycjYCACABQQJ0IBBqIA02AgAgBCAAQQVqIg1qLQAAIQcgBCAAQQZqIgZqLQAAIQkgBCAAQQdqIgxqLQAAIQggBSAMai0AACIMIAUgAEEIaiIPai0AAGpBF3RBgICABGpBgICAeHEgBSAGai0AACIGIAxqQQ90QYCAAmpBgID8B3EgBSANai0AACINIA5BAWpqQQF2Qf8BcSAGIA1qQQd0QYABakGA/gNxcnJyIQ0gAUEBaiIGQQJ0IBFqIAggBCAPai0AAGpBF3RBgICABGpBgICAeHEgCCAJakEPdEGAgAJqQYCA/AdxIApBAWogB2pBAXZB/wFxIAcgCWpBB3RBgAFqQYD+A3FycnI2AgAgBkECdCAQaiANNgIAIAAgA2ohACABQQJqIAtqIgEgAkgNAAsLBSAIBEAgCUUEQA8LIAdBAnUhDgNAIAMgAEEBaiIHaiEJIAMgAEECaiIIaiEKIAMgAEEDaiILaiENIAUgC2otAAAgBSANai0AAGpBF3RBgICABGpBgICAeHEgBSAIai0AACAFIApqLQAAakEPdEGAgAJqQYCA/AdxIAUgACADaiIGai0AACAAIAVqLQAAQQFqakEBdkH/AXEgBSAHai0AACAFIAlqLQAAakEHdEGAAWpBgP4DcXJyciEMIAFBAnQgEWogBCALai0AACAEIA1qLQAAakEXdEGAgIAEakGAgIB4cSAEIAhqLQAAIAQgCmotAABqQQ90QYCAAmpBgID8B3EgBCAGai0AACAAIARqLQAAQQFqakEBdkH/AXEgBCAHai0AACAEIAlqLQAAakEHdEGAAWpBgP4DcXJycjYCACABQQJ0IBBqIAw2AgAgAyAAQQRqIgdqIQkgAyAAQQVqIghqIQogAyAAQQZqIgtqIQ0gAyAAQQdqIgZqIQwgBSAGai0AACAFIAxqLQAAakEXdEGAgIAEakGAgIB4cSAFIAtqLQAAIAUgDWotAABqQQ90QYCAAmpBgID8B3EgBSAJai0AACAFIAdqLQAAQQFqakEBdkH/AXEgBSAIai0AACAFIApqLQAAakEHdEGAAWpBgP4DcXJyciEPIAFBAWoiEkECdCARaiAEIAZqLQAAIAQgDGotAABqQRd0QYCAgARqQYCAgHhxIAQgC2otAAAgBCANai0AAGpBD3RBgIACakGAgPwHcSAEIAlqLQAAIAQgB2otAABBAWpqQQF2Qf8BcSAEIAhqLQAAIAQgCmotAABqQQd0QYABakGA/gNxcnJyNgIAIBJBAnQgEGogDzYCACAAIANqIQAgAUECaiAOaiIBIAJIDQALBSAJRQRADwsgB0ECdSEHA0AgACAFai0AACAFIABBAWoiCWotAABBCHRyIAUgAEECaiIIai0AAEEQdHIgBSAAQQNqIgpqLQAAQRh0ciELIAFBAnQgEWogACAEai0AACAEIAlqLQAAQQh0ciAEIAhqLQAAQRB0ciAEIApqLQAAQRh0cjYCACABQQJ0IBBqIAs2AgAgBSAAQQRqIglqLQAAIAUgAEEFaiIIai0AAEEIdHIgBSAAQQZqIgpqLQAAQRB0ciAFIABBB2oiC2otAABBGHRyIQ0gAUEBaiIGQQJ0IBFqIAQgCWotAAAgBCAIai0AAEEIdHIgBCAKai0AAEEQdHIgBCALai0AAEEYdHI2AgAgBkECdCAQaiANNgIAIAAgA2ohACABQQJqIAdqIgEgAkgNAAsLCwu8BAEDfyAAKAJgRQRAIAAoAixBAkcEQA8LIABCADcCZCAAQgA3AmwPCyAAKAKAASECA0ACQCACQQEQMCABaiEBIwBBoBZqIAFBAnRqKAIAIgFBf0wNACMAQaAWaiABQQJ0aigCAA0BCwsjACABQQJ0akGoFmooAgAiAQRAIAAoAjxBAUcEQCAAKAKAASAAKAI4EDAgAUEAIAFrIAFBf0obQX9qIAAoAjh0aiICQX9zIAJBAWogAUEASBshAQsFQQAhAQsgACAAKAJsIAFqIgE2AmwCQAJAIAEgACgCPCICQQR0IgNIBEAgAUEAIANrSARAIAEgAkEFdGohAQwCCwUgASACQQV0ayEBDAELDAELIAAgATYCbAsgACABNgJkIAAoAjAEQCAAIAFBAXQ2AmQLIAAoAoABIQJBACEBA0ACQCACQQEQMCABaiEBIwBBoBZqIAFBAnRqKAIAIgFBf0wNACMAQaAWaiABQQJ0aigCAA0BCwsjACABQQJ0akGoFmooAgAiAQRAIAAoAjxBAUcEQCAAKAKAASAAKAI4EDAgAUEAIAFrIAFBf0obQX9qIAAoAjh0aiICQX9zIAJBAWogAUEASBshAQsFQQAhAQsgACAAKAJwIAFqIgE2AnACQAJAIAEgACgCPCICQQR0IgNIBEAgAUEAIANrSARAIAEgAkEFdGohAQwCCwUgASACQQV0ayEBDAELDAELIAAgATYCcAsgACABNgJoIAAoAjBFBEAPCyAAIAFBAXQ2AmgLpAgBBX8gACgCXAR/An8gAUEESCIFBH8gACgCdCEDIAAoAoABIQYDfyAGQQEQMCACaiEEIwBB0BxqIARBAnRqKAIAIQIjAEHQHGogBEEuRg0CGiMAQdAcaiACQQJ0aigCAA0AIwBB0BxqCwUgAEH4AGogAEH8AGogAUEERhsoAgAhAyAAKAKAASEGA38gBkEBEDAgAmohBCMAQbAeaiAEQQJ0aigCACECIwBBsB5qIARBLkYNAhojAEGwHmogAkECdGooAgANACMAQbAeagsLCyEEIAAgAkECakECdCAEaigCACICQQBKBH8gACgCgAEgAhAwIgRBASACQX9qdHEEfyADIARqBSAEQQFqQX8gAnRyIANqCwUgAwsiAjYCnAEgBQR/IABBnAFqIQMgAEH0AGoFIABBnAFqIQMgAEH4AGogAEH8AGogAUEERhsLIAI2AgAgAyACQQh0NgIAIABBnANqIQVBAQUgAEHcA2ohBUEACyECA0ACQCAAKAKAASEGQQAhAwNAAkAgBkEBEDAgA2ohBCMAQZAgaiAEQQJ0aigCACEDIARB/AFGDQAjAEGQIGogA0ECdGooAgANAQsLIwBBkCBqIANBAmoiA0ECdGooAgAhBgJAAkAgA0EIRiACQQBKcQR/IAAoAoABQQEQMEUNAwwBBQJ/IANBzQBHDQIgACgCgAFBBhAwIQMCQAJAIAAoAoABQQgQMCIEIgYEQCAGQYABRgRADAIFDAMLAAsgACgCgAFBCBAwDAILIAAoAoABQQgQMEGAfmoMAQsgBEGAfmogBCAEQYABShsLCyEEDAELIAZB/wFxIgNBACADayAAKAKAAUEBEDBFGyEEIAZBCHUhAwsgAiADaiIGIwBBQGtqLQAAIgMgBWotAAAgACgCREEAIARBAXQiAkEfdUEBciAAKAJcGyACamxsIgJBBHVBAEEBQX8gAkEPShsgAkEQcRtrIgJBgHAgAkGAcEobIQIgAEGcAWogA0ECdGogAyMAQZA1amotAAAgAkH/DyACQf8PSBtsNgIAIAZBAWohAgwBCwsgAUEESARAIABBhAFqIQUgAUEDdEEIcSAAKAJUIAAoAhgiAyAAKAJQbGpBBHRyIANBA3RBACABQQJxG2ohBAUgAEGMAWogAEGIAWogAUEERhshBSAAKAJQIAAoAhgiAUECdGwgACgCVEEDdGohBCABQQF1IQMLIANBeGohAyAFKAIAIQUgAkEBRiECIABBnAFqIQEgACgCXARAIAIEQCABKAIAQYABakEIdSAFIAQgAxAYIAFBADYCAAUgARAZIAEgBSAEIAMQGiABQQBBgAIQPBoLBSACBEAgASgCAEGAAWpBCHUgBSAEIAMQGyABQQA2AgAFIAEQGSABIAUgBCADEBwgAUEAQYACEDwaCwsL7AYAIAEgAmogAEEAIABBAEobIgBB/wEgAEH/AUgbQf8BcSIAOgAAIAEgAkEBamogADoAACABIAJBAmpqIAA6AAAgASACQQNqaiAAOgAAIAEgAkEEamogADoAACABIAJBBWpqIAA6AAAgASACQQZqaiAAOgAAIAEgAkEHamogADoAACABIAIgA0EIaiIDaiICaiAAOgAAIAEgAkEBamogADoAACABIAJBAmpqIAA6AAAgASACQQNqaiAAOgAAIAEgAkEEamogADoAACABIAJBBWpqIAA6AAAgASACQQZqaiAAOgAAIAEgAkEHamogADoAACABIAIgA2oiAmogADoAACABIAJBAWpqIAA6AAAgASACQQJqaiAAOgAAIAEgAkEDamogADoAACABIAJBBGpqIAA6AAAgASACQQVqaiAAOgAAIAEgAkEGamogADoAACABIAJBB2pqIAA6AAAgASACIANqIgJqIAA6AAAgASACQQFqaiAAOgAAIAEgAkECamogADoAACABIAJBA2pqIAA6AAAgASACQQRqaiAAOgAAIAEgAkEFamogADoAACABIAJBBmpqIAA6AAAgASACQQdqaiAAOgAAIAEgAiADaiICaiAAOgAAIAEgAkEBamogADoAACABIAJBAmpqIAA6AAAgASACQQNqaiAAOgAAIAEgAkEEamogADoAACABIAJBBWpqIAA6AAAgASACQQZqaiAAOgAAIAEgAkEHamogADoAACABIAIgA2oiAmogADoAACABIAJBAWpqIAA6AAAgASACQQJqaiAAOgAAIAEgAkEDamogADoAACABIAJBBGpqIAA6AAAgASACQQVqaiAAOgAAIAEgAkEGamogADoAACABIAJBB2pqIAA6AAAgASACIANqIgJqIAA6AAAgASACQQFqaiAAOgAAIAEgAkECamogADoAACABIAJBA2pqIAA6AAAgASACQQRqaiAAOgAAIAEgAkEFamogADoAACABIAJBBmpqIAA6AAAgASACQQdqaiAAOgAAIAEgAiADaiICaiAAOgAAIAEgAkEBamogADoAACABIAJBAmpqIAA6AAAgASACQQNqaiAAOgAAIAEgAkEEamogADoAACABIAJBBWpqIAA6AAAgASACQQZqaiAAOgAAIAEgAkEHamogADoAAAubBgEUfwNAIAFBEGpBAnQgAGoiBygCACIGIAFBMGpBAnQgAGoiDSgCACIJaiEFIAFBCGpBAnQgAGoiDigCACICIAFBOGpBAnQgAGoiDygCACIDaiEEIAIgA2siEEHZA2wgAUEoakECdCAAaiIKKAIAIgIgAUEYakECdCAAaiIRKAIAIgNrIgtBvH5sQYABampBCHUgBCACIANqIghqIgJrIgMgBCAIa0HqAmxBgAFqQQh1ayEEIAFBAnQgAGoiCCgCACIMIAFBIGpBAnQgAGoiEigCACITayIUIAYgCWtB6gJsQYABakEIdSAFayIJaiEGIAggAiAMIBNqIgggBWoiDGo2AgAgDiADIAZqNgIAIAcgFCAJayIHIARrNgIAIBEgC0HZA2xBgAFqIBBBxAFsakEIdSAEaiIJIAggBWsiBWo2AgAgEiAFIAlrNgIAIAogBCAHajYCACANIAYgA2s2AgAgDyAMIAJrNgIAIAFBAWoiAUEIRw0AC0EAIQEDQCABQQFyQQJ0IABqIgcoAgAiBCABQQdyQQJ0IABqIg0oAgAiAmohBSAEIAJrIglB2QNsIAFBBXJBAnQgAGoiDigCACIEIAFBA3JBAnQgAGoiDygCACICayIQQbx+bEGAAWpqQQh1IAUgAiAEaiIDaiIEayICIAUgA2tB6gJsQYABakEIdWshBSABQQJ0IABqIgYoAgAiCiABQQRyQQJ0IABqIhEoAgAiC2shAyAGIAogC2oiCiABQQJyQQJ0IABqIgsoAgAiCCABQQZyQQJ0IABqIgwoAgAiEmoiBmoiEyAEQYABampBCHU2AgAgByADIAggEmtB6gJsQYABakEIdSAGayIHakGAAWoiCCACakEIdTYCACALIAMgB2tBgAFqIgMgBWtBCHU2AgAgDyAQQdkDbEGAAWogCUHEAWxqQQh1IAVqIgcgCiAGa0GAAWoiBmpBCHU2AgAgESAGIAdrQQh1NgIAIA4gAyAFakEIdTYCACAMIAggAmtBCHU2AgAgDSATQYABIARrakEIdTYCACABQQhqIgFBwABJDQALC5gDAQJ/IANBCGohBUEAIQMDQCABIAJqIANBAnQgAGooAgAiBEEAIARBAEobIgRB/wEgBEH/AUgbOgAAIAEgAkEBamogA0EBckECdCAAaigCACIEQQAgBEEAShsiBEH/ASAEQf8BSBs6AAAgASACQQJqaiADQQJyQQJ0IABqKAIAIgRBACAEQQBKGyIEQf8BIARB/wFIGzoAACABIAJBA2pqIANBA3JBAnQgAGooAgAiBEEAIARBAEobIgRB/wEgBEH/AUgbOgAAIAEgAkEEamogA0EEckECdCAAaigCACIEQQAgBEEAShsiBEH/ASAEQf8BSBs6AAAgASACQQVqaiADQQVyQQJ0IABqKAIAIgRBACAEQQBKGyIEQf8BIARB/wFIGzoAACABIAJBBmpqIANBBnJBAnQgAGooAgAiBEEAIARBAEobIgRB/wEgBEH/AUgbOgAAIAEgAkEHamogA0EHckECdCAAaigCACIEQQAgBEEAShsiBEH/ASAEQf8BSBs6AAAgAiAFaiECIANBCGoiA0HAAEkNAAsLiwMBA38gA0EIaiEGQQAhAwNAIAAgASACaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAAgASACQQFqaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAAgASACQQJqaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAAgASACQQNqaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAAgASACQQRqaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAAgASACQQVqaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAAgASACQQZqaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAAgASACQQdqaiIFLQAAaiIEQQAgBEEAShshBCAFIARB/wEgBEH/AUgbOgAAIAIgBmohAiADQQhqIgNBwABJDQALC+gDAQN/IANBCGohBkEAIQMDQCADQQJ0IABqKAIAIAEgAmoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACADQQFyQQJ0IABqKAIAIAEgAkEBamoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACADQQJyQQJ0IABqKAIAIAEgAkECamoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACADQQNyQQJ0IABqKAIAIAEgAkEDamoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACADQQRyQQJ0IABqKAIAIAEgAkEEamoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACADQQVyQQJ0IABqKAIAIAEgAkEFamoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACADQQZyQQJ0IABqKAIAIAEgAkEGamoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACADQQdyQQJ0IABqKAIAIAEgAkEHamoiBS0AAGoiBEEAIARBAEobIQQgBSAEQf8BIARB/wFIGzoAACACIAZqIQIgA0EIaiIDQcAASQ0ACwtUAQF/Qcy3ARAxIgJBBGpBAEHItwEQPBogAiAAIAEQKjYCCCACQcTYAjYCACACQczWAGojAEHQNWpBgBAQOhogAkHM5gBqIwBB0DVqQYAQEDoaIAILDQAgACgCCBArIAAQOAsLACAAKAIIIAEQLAsKACAAKAIIKAIECwwAIAAoAgggATYCBAsUACAAKAIIIgAgASAAKAIMajYCDAsHACAAKAIACwgAIABBzA5qCwgAIABBzDJqC0UBAn8gACgCCCgCBCECIAAoAggiASgCDEEDdCABKAIEa0EQSQRAQQAPCyAAECchASAAKAIIIAFBA3QgAmpBeHE2AgQgAQuVGgEffyAAKAIIQQsQMCAAKAIIQQIQMCECIAAoAghBAhAwIQEgACgCCEEBEDAhB0H/D0cgAkEDR3IgAUECR3IEQEEADwsgACgCCEEEEDAiAkEOSgRAQQAPCyAAKAIIQQIQMCINQQNGBEBBAA8LIAAoAghBARAwIAAoAghBARAwGiAAKAIIQQIQMCEKIAAoAgghASAKQQFGBH8gAUECEDBBAnRBBGoFIAEgASgCBEECajYCBEEAQSAgCkEDRhsLIQwgACgCCCIBIAEoAgRBBGo2AgQgB0UEQCAAKAIIIgEgASgCBEEQajYCBAsjAEHQxQBqIAJBf2oiAUEBdGouAQBBgOUIbCMAQZDGAGogDUEBdGovAQAiF20gDSMAQdzIAGogASMAQaDGAGogCkEDR0EEdGpqLQAAQQNsamotAAAiAUE/cSELIAFBBnYhCCALIAwgDCALShsiDUEASiIYBEBBACEBA0AgASMAQcDGAGogCEEFdGpqLQAAIgJBD3EhBSAAKAIIIAJBBHYiAhAwIwBBoMcAaiAFQQR0amosAAAhAyAAQQxqIAFBAnRqIwAgA0H/AXFBAnRqQfzHAGpBACADGzYCACAAKAIIIAIQMCMAQaDHAGogBUEEdGpqLAAAIQIgAEGMAWogAUECdGojACACQf8BcUECdGpB/McAakEAIAIbNgIAIAFBAWoiASANSA0ACwsgCyAMSiIZBEAgDSEBA0AgACgCCCABIwBBwMYAaiAIQQV0amotAAAiAkEEdhAwIwBBoMcAaiACQQ9xQQR0amosAAAhAiAAQYwBaiABQQJ0aiMAIAJB/wFxQQJ0akH8xwBqQQAgAhsiAjYCACAAQQxqIAFBAnRqIAI2AgAgAUEBaiIBIAtIDQALC0EBQQIgCkEDRiIFGyEIIAtFIgJFBEAgBQRAQQAhAQNAQQAhAwNAIABBDGogA0EHdGogAUECdGooAgAEQCABIABBjAJqIANBBXRqaiAAKAIIQQIQMDoAAAsgA0EBaiIDIAhJDQALIAEgAEGsAmpqIAEgAEGMAmpqLAAAOgAAIAFBAWoiASALRw0ACwVBACEBA0BBACEDA0AgAEEMaiADQQd0aiABQQJ0aigCAARAIAEgAEGMAmogA0EFdGpqIAAoAghBAhAwOgAACyADQQFqIgMgCEkNAAsgAUEBaiIBIAtHDQALCyACRQRAIAUEQEEAIQEDQEEAIQMDQCAAQQxqIANBB3RqIAFBAnRqKAIABEACQCAAQcwCaiADQYADbGogAUEMbGohBQJAAkACQAJAAkAgASAAQYwCaiADQQV0amosAAAOBAABAgMECyAFIAAoAghBBhAwNgIAIAAgA0GAA2xqIAFBDGxqIAAoAghBBhAwNgLQAiAAIANBgANsaiABQQxsaiAAKAIIQQYQMDYC1AIMBAsgACADQYADbGogAUEMbGogACgCCEEGEDAiAjYC0AIgBSACNgIAIAAgA0GAA2xqIAFBDGxqIAAoAghBBhAwNgLUAgwDCyAAIANBgANsaiABQQxsaiAAKAIIQQYQMCICNgLUAiAAIANBgANsaiABQQxsaiACNgLQAiAFIAI2AgAMAgsgBSAAKAIIQQYQMDYCACAAIANBgANsaiABQQxsaiAAKAIIQQYQMCICNgLUAiAAIANBgANsaiABQQxsaiACNgLQAgsLCyADQQFqIgMgCEkNAAsgAEHMBWogAUEMbGogAEHMAmogAUEMbGooAgA2AgAgACABQQxsaiAAIAFBDGxqKALQAjYC0AUgACABQQxsaiAAIAFBDGxqKALUAjYC1AUgAUEBaiIBIAtHDQALBUEAIQEDQEEAIQMDQCAAQQxqIANBB3RqIAFBAnRqKAIABEACQCAAQcwCaiADQYADbGogAUEMbGohBQJAAkACQAJAAkAgASAAQYwCaiADQQV0amosAAAOBAABAgMECyAFIAAoAghBBhAwNgIAIAAgA0GAA2xqIAFBDGxqIAAoAghBBhAwNgLQAiAAIANBgANsaiABQQxsaiAAKAIIQQYQMDYC1AIMBAsgACADQYADbGogAUEMbGogACgCCEEGEDAiAjYC0AIgBSACNgIAIAAgA0GAA2xqIAFBDGxqIAAoAghBBhAwNgLUAgwDCyAAIANBgANsaiABQQxsaiAAKAIIQQYQMCICNgLUAiAAIANBgANsaiABQQxsaiACNgLQAiAFIAI2AgAMAgsgBSAAKAIIQQYQMDYCACAAIANBgANsaiABQQxsaiAAKAIIQQYQMCICNgLUAiAAIANBgANsaiABQQxsaiACNgLQAgsLCyADQQFqIgMgCEkNAAsgAUEBaiIBIAtHDQALCwsLaiALQSBJIRsgAEHMtgFqIQQgAEHMCGohHCAAQcz2AGohHSAAQcwLaiEeIABBzJYBaiEfA0BBACEWIBQhAwNAIBgEQEEAIQEDQCAAQQAgASAOECggAEEBIAEgDhAoIAFBAWoiASANSA0ACwsgGQRAIA0hAQNAIABBACABIA4QKCAAQcwLaiABQQxsaiAAQcwIaiABQQxsaigCADYCACAAIAFBDGxqQdALaiAAIAFBDGxqQdAIaigCADYCACAAIAFBDGxqQdQLaiAAIAFBDGxqQdQIaigCADYCACABQQFqIgEgC0gNAAsLIBsEQCALIQEDQCAAQcwIaiABQQxsakEANgIAIAAgAUEMbGpB0AhqQQA2AgAgACABQQxsakHUCGpBADYCACAAQcwLaiABQQxsakEANgIAIAAgAUEMbGpB0AtqQQA2AgAgACABQQxsakHUC2pBADYCACABQQFqIgFBIEcNAAsLIAAoAgQhASADIRFBACESA0AgACABQcAHakH/B3EiATYCBCAcIBIgHSABECkgBEIANwIAIARCADcCCCAEQgA3AhAgBEIANwIYIARCADcCICAEQgA3AiggBEIANwIwIARCADcCOCAEQUBrQgA3AgAgBEIANwJIIARCADcCUCAEQgA3AlggBEIANwJgIARCADcCaCAEQgA3AnAgBEIANwJ4IAAoAgQiD0EBdSETQf8HIA9BgAFvQQF1IgxrIgFBgH9xIRUgAUEHdkEGdEHABGohEEGABCATayEGIAwhAQNAIAYhB0EAIQkgASECA0AgB0EBaiEIIAJBAWohBSAAQcy2AWogCUECdGoiCiAAQczWAGogB0ECdGoqAgAgAEHM9gBqIAJBAnRqKgIAlCAKKAIAspKoNgIAIAlBAWoiCUEgRwRAIAghByAFIQIMAQsLIAFBgAFqIQIgBkFAayEGIAFBgAdIBEAgAiEBDAELC0HgByAMIBVqayIBQYAISARAIBAgE2tBoHxqIQYDQCABQR9qIAYhB0EAIQkgASECA0AgB0EBaiEIIAJBAWohBSAAQcy2AWogCUECdGoiDCAAQczWAGogB0ECdGoqAgAgAEHM9gBqIAJBAnRqKgIAlCAMKAIAspKoNgIAIAlBAWoiCUEgRwRAIAghByAFIQIMAQsLIAFBgAFqIQEgBkFAayEGQZ8HSA0ACwtBACEBA0AgAEHMDmogASARakECdGogAEHMtgFqIAFBAnRqKAIAskMA/v9OlTgCACABQQFqIgFBIEcNAAsgHiASIB8gDxApIARCADcCACAEQgA3AgggBEIANwIQIARCADcCGCAEQgA3AiAgBEIANwIoIARCADcCMCAEQgA3AjggBEFAa0IANwIAIARCADcCSCAEQgA3AlAgBEIANwJYIARCADcCYCAEQgA3AmggBEIANwJwIARCADcCeCAAKAIEIgxBAXUhD0H/ByAMQYABb0EBdSIKayIBQYB/cSETIAFBB3ZBBnRBwARqIRVBgAQgD2shBiAKIQEDQCAGIQdBACEJIAEhAgNAIAdBAWohCCACQQFqIQUgAEHMtgFqIAlBAnRqIhAgAEHM1gBqIAdBAnRqKgIAIABBzJYBaiACQQJ0aioCAJQgECgCALKSqDYCACAJQQFqIglBIEcEQCAIIQcgBSECDAELCyABQYABaiECIAZBQGshBiABQYAHSARAIAIhAQwBCwtB4AcgCiATamsiAUGACEgEQCAVIA9rQaB8aiEGA0AgAUEfaiAGIQdBACEJIAEhAgNAIAdBAWohCCACQQFqIQUgAEHMtgFqIAlBAnRqIgogAEHM1gBqIAdBAnRqKgIAIABBzJYBaiACQQJ0aioCAJQgCigCALKSqDYCACAJQQFqIglBIEcEQCAIIQcgBSECDAELCyABQYABaiEBIAZBQGshBkGfB0gNAAsLQQAhAQNAIABBzDJqIAEgEWpBAnRqIABBzLYBaiABQQJ0aigCALJDAP7/TpU4AgAgAUEBaiIBQSBHDQALIBFBIGohESASQQFqIhJBA0cEQCAMIQEMAQsLIANB4ABqIQMgFkEBaiIWQQRHDQALIBRBgANqIRQgDkEBaiIOQQNHDQALIAAgFzYCAAv0AwEHfyAAQcwCaiABQYADbGogAkEMbGogA0ECdGooAgAhAyAAQcwIaiABQYADbGogAkEMbGohBiAAQQxqIAFBB3RqIAJBAnRqKAIAIgRFBEAgACABQYADbGogAkEMbGpB1AhqQQA2AgAgACABQYADbGogAkEMbGpB0AhqQQA2AgAgBkEANgIADwsgA0E/RgR/QQAFIwBB0MgAaiADIANBA20iA0EDbGtBAnRqKAIAQQEgA3RBAXVqIAN1CyEIIAQvAQAhBSAELAACRSAAKAIIIAQtAAMQMCEDBEAgBiADNgIAIAAgAUGAA2xqIAJBDGxqQdAIaiIDIAAoAgggBC0AAxAwNgIAIAAoAgggBC0AAxAwIQQgBigCACEHIAMoAgAhCQUgBiADIAUgAyAFbSIEbGsiBzYCACAAIAFBgANsaiACQQxsakHQCGoiAyAEIAUgBCAFbSIEbGsiCTYCAAsgBkGAgAQgBUEBaiIFbiIGIAVBAXZBf2oiBSAHa2wiCiAIQQx1IgdsIAhB/x9xIgggCmxBgBBqQQx1akEMdTYCACADIAYgBSAJa2wiAyAHbCADIAhsQYAQakEMdWpBDHU2AgAgACABQYADbGogAkEMbGpB1AhqIAYgBSAEa2wiACAHbCAAIAhsQYAQakEMdWpBDHU2AgALgBwCH382fSAAQTBqIAFBAnRqKAIAIgQgAEHEAmogAUECdGooAgAiBWqyIiUgAEGEAWogAUECdGooAgAiBiAAQfABaiABQQJ0aigCACIHarIiLpIiJiAAQSRqIAFBAnRqKAIAIgggAEHQAmogAUECdGooAgAiCWqyIjsgAEGQAWogAUECdGooAgAiCiAAQeQBaiABQQJ0aigCACILarIiI5IiNZIiMSAAQdQAaiABQQJ0aigCACIMIABBoAJqIAFBAnRqKAIAIg1qsiInIABB4ABqIAFBAnRqKAIAIg4gAEGUAmogAUECdGooAgAiD2qyIjmSIi8gAUECdCAAaigCACIQIABB9AJqIAFBAnRqKAIAIhFqsiIoIABBtAFqIAFBAnRqKAIAIhIgAEHAAWogAUECdGooAgAiE2qyIimSIi2SIjCSIjwgAEE8aiABQQJ0aigCACIUIABBuAJqIAFBAnRqKAIAIhVqsiIyIABB+ABqIAFBAnRqKAIAIhYgAEH8AWogAUECdGooAgAiF2qyIiuSIiwgAEEYaiABQQJ0aigCACIYIABB3AJqIAFBAnRqKAIAIhlqsiIkIABBnAFqIAFBAnRqKAIAIhogAEHYAWogAUECdGooAgAiG2qyIjOSIjqSIiogAEHIAGogAUECdGooAgAiHCAAQawCaiABQQJ0aigCACIdarIiPSAAQewAaiABQQJ0aigCACIeIABBiAJqIAFBAnRqKAIAIh9qsiJEkiI2IABBDGogAUECdGooAgAiICAAQegCaiABQQJ0aigCACIharIiRSAAQagBaiABQQJ0aigCACIiIABBzAFqIAFBAnRqKAIAIgBqsiJGkiJHkiJIkiJNk7tEuEt/Zp6g5j+itiE0IDAgMZO7RKYx23t6UeE/orYiTiBIICqTu0S6MEWRruf0P6K2IkiTu0S4S39mnqDmP6K2ITEgNSAmk7tE6KZz0NmABECitiImIC0gL5O7RLm0fNE+UOA/orYiNZIiTyA6ICyTu0S4frHvmszsP6K2Ii8gRyA2k7tEphXgoTc+4z+itiItkiI2k7tEuEt/Zp6g5j+itiJHIDUgJpO7RKYx23t6UeE/orYiUCAtIC+Tu0S6MEWRruf0P6K2IlGTu0S4S39mnqDmP6K2IjWSIS8gJyA5k7tEizzlgJNnFECitiImICggKZO7RPfTYZzRE+A/orYiJ5IiOSAlIC6Tu0RCOX0LkDjpP6K2IiUgOyAjk7tEH+S7mMOy5D+itiIukiIok7tEpjHbe3pR4T+itiJSID0gRJO7RJB+QLAkj/s/orYiIyBFIEaTu0RR7OsDT7jgP6K2IimSIi0gMiArk7tEvMhOKon48D+itiIwICQgM5O7RN5NBtFnJOI/orYiMpIiK5O7RLowRZGu5/Q/orYiPZO7RLhLf2aeoOY/orYhOyAuICWTu0TopnPQ2YAEQKK2Ii4gJyAmk7tEubR80T5Q4D+itiInkiElIDIgMJO7RLh+se+azOw/orYiMCApICOTu0SmFeChNz7jP6K2IiOSISYgJyAuk7tEpjHbe3pR4T+itiInICMgMJO7RLowRZGu5/Q/orYiI5O7RLhLf2aeoOY/orYhLiAmICWSICMgJ5IgLpIiJ5IhIyAnICUgJpO7RLhLf2aeoOY/orYiJZIhJyAlIC6SIkQgKCA5kiJFICsgLZIiRpO7RLhLf2aeoOY/orYiU5IhOSAEIAVrsrtE6DIY8Qaz4T+itiIlIAYgB2uyu0QGfsulBrbyP6K2IjKSIiYgCCAJa7K7RAV4MAhN/uA/orYiKyAKIAtrsrtEz+iOZSO/9z+itiIskiItkiI6IAwgDWuyu0RRwLOpB5jlP6K2IiQgDiAPa7K7RNR11Lo90+c/orYiM5IiMCAQIBFrsrtEJl02lPAE4D+itiIqIBIgE2uyu0RM0Ki+SGEkQKK2IkmSIj6SIkqSISggFCAVa7K7RFt3BDxnp+I/orYiNyAWIBdrsrtERtzXbEcf7z+itiI/kiJAIBggGWuyu0RXxl1bi37gP6K2IkEgGiAba7K7RFOF4ONVdgBAorYiQpIiOJIiSyAcIB1rsrtErhJCxI3r4z+itiJDIB4gH2uyu0S/EZ/J89vqP6K2IkySIlQgICAha7K7RE/eOm/RLOA/orYiVSAiIABrsrtENTnXM8hCC0CitiJWkiJXkiJYkiEpIC0gJpO7ROimc9DZgARAorYiJiA+IDCTu0S5tHzRPlDgP6K2Ij6SIS0gOCBAk7tEuH6x75rM7D+itiJAIFcgVJO7RKYV4KE3PuM/orYiOJIhMCA+ICaTu0SmMdt7elHhP6K2Ij4gOCBAk7tEujBFka7n9D+itiJAk7tEuEt/Zp6g5j+itiEmICUgMpO7REI5fQuQOOk/orYiJSArICyTu0Qf5LuYw7LkP6K2IiuSIjggJCAzk7tEizzlgJNnFECitiIsICogSZO7RPfTYZzRE+A/orYiJJIiM5IiSSA3ID+Tu0S8yE4qifjwP6K2IiogQSBCk7tE3k0G0Wck4j+itiI3kiI/IEMgTJO7RJB+QLAkj/s/orYiQSBVIFaTu0RR7OsDT7jgP6K2IkKSIkOSIkyTu0S4S39mnqDmP6K2ITIgKyAlk7tE6KZz0NmABECitiIlICQgLJO7RLm0fNE+UOA/orYiJJIhKyA3ICqTu0S4frHvmszsP6K2IiogQiBBk7tEphXgoTc+4z+itiI3kiEsICQgJZO7RKYx23t6UeE/orYiJCA3ICqTu0S6MEWRruf0P6K2IiqTu0S4S39mnqDmP6K2ISUgLCArkiAqICSSICWSIiqSISQgKiArICyTu0S4S39mnqDmP6K2IiySISsgLCAlkiI3IDKSIkEgKCApk7tEuEt/Zp6g5j+itiJCkiEsIDMgOJO7RKYx23t6UeE/orYiOCBDID+Tu0S6MEWRruf0P6K2Ij+Tu0S4S39mnqDmP6K2IjMgJZIiQyBKIDqTu0SmMdt7elHhP6K2IkogWCBLk7tEujBFka7n9D+itiJLk7tEuEt/Zp6g5j+itiI6kiEqIANBMGpBAnQgAmogTSA8kow4AgAgA0EvakECdCACaiApICiSIEwgSZIgJJIiKJKMIik4AgAgA0ExakECdCACaiApOAIAIANBLmpBAnQgAmogRiBFkiAjkowiKTgCACADQTJqQQJ0IAJqICk4AgAgA0EtakECdCACaiAwIC2SIEAgPpIgJpIiKZIiPCAokowiKDgCACADQTNqQQJ0IAJqICg4AgAgA0EsakECdCACaiA2IE+SIFEgUJIgNZIiKJKMIjY4AgAgA0E0akECdCACaiA2OAIAIANBK2pBAnQgAmogPCA/IDiSIDOSIjwgJJIiJJKMIjY4AgAgA0E1akECdCACaiA2OAIAIANBKmpBAnQgAmogPSBSkiA7kiI9ICOSjCIjOAIAIANBNmpBAnQgAmogIzgCACADQSlqQQJ0IAJqIEsgSpIgOpIiIyAkkowiJDgCACADQTdqQQJ0IAJqICQ4AgAgA0EoakECdCACaiBIIE6SIDGSjCIkOAIAIANBOGpBAnQgAmogJDgCACADQSdqQQJ0IAJqICMgPCArkiIjkowiJDgCACADQTlqQQJ0IAJqICQ4AgAgA0EmakECdCACaiA9ICeSjCIkOAIAIANBOmpBAnQgAmogJDgCACADQSVqQQJ0IAJqICkgLSAwk7tEuEt/Zp6g5j+itiIpkiItICOSjCIjOAIAIANBO2pBAnQgAmogIzgCACADQSRqQQJ0IAJqICggR5KMIiM4AgAgA0E8akECdCACaiAjOAIAIANBI2pBAnQgAmogLSArIDKSIiOSjCIoOAIAIANBPWpBAnQgAmogKDgCACADQSJqQQJ0IAJqICcgU5KMIic4AgAgA0E+akECdCACaiAnOAIAIANBIWpBAnQgAmogIyBCkowiIzgCACADQT9qQQJ0IAJqICM4AgAgA0EgakECdCACaiA0jDgCACADQQJ0IAJqIDQ4AgAgA0EfakECdCACaiAsjDgCACADQQFqQQJ0IAJqICw4AgAgA0EeakECdCACaiA5jDgCACADQQJqQQJ0IAJqIDk4AgAgA0EdakECdCACaiApICaSIjQgQZIiI4w4AgAgA0EDakECdCACaiAjOAIAIANBHGpBAnQgAmogL4w4AgAgA0EEakECdCACaiAvOAIAIANBG2pBAnQgAmogNCA3IDOSIjSSIi+MOAIAIANBBWpBAnQgAmogLzgCACADQRpqQQJ0IAJqIEQgO5IiL4w4AgAgA0EGakECdCACaiAvOAIAIANBGWpBAnQgAmogNCA6kiI0jDgCACADQQdqQQJ0IAJqIDQ4AgAgA0EYakECdCACaiAxjDgCACADQQhqQQJ0IAJqIDE4AgAgA0EXakECdCACaiAqjDgCACADQQlqQQJ0IAJqICo4AgAgA0EWakECdCACaiA7IC6SIjGMOAIAIANBCmpBAnQgAmogMTgCACADQRVqQQJ0IAJqIEMgJpIiMYw4AgAgA0ELakECdCACaiAxOAIAIANBFGpBAnQgAmogNYw4AgAgA0EMakECdCACaiA1OAIAIANBE2pBAnQgAmogJiAlkiImjDgCACADQQ1qQQJ0IAJqICY4AgAgA0ESakECdCACaiAujDgCACADQQ5qQQJ0IAJqIC44AgAgA0ERakECdCACaiAljDgCACADQQ9qQQJ0IAJqICU4AgAgA0EQakECdCACakMAAAAAOAIACy8BAX9BFBAxIgIgATYCECACIAAQMTYCACACIAA2AgggAkEANgIMIAJBADYCBCACCw0AIAAoAgAQOCAAEDgL6QEBBH8gACgCCCIDIAAoAgwiAmsiBCABSQRAAkAgACgCEEECRgRAIAAgACgCACABIARrIANBAXQiAiACIARqIAFJGyIBEDk2AgAgACABNgIIIAAoAgQgACgCDCIBQQN0IgJNDQEgACACNgIEDAELIAIgACgCBCIFQQN2IgNGIAMgBGogAUlyBEAgAEEANgIMIABBADYCBEEAIQEMAQsgAwRAIAAoAgAiASABIANqIAIgA2sQOxogACAAKAIMIANrIgE2AgwgACAAKAIEIAVBeHFrNgIEBSACIQELCwUgAiEBCyAAKAIAIAFqC40BAQR/IAAoAgRBB2pBA3YiASAAKAIMIgRJBEACQCAAKAIAIQIDQAJAIAFBAWohAyABIAJqLAAARQRAIAIgA2osAABFBEAgAiABQQJqaiwAAEEBRg0CCwsgAyAETw0CIAMhAQwBCwsgACABQQN0QSBqNgIEIAIgAUEDamotAAAPCwsgACAEQQN0NgIEQX8LqQEBBH8gACgCBEEHakEDdiICIAAoAgwiBUkEQAJAIAAoAgAhBANAAkAgAkEBaiEDAkACQCACIARqLAAADQAgAyAEaiwAAA0AIAQgAkECamosAABBAUcNACAAIAJBA3QiA0EgajYCBCABIAQgAkEDamotAABGDQIgA0EnakEDdiICIAVPDQQMAQsgAyAFTw0DIAMhAgsMAQsLIAEPCwsgACAFQQN0NgIEQX8LTwEBfyAAKAIEQQdqQQN2IgEgACgCDE8EQEEBDwsgACgCACIAIAFqLAAABEBBAA8LIAAgAUEBamosAAAEQEEADwsgACABQQJqaiwAAEEBRguGAQEGfyAAKAIEIQYgAUUEQCAAIAEgBmo2AgRBAA8LIAAoAgAhByABIQMgBiEEA0AgAkEIIARBB3FrIgIgAyACIANJGyIFdCAHIARBA3VqLQAAQf8BQQggBWt2IAIgBWsiAnRxIAJ2ciECIAQgBWohBCADIAVrIgMNAAsgACABIAZqNgIEIAILgAMBA38gAEEBIAAbIgIQMiIARQRAAkACQCMAQbTOwAJqKAIAIgBFDQAgACgCACIBQQFxDQAgACABQQFyNgIAIAFBAXZBeGoiAUUEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIAFBCCABQQhLGyIBZ2tBASABGyIBQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsjAEGwzQBqIAFBAnRqIgMoAgAgAEEIaiIBRgRAIAMgACgCDDYCAAsgASgCACIDBEAgAyAAKAIMNgIECyAAKAIMIgAEQCAAIAEoAgA2AgALIAIQM0UjAEG0zsACaigCACEABEAgACAAKAIAQX5xNgIAQQAPCwwBCyACEDQhAAsgAEUEQEEADwsLIAAoAgBBAXYgAGpBABABSwRAIwBBgsoAaiMAQe7IAGpBswYjAEGeygBqEAALIAAoAgBBAXFFBEAjAEGuygBqIwBB7sgAakHOASMAQcDKAGoQAAsgAEEIaguJBQEFfyAARQRAIwBB5cgAaiMAQe7IAGpBiwIjAEHjywBqEAALQR8gAEEIIABBCEsbIgFna0EBIAEbIgFBfWpBHU8EQCMAQcjJAGojAEHuyABqQYACIwBBt8kAahAACyAAaUEBRyABaiIDQQNLQQEgA3QgAEtxBEAjACADQQJ0akGszQBqKAIAIgEEQAJAA0AgAUF4aiIEKAIAQQF2QXhqIgUgAEkEQCABKAIEIgFBAEcgAkEBaiICQSBJcUUNAgwBCwsgBUUEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIAVBCCAFQQhLGyICZ2tBASACGyICQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsjAEGwzQBqIAJBAnRqIgIoAgAgAUYEQCACIAEoAgQ2AgALIAEoAgAiAgRAIAIgASgCBDYCBAsgASgCBCICBEAgAiABKAIANgIACyAEIAQoAgBBAXI2AgAgBCAAEDYgBA8LCwsgA0EgTwRAQQAPCyADIQECQAJAA0AjAEGwzQBqIAFBAnRqKAIAIgJFBEAgAUEBaiIBQSBPDQIMAQsLDAELQQAPCyACQXhqIgEoAgBBAXZBeGoiA0UEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIANBCCADQQhLGyIDZ2tBASADGyIDQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsgAiMAQbDNAGogA0ECdGoiAygCAEYEQCADIAIoAgQ2AgALIAIoAgAiAwRAIAMgAigCBDYCBAsgAigCBCIDBEAgAyACKAIANgIACyABIAEoAgBBAXI2AgAgASAAEDYgAQvDAgEEfyAAQQ9qQXhxIwBBtM7AAmooAgAoAgBBAXZrIgMQASICQX9GBEBBAA8LIwBBtM7AAmooAgAiACgCACIEQQF2IQEgAiAAIAFqRwRAIwBBqMsAaiMAQe7IAGpBoQMjAEHEywBqEAALIARBAXFFBEAgAUF4aiIBRQRAIwBB5cgAaiMAQe7IAGpB+gEjAEG3yQBqEAALQR8gAUEIIAFBCEsbIgFna0EBIAEbIgFBfWpBHU8EQCMAQcjJAGojAEHuyABqQYACIwBBt8kAahAACyMAQbDNAGogAUECdGoiAigCACAAQQhqIgFGBEAgAiAAKAIMNgIACyABKAIAIgIEQCACIAAoAgw2AgQLIAAoAgwiAgRAIAIgASgCADYCAAsLIAAgACgCACADQQF0aiIBNgIAIAFBAXEEQEEBDwsgABA1QQEL1QIBBX8gAEEPakF4cSIEEAEiAUF/RgRAQQAPCwJAAkAgAUEHakF4cSIAIgUgAUYEQCMAQbDOwAJqKAIAQQBHIQIjAEG0zsACaigCACIBRQRAIAJFDQIjAEGPywBqIwBB7sgAakHwBSMAQfTKAGoQAAsgAgRAIAAgATYCBCAAIQMFIwBBnMsAaiMAQe7IAGpB9AUjAEH0ygBqEAALBSAAIAFrEAEiAkF/RgRAQQAPCyACIAEgBGpHBEAjAEHLygBqIwBB7sgAakHlBSMAQfTKAGoQAAsjAEG0zsACaigCAARAIwBBg8sAaiMAQe7IAGpB5wUjAEH0ygBqEAALIwBBsM7AAmooAgBFDQEjAEGPywBqIwBB7sgAakHwBSMAQfTKAGoQAAsMAQsjAEGwzsACaiAFNgIAIAAhAwsjAEG0zsACaiAFNgIAIAMgBEEBdEEBcjYCACADC9IBAQJ/IAAgACgCAEEBdmpBABABSwRAIwBBgsoAaiMAQe7IAGpBsgIjAEHVywBqEAALIAAoAgBBAXZBeGoiAUUEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIAFBCCABQQhLGyIBZ2tBASABGyIBQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsjAEGwzQBqIAFBAnRqIgIoAgAhASACIABBCGoiAjYCACAAQQA2AgggACABNgIMIAFFBEAPCyABIAI2AgALzwIBBH8gACgCACIEQQF2IgVBeGoiAyABSQRAIwBB/csAaiMAQe7IAGpBrAMjAEGRzABqEAALIAMgAWsiA0F4cUEIRiAAIwBBtM7AAmooAgBGcQRAIAUQM0UEQA8LIANBCGpBD0sEQCAAKAIAIQIFIwBBqMwAaiMAQe7IAGpBvQMjAEGRzABqEAALBSADQQ9LBH8gBAUPCyECCyACQQFxIgRFBEAjAEGuygBqIwBB7sgAakHOASMAQcDKAGoQAAsgACAEIAAgAWpBD2pBeHEiASAAa0EBdHI2AgAgACACQQF2aiABayICQQ9NBEAjAEHBzABqIwBB7sgAakHMAyMAQZHMAGoQAAsgASABKAIAQQFxIAJBAXRyNgIAIAEgADYCBCMAQbTOwAJqIAEgAkH/////B3FqQQRqIAAjAEG0zsACaigCAEYbIAE2AgAgARA3C6gHAQd/IAAgACgCACIDQX5xNgIAIAAgA0EBdmpBABABSwRAIwBBgsoAaiMAQe7IAGpBxAIjAEHjzABqEAALIAAoAgQhASAAIwBBtM7AAmooAgAiBUYiBwR/QQAhA0EABSAAIAAoAgBBAXZqIgMLIQYgAQRAIAEoAgAiAkEBcUUEQCACQQF2QXhqIgJFBEAjAEHlyABqIwBB7sgAakH6ASMAQbfJAGoQAAtBHyACQQggAkEISxsiAmdrQQEgAhsiAkF9akEdTwRAIwBByMkAaiMAQe7IAGpBgAIjAEG3yQBqEAALIwBBsM0AaiACQQJ0aiIEKAIAIAFBCGoiAkYEQCAEIAEoAgw2AgALIAIoAgAiBARAIAQgASgCDDYCBAsgASgCDCIEBEAgBCACKAIANgIACyABIAEoAgAgACgCAEF+cWo2AgACQAJAIAMEQCADIAE2AgQgAygCACIAQQFxRQRAIABBAXZBeGoiAEUEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIABBCCAAQQhLGyIAZ2tBASAAGyIAQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsjAEGwzQBqIABBAnRqIgIoAgAgA0EIaiIARgRAIAIgAygCDDYCAAsgACgCACICBEAgAiADKAIMNgIECyADKAIMIgIEQCACIAAoAgA2AgAjAEG0zsACaigCACEFCyABIAEoAgAgAygCAEF+cWo2AgAgAyAFRgRAIwBBtM7AAmohAAUgBiADKAIAQQF2akEEaiEACwwCCwUgBwRAIwBBtM7AAmohAAwCBSMAQf/MAGojAEHuyABqQdICIwBB48wAahAACwsMAQsgACABNgIACyABEDUPCwsgAwRAIAMoAgAiAUEBcUUEQCABQQF2QXhqIgFFBEAjAEHlyABqIwBB7sgAakH6ASMAQbfJAGoQAAtBHyABQQggAUEISxsiAWdrQQEgARsiAUF9akEdTwRAIwBByMkAaiMAQe7IAGpBgAIjAEG3yQBqEAALIwBBsM0AaiABQQJ0aiICKAIAIANBCGoiAUYEQCACIAMoAgw2AgALIAEoAgAiAgRAIAIgAygCDDYCBAsgAygCDCICBEAgAiABKAIANgIAIwBBtM7AAmooAgAhBQsgACAAKAIAIAMoAgBBfnFqNgIAIAMgBUYEfyMAQbTOwAJqBSAGIAMoAgBBAXZqQQRqCyAANgIAIAAQNQ8LCyAAEDULEAAgAEUEQA8LIABBeGoQNwvtCQEFfyABRSECIABFBEBBASABIAIbIgEQMiIARQRAAkACQCMAQbTOwAJqKAIAIgBFDQAgACgCACICQQFxDQAgACACQQFyNgIAIAJBAXZBeGoiAkUEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIAJBCCACQQhLGyICZ2tBASACGyICQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsjAEGwzQBqIAJBAnRqIgQoAgAgAEEIaiICRgRAIAQgACgCDDYCAAsgAigCACIEBEAgBCAAKAIMNgIECyAAKAIMIgAEQCAAIAIoAgA2AgALIAEQM0UjAEG0zsACaigCACEABEAgACAAKAIAQX5xNgIAQQAPCwwBCyABEDQhAAsgAEUEQEEADwsLIAAoAgBBAXYgAGpBABABSwRAIwBBgsoAaiMAQe7IAGpBswYjAEGeygBqEAALIAAoAgBBAXFFBEAjAEGuygBqIwBB7sgAakHOASMAQcDKAGoQAAsgAEEIag8LIABBeGohBCACBEAgBBA3QQAPCyAEKAIAIgJBAXFFBEAjAEGuygBqIwBB7sgAakHPBiMAQZTNAGoQAAsCQCACQQF2IgNBeGogAU8NACADIARqIQMgBCMAQbTOwAJqKAIAIgVHBEAgAygCACIGQQFxRQRAIAZBAXZBeGoiAkUEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIAJBCCACQQhLGyICZ2tBASACGyICQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsjAEGwzQBqIAJBAnRqIgYoAgAgA0EIaiICRgRAIAYgAygCDDYCAAsgAigCACIGBEAgBiADKAIMNgIECyADKAIMIgYEQCAGIAIoAgA2AgALIAQgBCgCACADKAIAQX5xaiICNgIAIAMgBUYEQCMAQbTOwAJqIAQ2AgAFIAMgAygCAEEBdmogBDYCBAsLCyACQQF2QXhqIAFPDQAgARAyIgJBAEchAyADQQFzIwBBtM7AAmooAgAgBEZxBEAgARAzBEAgAA8LCyADRQRAAkACQCMAQbTOwAJqKAIAIgJFDQAgAigCACIDQQFxDQAgAiADQQFyNgIAIANBAXZBeGoiA0UEQCMAQeXIAGojAEHuyABqQfoBIwBBt8kAahAAC0EfIANBCCADQQhLGyIDZ2tBASADGyIDQX1qQR1PBEAjAEHIyQBqIwBB7sgAakGAAiMAQbfJAGoQAAsjAEGwzQBqIANBAnRqIgUoAgAgAkEIaiIDRgRAIAUgAigCDDYCAAsgAygCACIFBEAgBSACKAIMNgIECyACKAIMIgIEQCACIAMoAgA2AgALIAEQM0UjAEG0zsACaigCACECBEAgAiACKAIAQX5xNgIAQQAPCwwBCyABEDQhAgsgAkUEQEEADwsLIAIoAgBBAXFFBEAjAEGuygBqIwBB7sgAakHOASMAQcDKAGoQAAsgBCgCACIDQQFxRQRAIwBBrsoAaiMAQe7IAGpBzgEjAEHAygBqEAALIAJBCGoiBSAAIAEgA0EBdkF4aiIAIAAgAUsbEDoaIAQQNyACKAIAQQFxBEAgBQ8FIwBBrsoAaiMAQe7IAGpBzgEjAEHAygBqEAALQQAPCyAEIAJBAXI2AgAgBCABEDYgAAv7CgEIfyACQQBHIAFBA3FBAEdxBH8gACEDA38gA0EBaiEEIAMgASwAADoAACABQQFqIgFBA3FBAEcgAkF/aiICQQBHcQR/IAQhAwwBBSAECwsFIAALIgNBA3FFBEAgAkEPSwR/IAJBcGoiBUFwcSIHQRBqIgggA2ogAiEEIAEhAgNAIAMgAigCADYCACADIAIoAgQ2AgQgAyACKAIINgIIIAMgAigCDDYCDCACQRBqIQIgA0EQaiEDIARBcGoiBEEPSw0ACyEDIAEgCGohASAFIAdrBSACCyIEQQhxBH8gAyABKAIANgIAIAMgASgCBDYCBCADQQhqIQMgAUEIagUgAQshAiAEQQRxBH8gAyACKAIANgIAIAJBBGohAiADQQRqBSADCyEBIARBAnEEQCABIAIsAAA6AAAgASACLAABOgABIAFBAmohASACQQJqIQILIARBAXFFBEAgAA8LIAEgAiwAADoAACAADwsgAkEfSwRAAkACQAJAAkAgA0EDcUEBaw4DAAECAwsgAyABKAIAIgU6AAAgAyABLAABOgABIAMgASwAAjoAAiACQWxqQXBxIghBE2oiCSABaiACQW1qIANBA2ohBCACQX1qIQYgAUEDaiECIAUhAQNAIAQgAigCASIFQQh0IAFBGHZyNgIAIAQgAigCBSIBQQh0IAVBGHZyNgIEIAQgAigCCSIFQQh0IAFBGHZyNgIIIAQgAigCDSIBQQh0IAVBGHZyNgIMIAJBEGohAiAEQRBqIQQgBkFwaiIGQRBLDQALIAMgCWohAyAIayECIQEMAgsgAyABKAIAIgU6AAAgAyABLAABOgABIAJBbGpBcHEiCEESaiIJIAFqIAJBbmogA0ECaiEEIAJBfmohBiABQQJqIQIgBSEBA0AgBCACKAICIgVBEHQgAUEQdnI2AgAgBCACKAIGIgFBEHQgBUEQdnI2AgQgBCACKAIKIgVBEHQgAUEQdnI2AgggBCACKAIOIgFBEHQgBUEQdnI2AgwgAkEQaiECIARBEGohBCAGQXBqIgZBEUsNAAsgAyAJaiEDIAhrIQIhAQwBCyADIAEoAgAiBToAACACQWxqQXBxIghBEWoiCSABaiACQW9qIANBAWohBCACQX9qIQYgAUEBaiECIAUhAQNAIAQgAigCAyIFQRh0IAFBCHZyNgIAIAQgAigCByIBQRh0IAVBCHZyNgIEIAQgAigCCyIFQRh0IAFBCHZyNgIIIAQgAigCDyIBQRh0IAVBCHZyNgIMIAJBEGohAiAEQRBqIQQgBkFwaiIGQRJLDQALIAMgCWohAyAIayECIQELCyACQRBxBEAgAyABLAAAOgAAIAMgASwAAToAASADIAEsAAI6AAIgAyABLAADOgADIAMgASwABDoABCADIAEsAAU6AAUgAyABLAAGOgAGIAMgASwABzoAByADIAEsAAg6AAggAyABLAAJOgAJIAMgASwACjoACiADIAEsAAs6AAsgAyABLAAMOgAMIAMgASwADToADSADIAEsAA46AA4gAyABLAAPOgAPIANBEGohAyABQRBqIQELIAJBCHEEQCADIAEsAAA6AAAgAyABLAABOgABIAMgASwAAjoAAiADIAEsAAM6AAMgAyABLAAEOgAEIAMgASwABToABSADIAEsAAY6AAYgAyABLAAHOgAHIANBCGohAyABQQhqIQELIAJBBHEEQCADIAEsAAA6AAAgAyABLAABOgABIAMgASwAAjoAAiADIAEsAAM6AAMgA0EEaiEDIAFBBGohAQsgAkECcQRAIAMgASwAADoAACADIAEsAAE6AAEgA0ECaiEDIAFBAmohAQsgAkEBcUUEQCAADwsgAyABLAAAOgAAIAALwAMBBn8gACABRgRAIAAPCyABIAJqIABLIAAgAmoiBSABS3FFBEAgACABIAIQOhogAA8LIAEgACIDc0EDcUUhBCADIAFJBH8gBARAIANBA3EEQAJAA0AgAgRAIAJBf2ohAiABQQFqIQQgAyABLAAAOgAAIANBAWoiA0EDcQRAIAQhAQwCBSAEIQEMAwsACwsgAA8LCyACQQNLBEAgAkF8aiIGQXxxIgdBBGoiCCADaiACIQQgASECA0AgAyACKAIANgIAIANBBGohAyACQQRqIQIgBEF8aiIEQQNLDQALIQMgBiAHayECIAEgCGohAQsLIAJFBEAgAA8LA0AgAUEBaiEEIANBAWohBSADIAEsAAA6AAAgAkF/aiICBEAgBSEDIAQhAQwBCwsgAAUgBARAIAVBA3EEQAJAA0AgAgRAIAMgAkF/aiICaiIAIAEgAmosAAA6AAAgAEEDcUUNAgwBCwsgAw8LCyACQQNLBEAgAiEAA0AgAyAAQXxqIgBqIAAgAWooAgA2AgAgAEEDSw0ACyACQQNxIQILCyACRQRAIAMPCwNAIAMgAkF/aiICaiABIAJqLAAAOgAAIAINAAsgAwsLgwMCA38BfgJAIAJFDQAgACACQX9qaiABQf8BcSIDOgAAIAAgAzoAACACQQNJDQAgACACQX5qaiADOgAAIAAgAzoAASAAIAJBfWpqIAM6AAAgACADOgACIAJBB0kNACAAIAJBfGpqIAM6AAAgACADOgADIAJBCUkNACAAQQAgAGtBA3EiBWoiBCABQf8BcUGBgoQIbCIDNgIAIAQgAiAFa0F8cSICaiIBQXxqIAM2AgAgAkEJSQ0AIAQgAzYCBCAEIAM2AgggAUF0aiADNgIAIAFBeGogAzYCACACQRlJDQAgBCADNgIMIAQgAzYCECAEIAM2AhQgBCADNgIYIAFBZGogAzYCACABQWhqIAM2AgAgAUFsaiADNgIAIAFBcGogAzYCACACIARBBHFBGHIiAmsiAUEfTQ0AIAOtIgYgBkIghoQhBiACIARqIQIDQCACIAY3AwAgAiAGNwMIIAIgBjcDECACIAY3AxggAkEgaiECIAFBYGoiAUEfSw0ACyAADwsgAAsVACMAQbDOAGokASMBQYCAwAJqJAILC6tNAQAjAAukTQAAAADZzr9BAADAQQAAyEGPwu9BAADwQQAASEKPwm9CAABwQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgQCQIDChEYIBkSCwQFDBMaISgwKSIbFA0GBw4VHCMqMTg5MiskHRYPFx4lLDM6OzQtJh8nLjU8PTYvNz4/CBATFhobHSIQEBYYGx0iJRMWGhsdIiImFhYaGx0iJSgWGhsdICMoMBobHSAjKDA6GhsdIiYuOEUbHSMmLjhFUwMAAAAGAAAAAAAAAAkAAAAMAAAAAAAAAAAAAAAAAAAAAQAAAA8AAAASAAAAAAAAABUAAAAYAAAAAAAAABsAAAAeAAAAAAAAACEAAAAkAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAgAAACcAAAAqAAAAAAAAAC0AAAAwAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAABAAAADMAAAA2AAAAAAAAADkAAAA8AAAAAAAAAAAAAAAAAAAABwAAAAAAAAAAAAAABgAAAD8AAABCAAAAAAAAAEUAAABIAAAAAAAAAEsAAABOAAAAAAAAAFEAAABUAAAAAAAAAP////9XAAAAAAAAAP////9aAAAAAAAAAF0AAABgAAAAAAAAAGMAAABmAAAAAAAAAGkAAABsAAAAAAAAAG8AAAByAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAACAAAAHUAAAB4AAAAAAAAAHsAAAB+AAAAAAAAAIEAAACEAAAAAAAAAIcAAACKAAAAAAAAAAAAAAAAAAAADwAAAAAAAAAAAAAADgAAAAAAAAAAAAAADQAAAAAAAAAAAAAADAAAAAAAAAAAAAAACwAAAAAAAAAAAAAACgAAAI0AAAD/////AAAAAP////+QAAAAAAAAAJMAAACWAAAAAAAAAJkAAACcAAAAAAAAAJ8AAACiAAAAAAAAAKUAAACoAAAAAAAAAKsAAACuAAAAAAAAALEAAAC0AAAAAAAAALcAAAD/////AAAAAP////+6AAAAAAAAAL0AAADAAAAAAAAAAMMAAADGAAAAAAAAAMkAAADMAAAAAAAAAM8AAADSAAAAAAAAANUAAADYAAAAAAAAANsAAADeAAAAAAAAAAAAAAAAAAAAFQAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAEwAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAEQAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAIwAAAAAAAAAAAAAAIgAAAAAAAAAAAAAAIQAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAHwAAAAAAAAAAAAAAHgAAAAAAAAAAAAAAHQAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAGwAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAGQAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAFwAAAAAAAAAAAAAAFgAAAAAAAAAAAAAAAAAAAAMAAAAGAAAAAAAAAP////8JAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEQAAAAMAAAAGAAAAAAAAAAkAAAAMAAAAAAAAAAAAAAAAAAAACgAAAA8AAAASAAAAAAAAAAAAAAAAAAAAAgAAABUAAAAYAAAAAAAAAAAAAAAAAAAACAAAABsAAAAeAAAAAAAAACEAAAAkAAAAAAAAAP////8nAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEQAAAAAAAAAAAAAABgAAAAMAAAAAAAAACQAAABIAAAAAAAAADAAAAA8AAAAAAAAAGAAAACEAAAAAAAAAJAAAACcAAAAAAAAAGwAAABUAAAAAAAAAHgAAACoAAAAAAAAAPAAAADkAAAAAAAAANgAAADAAAAAAAAAARQAAADMAAAAAAAAAUQAAAEsAAAAAAAAAPwAAAFQAAAAAAAAALQAAAEIAAAAAAAAASAAAAE4AAAAAAAAAAAAAAAAAAAA8AAAAaQAAAHgAAAAAAAAAhAAAAJAAAAAAAAAAcgAAAGwAAAAAAAAAfgAAAI0AAAAAAAAAVwAAAF0AAAAAAAAAdQAAAGAAAAAAAAAAAAAAAAAAAAAgAAAAhwAAAIoAAAAAAAAAYwAAAHsAAAAAAAAAgQAAAGYAAAAAAAAAAAAAAAAAAAAEAAAAWgAAAG8AAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAsAAAAlgAAAKgAAAAAAAAAAAAAAAAAAAAcAAAAAAAAAAAAAAA0AAAAAAAAAAAAAAA+AAAAtwAAALEAAAAAAAAAnAAAALQAAAAAAAAAAAAAAAAAAAABAAAApQAAAKIAAAAAAAAAAAAAAAAAAAA9AAAAAAAAAAAAAAA4AAAAqwAAAK4AAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAoAAAAmQAAALoAAAAAAAAAAAAAAAAAAAAwAAAAwAAAAL0AAAAAAAAAkwAAAJ8AAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAMAAAA8AAAAPkAAAAAAAAAAAAAAAAAAAA/AAAA5wAAAOEAAAAAAAAAwwAAANsAAAAAAAAA/AAAAMYAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAkAAAAAAAAAAAAAAADAAAAzwAAAAUBAAAAAAAA8wAAAO0AAAAAAAAAzAAAANUAAAAAAAAA0gAAAOoAAAAAAAAAyQAAAOQAAAAAAAAA2AAAAN4AAAAAAAAAAgEAAP8AAAAAAAAACAEAAPYAAAAAAAAA/////xoBAAAAAAAAHQEAACMBAAAAAAAAAAAAAAAAAAAhAAAAAAAAAAAAAAAJAAAAPgEAAEoBAAAAAAAAMgEAAFwBAAAAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAKAAAAFwEAAAsBAAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAASAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAiAAAAUwEAAGUBAAAAAAAANQEAADgBAAAAAAAADgEAABQBAAAAAAAARwEAAEEBAAAAAAAAXwEAAGIBAAAAAAAALwEAACkBAAAAAAAAJgEAACABAAAAAAAALAEAABEBAAAAAAAAVgEAAFkBAAAAAAAAOwEAAEQBAAAAAAAAUAEAAE0BAAAAAAAAawEAAHcBAAAAAAAAAAAAAAAAAAApAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAVAAAAdAEAAG4BAAAAAAAAaAEAAHEBAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAATAAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAjAAAAAAAAAAAAAAANAAAAAAAAAAAAAAAyAAAAAAAAAAAAAAAxAAAAAAAAAAAAAAA6AAAAAAAAAAAAAAAlAAAAAAAAAAAAAAAZAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAA5AAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAdAAAAAAAAAAAAAAAmAAAAAAAAAAAAAAA1AAAAAAAAAAAAAAAXAAAAAAAAAAAAAAArAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAqAAAAAAAAAAAAAAAWAAAAAAAAAAAAAAA2AAAAAAAAAAAAAAAzAAAAAAAAAAAAAAAPAAAAAAAAAAAAAAAeAAAAAAAAAAAAAAAnAAAAAAAAAAAAAAAvAAAAAAAAAAAAAAA3AAAAAAAAAAAAAAAbAAAAAAAAAAAAAAA7AAAAAAAAAAAAAAAfAAAAAAAAAAAAAAADAAAABgAAAAAAAAAMAAAACQAAAAAAAAAAAAAAAAAAAAAAAAASAAAADwAAAAAAAAAYAAAAFQAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAEAAAAbAAAAHgAAAAAAAAAkAAAAIQAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAP7///8qAAAALQAAAAAAAAAwAAAAJwAAAAAAAAA8AAAANgAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAP3///8zAAAAOQAAAAAAAAD/////RQAAAAAAAABRAAAASwAAAAAAAABOAAAAPwAAAAAAAABIAAAAQgAAAAAAAABgAAAAVAAAAAAAAABXAAAAXQAAAAAAAAD/////YwAAAAAAAABsAAAAaQAAAAAAAAAAAAAAAAAAAPz///9aAAAAZgAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAPn///8AAAAAAAAAAAUAAABvAAAAewAAAAAAAAAAAAAAAAAAAPv///8AAAAAAAAAAAcAAAByAAAAeAAAAAAAAAB+AAAAdQAAAAAAAAAAAAAAAAAAAPr///8AAAAAAAAAAAYAAACZAAAAogAAAAAAAACWAAAAkwAAAAAAAACHAAAAigAAAAAAAACcAAAAjQAAAAAAAACBAAAAnwAAAAAAAACEAAAAkAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAAAAAAkAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAPj///+rAAAAxgAAAAAAAAAAAAAAAAAAAPf///+0AAAAwAAAAAAAAACoAAAAtwAAAAAAAAClAAAAugAAAAAAAACuAAAAvQAAAAAAAAAAAAAAAAAAAPb///+xAAAAwwAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAABAAAAAAAAAAAAAAAA0AAAAAAAAAAAAAAA4AAAAAAAAAAAAAAAsAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAPD///8AAAAAAAAAAPT///8AAAAAAAAAAPL///8AAAAAAAAAAPH///8AAAAAAAAAAPX///8AAAAAAAAAAPP///8AAAAAAAAAAAAAAAAGAAAAAwAAAAAAAAASAAAADwAAAAAAAAAJAAAADAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAIAAAAbAAAAGAAAAAAAAAAVAAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAIQAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAMAAAAnAAAAKgAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAYAAAAwAAAALQAAAAAAAAAzAAAA/////wAAAAAAAAAAAAAAAAcAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAYAAAADAAAAAAAAAAwAAAAJAAAAAAAAABIAAAAPAAAAAAAAABgAAAAVAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAB4AAAAbAAAAAAAAAAAAAAAAAAAAAwAAACQAAAAhAAAAAAAAAAAAAAAAAAAABAAAACoAAAAnAAAAAAAAAAAAAAAAAAAABQAAADAAAAAtAAAAAAAAAAAAAAAAAAAABgAAADMAAAD/////AAAAAAAAAAAAAAAABwAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAwAAAAYAAAAAAAAADAAAAAkAAAAAAAAAAAAAAAAAAAABAAAAFQAAABgAAAAAAAAAEgAAAA8AAAAAAAAAJwAAABsAAAAAAAAAIQAAAB4AAAAAAAAAKgAAACQAAAAAAAAAAAAAAAAAAAABAQAAPAAAAEIAAAAAAAAANgAAAD8AAAAAAAAAMAAAADkAAAAAAAAAAAAAAAAAAAABAgAAMwAAAC0AAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAADAAAAUQAAAEsAAAAAAAAAVwAAAF0AAAAAAAAASAAAAE4AAAAAAAAAYAAAAFoAAAAAAAAAAAAAAAAAAAABBAAARQAAAFQAAAAAAAAAAAAAAAAAAAABAwAAAAAAAAAAAAACAQAAAAAAAAAAAAABBwAAAAAAAAAAAAD//wAAAAAAAAAAAAABBgAAbwAAAGwAAAAAAAAAAAAAAAAAAAABBQAAaQAAAGYAAAAAAAAAdQAAAHIAAAAAAAAAYwAAAH4AAAAAAAAAeAAAAHsAAAAAAAAAnAAAAJYAAAAAAAAAogAAAJ8AAAAAAAAAkAAAAJMAAAAAAAAAgQAAAIcAAAAAAAAAigAAAIQAAAAAAAAAAAAAAAAAAAABCAAAAAAAAAAAAAAEAAAAAAAAAAAAAAACAgAAAAAAAAAAAAABCQAAmQAAAI0AAAAAAAAApQAAAKsAAAAAAAAAtAAAAKgAAAAAAAAAsQAAAK4AAAAAAAAAtwAAALoAAAAAAAAAAAAAAAAAAAABCgAAAAAAAAAAAAABDQAAAAAAAAAAAAAGAAAAAAAAAAAAAAADAQAAAAAAAAAAAAAFAAAAAAAAAAAAAAACAwAAAAAAAAAAAAABCwAAAAAAAAAAAAABDAAA5AAAAOEAAAAAAAAAyQAAANIAAAAAAAAA2wAAANUAAAAAAAAA6gAAAN4AAAAAAAAA2AAAAOcAAAAAAAAAzwAAAMAAAAAAAAAAzAAAAL0AAAAAAAAAxgAAAMMAAAAAAAAA8wAAAAUBAAAAAAAAEQEAAPAAAAAAAAAA9gAAAO0AAAAAAAAA+QAAAAIBAAAAAAAAFwEAABQBAAAAAAAA/AAAAP8AAAAAAAAADgEAABoBAAAAAAAACAEAAAsBAAAAAAAAAAAAAAAAAAADAgAAAAAAAAAAAAAEAQAAAAAAAAAAAAAHAAAAAAAAAAAAAAACBAAAAAAAAAAAAAACBQAAAAAAAAAAAAABEAAAAAAAAAAAAAABDwAAAAAAAAAAAAABDgAAOwEAAEEBAAAAAAAATQEAAFYBAAAAAAAAOAEAACMBAAAAAAAAdwEAAGUBAAAAAAAAIAEAACYBAAAAAAAA/////3EBAAAAAAAAHQEAAC8BAAAAAAAAPgEAAGsBAAAAAAAAKQEAADIBAAAAAAAAUwEAADUBAAAAAAAAUAEAAFwBAAAAAAAASgEAACwBAAAAAAAAdAEAAFkBAAAAAAAAXwEAAG4BAAAAAAAARwEAAGIBAAAAAAAAaAEAAEQBAAAAAAAAfQEAAJgBAAAAAAAAoQEAAKQBAAAAAAAAhgEAAHoBAAAAAAAAswEAALYBAAAAAAAAgAEAAIMBAAAAAAAAAAAAAAAAAAACCAAAjAEAAJIBAAAAAAAA0QEAAM4BAAAAAAAAAAAAAAAAAAAIAAAAmwEAAI8BAAAAAAAArQEAALABAAAAAAAAxQEAAJ4BAAAAAAAAqgEAAKcBAAAAAAAAAAAAAAAAAAAKAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAALAAAAAAAAAAAAAAABFQAAAAAAAAAAAAACBgAAAAAAAAAAAAADAwAAAAAAAAAAAAABFAAAAAAAAAAAAAACBwAAAAAAAAAAAAABEQAAAAAAAAAAAAABEgAAAAAAAAAAAAABEwAAvAEAAMgBAAAAAAAAAAAAAAAAAAADBAAAywEAAMIBAAAAAAAAAAAAAAAAAAAFAQAAiQEAAJUBAAAAAAAAAAAAAAAAAAAEAgAAvwEAALkBAAAAAAAABAIAAAcCAAAAAAAA5gEAANoBAAAAAAAA/gEAAOMBAAAAAAAA+AEAAPIBAAAAAAAA1wEAABkCAAAAAAAA+wEAAPUBAAAAAAAACgIAAAECAAAAAAAAFgIAABMCAAAAAAAA1AEAAN0BAAAAAAAA7AEAAO8BAAAAAAAAJQIAACICAAAAAAAADQIAABACAAAAAAAAAAAAAAAAAAAHAQAAAAAAAAAAAAACCgAAAAAAAAAAAAACCQAAAAAAAAAAAAABFgAAAAAAAAAAAAABFwAAAAAAAAAAAAABGQAAAAAAAAAAAAABGAAAAAAAAAAAAAADBQAAAAAAAAAAAAAEAwAAAAAAAAAAAAANAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAPAAAAAAAAAAAAAAAFAgAAAAAAAAAAAAABGgAAAAAAAAAAAAAGAQAAHAIAAB8CAAAAAAAA4AEAAOkBAAAAAAAATAIAAFUCAAAAAAAAAAAAAAAAAAAbAAAAYQIAACsCAAAAAAAAXgIAAFsCAAAAAAAAAAAAAAAAAAATAAAAAAAAAAAAAAAWAAAATwIAAG0CAAAAAAAAAAAAAAAAAAASAAAAPQIAAEACAAAAAAAANAIAADoCAAAAAAAAAAAAAAAAAAAUAAAAKAIAAEYCAAAAAAAAAAAAAAAAAAAVAAAALgIAAEMCAAAAAAAAAAAAAAAAAAAXAAAAZAIAAFICAAAAAAAAAAAAAAAAAAAZAAAAAAAAAAAAAAAYAAAAWAIAAGcCAAAAAAAAAAAAAAAAAAAfAAAAAAAAAAAAAAAeAAAAAAAAAAAAAAAcAAAAAAAAAAAAAAAdAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAQAAAANwIAAGoCAAAAAAAAMQIAAEkCAAAAAAAAjgIAAHkCAAAAAAAAAAAAAAAAAAAlAAAAhQIAAIgCAAAAAAAAAAAAAAAAAAAkAAAAdgIAAHwCAAAAAAAAAAAAAAAAAAAiAAAAfwIAAHMCAAAAAAAAlwIAAJoCAAAAAAAAkQIAAHACAAAAAAAAiwIAAIICAAAAAAAAnQIAAJQCAAAAAAAAAAAAAAAAAAAjAAAAAAAAAAAAAAALAQAAAAAAAAAAAAAoAAAAAAAAAAAAAAAMAQAAAAAAAAAAAAAKAQAAAAAAAAAAAAAgAAAAAAAAAAAAAAAIAQAAAAAAAAAAAAAJAQAAAAAAAAAAAAAmAAAAAAAAAAAAAAANAQAAAAAAAAAAAAAOAQAAAAAAAAAAAAAhAAAAAAAAAAAAAAAnAAAAAAAAAAAAAAABHwAAAAAAAAAAAAABGwAAAAAAAAAAAAABHgAAAAAAAAAAAAACEAAAAAAAAAAAAAABHQAAAAAAAAAAAAABHAAAAAAAAAAAAAAPAQAAAAAAAAAAAAASAQAAAAAAAAAAAAARAQAAAAAAAAAAAAAQAQAAAAAAAAAAAAADBgAAAAAAAAAAAAACCwAAAAAAAAAAAAACDgAAAAAAAAAAAAACDQAAAAAAAAAAAAACDAAAAAAAAAAAAAACDwAAICwqJiAZEQksPjo0LCMYDCo6NzEqIRcMJjQxLCYeFAogLComIBkRCRkjIR4ZFA4HERgXFBEOCQUJDAwKCQcFAgAAAAAAAAC/AAAAvwAAAL8AAAC/AAAAvwAAAL8AAIC/AACAvwAAgL8AAIC/AADAvwAAwL8AAADAAAAAwAAAIMAAACDAAABAwAAAYMAAAGDAAACAwAAAkMAAAKDAAACwwAAA0MAAAODAAAAAwQAACMEAABjBAAAowQAAQMEAAFDBAABowQAAeMEAAIzBAACYwQAApMEAALTBAADEwQAA1MEAAOjBAAD8wQAACMIAABLCAAAewgAAKsIAADbCAABCwgAAUMIAAF7CAABqwgAAesIAAITCAACLwgAAk8IAAJrCAAChwgAAqcIAALDCAAC3wgAAvsIAAMTCAADKwgAA0MIAANVCAADaQgAA3kIAAOFCAADjQgAA5EIAAORCAADjQgAA4EIAAN1CAADXQgAA0EIAAMhCAAC9QgAAsUIAAKNCAACSQgAAfkIAAFRCAAAmQgAA5EEAAGhBAACAvwAAkMEAABDCAABewgAAmcIAAMXCAAD0wgAAE8MAgC3DAIBIwwCAZcMAwIHDAECRwwBAocMAwLHDAMDCwwAA1MMAwOXDAMD3wwAABcQAIA7EAEAXxABgIMQAgCnEAIAyxABAO8QA4EPEAEBMxABAVMQA4FvEACBjxADAacQA4G/EAEB1xAAgesQAAH7EAJCAxACwgcQAUILEAHCCxAAAgsQA8IDEAKB+RAAAekQAAHREAKBsRADAY0QAYFlEAIBNRADgP0QAwDBEAAAgRABgDUQAgPJDAIDGQwBAl0MAAElDAAC5QgAAtMEAABDDAECIwwCAy8MA4AjEAIAtxACAU8QAwHrEAKCRxABwpsQAwLvEAHDRxACQ58QA8P3EAEgKxQCgFcUACCHFAGgsxQC4N8UA6ELFAOhNxQC4WMUAOGPFAGhtxQAwd8UARIDFAKyExQDMiMUAmIzFAAyQxQAgk8UAxJXFAPyXxQC4mcUA8JrFAJybxQC4m8UAPJvFAByaxQBYmMUA4JXFALSSxQDMjsUAIIrFALCExQDgfMUAwG7FAPBexQBwTUUAODpFAEAlRQCIDkUAAOxEAHC3RACgfkQAQAdEAAAMQgCA+cMAoITEAEDOxACoDcUA0DXFAJBfxQBwhcUA3JvFAPyyxQDQysUAUOPFAGz8xQAOC8YALBjGAIolxgAiM8YA7EDGAOROxgACXcYAQGvGAJZ5xgD/g8YAOIvGAHGSxgComcYA2KDGAP6nxgAVr8YAGbbGAAa9xgDZw8YAjcrGAB7RxgCK18YAyt3GAN3jxgC+6cYAae/GANz0xgAT+sYACv/GAN8Bx4AWBMcAKgbHgBcIxwDfCccAfgvHgPQMx4BBDseAYw/HAFoQx4AkEccAwxHHADQSxwB4EscAjxJHAHgSRwA0EkcAwxFHgCQRRwBaEEeAYw9HgEEOR4D0DEcAfgtHAN8JR4AXCEcAKgZHgBYERwDfAUcACv9GABP6RgDc9EYAae9GAL7pRgDd40YAyt1GAIrXRgAe0UYAjcpGANnDRgAGvUYAGbZGABWvRgD+p0YA2KBGAKiZRgBxkkYAOItGAP+DRgCWeUYAQGtGAAJdRgDkTkYA7EBGACIzRgCKJUYALBhGAA4LRgBs/EUAUONFANDKRQD8skUA3JtFAHCFRQCQX0UA0DVFAKgNRQBAzkQAoIREAID5QwAADMIAQAfEAKB+xABwt8QAAOzEAIgOxQBAJcUAODrFAHBNRQDwXkUAwG5FAOB8RQCwhEUAIIpFAMyORQC0kkUA4JVFAFiYRQAcmkUAPJtFALibRQCcm0UA8JpFALiZRQD8l0UAxJVFACCTRQAMkEUAmIxFAMyIRQCshEUARIBFADB3RQBobUUAOGNFALhYRQDoTUUA6EJFALg3RQBoLEUACCFFAKAVRQBICkUA8P1EAJDnRABw0UQAwLtEAHCmRACgkUQAwHpEAIBTRACALUQA4AhEAIDLQwBAiEMAABBDAAC0QQAAucIAAEnDAECXwwCAxsMAgPLDAGANxAAAIMQAwDDEAOA/xACATcQAYFnEAMBjxACgbMQAAHTEAAB6xACgfkQA8IBEAACCRABwgkQAUIJEALCBRACQgEQAAH5EACB6RABAdUQA4G9EAMBpRAAgY0QA4FtEAEBURABATEQA4ENEAEA7RACAMkQAgClEAGAgRABAF0QAIA5EAAAFRADA90MAwOVDAADUQwDAwkMAwLFDAEChQwBAkUMAwIFDAIBlQwCASEMAgC1DAAATQwAA9EIAAMVCAACZQgAAXkIAABBCAACQQQAAgD8AAGjBAADkwQAAJsIAAFTCAAB+wgAAksIAAKPCAACxwgAAvcIAAMjCAADQwgAA18IAAN3CAADgwgAA48IAAOTCAADkwgAA48IAAOHCAADewgAA2sIAANVCAADQQgAAykIAAMRCAAC+QgAAt0IAALBCAACpQgAAoUIAAJpCAACTQgAAi0IAAIRCAAB6QgAAakIAAF5CAABQQgAAQkIAADZCAAAqQgAAHkIAABJCAAAIQgAA/EEAAOhBAADUQQAAxEEAALRBAACkQQAAmEEAAIxBAAB4QQAAaEEAAFBBAABAQQAAKEEAABhBAAAIQQAAAEEAAOBAAADQQAAAsEAAAKBAAACQQAAAgEAAAGBAAABgQAAAQEAAACBAAAAgQAAAAEAAAABAAADAPwAAwD8AAIA/AACAPwAAgD8AAIA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/IAAwADgAQABQAGAAcACAAKAAwADgAAABQAGAAQgAEAAYACAAKAAwADgAQABQAGAAcACAAJAAoAAAAAAAAAAAAESsgLsAfQAAIlbAXYA+AAAAAAEBAQICAgICAgICAgAAAAAAAAAAAQEBAgICAgIAAERENDQ0NDQ0NDQ0NAAAAAAAAAAAAAAAAAAAAAAAAAAAQ0NDQkJCQkJCQkIxMTExMTExMTExMTEgICAgICAgAABFRUVFNDQ0NDQ0NCQkJCQkJCQkJCQkJCQkJCQkJCQAAAABAhEAAAAAAAAAAAAAAAAAAQIDBAUGEQAAAAAAAAAAAAECAwQFBgcICQoLDA0OEQABAwUGBwgJCgsMDQ4PEBEAAQIEBQYHCAkKCwwNDg8RAAECAwQFBgcICQoLDA0ODwMAAQUFAAEHBwAAAwkAAQoPAAAEHwAABT8AAAZ/AAAH/wAACP8BAAn/AwAK/wcAC/8PAAz/HwAN/z8ADv9/AA///wAQAAAAAAAAAAAAAAAAAAAAAupflgEwikIBCAgMW1tbXltec2l6ZSA+IDAAL2hvbWUvZG9taW5pYy9wcm9qZWN0cy9lbXNkay9mYXN0Y29tcC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvZW1tYWxsb2MuY3BwAGdldEZyZWVMaXN0SW5kZXgATUlOX0ZSRUVMSVNUX0lOREVYIDw9IGluZGV4ICYmIGluZGV4IDwgTUFYX0ZSRUVMSVNUX0lOREVYAGdldEFmdGVyKHJlZ2lvbikgPD0gc2JyaygwKQBlbW1hbGxvY19tYWxsb2MAcmVnaW9uLT5nZXRVc2VkKCkAZ2V0UGF5bG9hZAAoY2hhciopZXh0cmFQdHIgPT0gKGNoYXIqKXB0ciArIHNicmtTaXplAGFsbG9jYXRlUmVnaW9uACFsYXN0UmVnaW9uACFmaXJzdFJlZ2lvbgBmaXJzdFJlZ2lvbgBwdHIgPT0gZ2V0QWZ0ZXIobGFzdFJlZ2lvbikAZXh0ZW5kTGFzdFJlZ2lvbgBhZGRUb0ZyZWVMaXN0AGdldEJpZ0Vub3VnaEZyZWVMaXN0SW5kZXgAcGF5bG9hZFNpemUgPj0gc2l6ZQBwb3NzaWJseVNwbGl0UmVtYWluZGVyAGV4dHJhID49IE1JTl9SRUdJT05fU0laRQB0b3RhbFNwbGl0U2l6ZSA+PSBNSU5fUkVHSU9OX1NJWkUAbWVyZ2VJbnRvRXhpc3RpbmdGcmVlUmVnaW9uAHJlZ2lvbiA9PSBsYXN0UmVnaW9uAGVtbWFsbG9jX3JlYWxsb2M=",uS=function(){function e(e,t,n){var r=this;if(void 0===t&&(t={}),void 0===n&&(n={}),this.options=t,this.hooks=n,this.options.hookOnEstablished=function(){r.hooks.load&&r.hooks.load()},t.source?(this.source=new t.source(e,this.options),t.streaming=!!this.source.streaming):e.match(/^wss?:\/\//)?(this.source=new KE(e,this.options),t.streaming=!0):t.progressive?(this.source=new jE(e,this.options),t.streaming=!1):(this.source=new YE(e,this.options),t.streaming=!1),this.maxAudioLag=t.maxAudioLag||.25,this.loop=!1!==t.loop,this.autoplay=!!t.autoplay||t.streaming,this.demuxer=new XE(t),this.source.connect(this.demuxer),!t.disableWebAssembly&&oS.IsSupported()&&(this.wasmModule=oS.GetModule(),t.wasmModule=this.wasmModule),!1!==t.video&&(this.video=t.wasmModule?new tS(t):new eS(t),this.renderer=!t.disableGl&&sS.IsSupported()?new sS(t):new aS(t),this.demuxer.connect(XE.STREAM.VIDEO_1,this.video),this.video.connect(this.renderer)),!1!==t.audio&&iS.IsSupported()&&(this.audio=t.wasmModule?new rS(t):new nS(t),this.audioOut=new iS(t),this.demuxer.connect(XE.STREAM.AUDIO_1,this.audio),this.audio.connect(this.audioOut)),Object.defineProperty(this,"currentTime",{get:this.getCurrentTime,set:this.setCurrentTime}),Object.defineProperty(this,"volume",{get:this.getVolume,set:this.setVolume}),this.paused=!0,this.unpauseOnShow=!1,!1!==t.pauseWhenHidden&&document.addEventListener("visibilitychange",this.showHide.bind(this)),this.wasmModule)if(this.wasmModule.ready)this.startLoading();else{var s=HE(lS);this.wasmModule.loadFromBuffer(s,this.startLoading.bind(this))}else this.startLoading()}var t=e.prototype;return t.startLoading=function(){this.source.start(),this.autoplay&&this.play()},t.showHide=function(){"hidden"===document.visibilityState?(this.unpauseOnShow=this.wantsToPlay,this.pause()):this.unpauseOnShow&&this.play()},t.play=function(){this.animationId||(this.animationId=requestAnimationFrame(this.update.bind(this)),this.wantsToPlay=!0,this.paused=!1)},t.pause=function(){this.paused||(cancelAnimationFrame(this.animationId),this.animationId=null,this.wantsToPlay=!1,this.isPlaying=!1,this.paused=!0,this.audio&&this.audio.canPlay&&(this.audioOut.stop(),this.seek(this.currentTime)),this.hooks.pause&&this.hooks.pause(),this.options.onPause&&this.options.onPause(this))},t.getVolume=function(){return this.audioOut?this.audioOut.volume:0},t.setVolume=function(e){this.audioOut&&(this.audioOut.volume=e)},t.stop=function(){this.pause(),this.seek(0),this.video&&!1!==this.options.decodeFirstFrame&&this.video.decode(),this.hooks.stop&&this.hooks.stop()},t.destroy=function(){this.pause(),this.source.destroy(),this.video&&this.video.destroy(),this.renderer&&this.renderer.destroy(),this.audio&&this.audio.destroy(),this.audioOut&&this.audioOut.destroy()},t.seek=function(e){var t=this.audio&&this.audio.canPlay?this.audio.startTime:this.video.startTime;this.video&&this.video.seek(e+t),this.audio&&this.audio.seek(e+t),this.startTime=VE()-e},t.getCurrentTime=function(){return this.audio&&this.audio.canPlay?this.audio.currentTime-this.audio.startTime:this.video.currentTime-this.video.startTime},t.setCurrentTime=function(e){this.seek(e)},t.update=function(){this.animationId=requestAnimationFrame(this.update.bind(this)),this.source.established?(this.isPlaying||(this.isPlaying=!0,this.startTime=VE()-this.currentTime,this.hooks.play&&this.hooks.play(),this.options.onPlay&&this.options.onPlay(this)),this.options.streaming?this.updateForStreaming():this.updateForStaticFile()):this.renderer&&this.renderer.renderProgress(this.source.progress)},t.nextFrame=function(){return!(!this.source.established||!this.video)&&this.video.decode()},t.updateForStreaming=function(){if(this.video&&this.video.decode(),this.audio){var e=!1;do{this.audioOut.enqueuedTime>this.maxAudioLag&&(this.audioOut.resetEnqueuedTime(),this.audioOut.enabled=!1),e=this.audio.decode()}while(e);this.audioOut.enabled=!0}},t.updateForStaticFile=function(){var e=!1,t=0;if(this.audio&&this.audio.canPlay){for(;!e&&this.audio.decodedTime-this.audio.currentTime<.25;)e=!this.audio.decode();this.video&&this.video.currentTime<this.audio.currentTime&&(e=!this.video.decode()),t=this.demuxer.currentTime-this.audio.currentTime}else if(this.video){var n=VE()-this.startTime+this.video.startTime,r=n-this.video.currentTime,s=1/this.video.frameRate;this.video&&r>0&&(r>2*s&&(this.startTime+=r),e=!this.video.decode()),t=this.demuxer.currentTime-n}this.source.resume(t),e&&this.source.completed?this.loop?this.seek(0):(this.stop(),this.options.onEnded&&this.options.onEnded(this)):e&&this.options.onStalled&&this.options.onStalled(this)},e}(),cS={Player:uS,VideoElement:WE,BitBuffer:JE,Source:{Ajax:YE,AjaxProgressive:jE,WebSocket:KE,Fetch:function(){function e(e,t){this.url=e,this.destination=null,this.request=null,this.streaming=!0,this.completed=!1,this.established=!1,this.progress=0,this.aborted=!1,this.onEstablishedCallback=t.onSourceEstablished,this.onCompletedCallback=t.onSourceCompleted,t.hookOnEstablished&&(this.hookOnEstablished=t.hookOnEstablished)}var t=e.prototype;return t.connect=function(e){this.destination=e},t.start=function(){var e=this,t={method:"GET",headers:new Headers,cache:"default"};self.fetch(this.url,t).then((function(t){if(t.ok&&t.status>=200&&t.status<=299)return e.progress=1,e.established=!0,e.pump(t.body.getReader())})).catch((function(e){throw e}))},t.pump=function(e){var t=this;return e.read().then((function(n){if(!n.done)return t.aborted?e.cancel():(t.destination&&t.destination.write(n.value.buffer),t.pump(e));t.completed=!0})).catch((function(e){throw e}))},t.resume=function(){},t.abort=function(){this.aborted=!0},e}()},Demuxer:{TS:XE},Decoder:{Base:ZE,MPEG1Video:eS,MPEG1VideoWASM:tS,MP2Audio:nS,MP2AudioWASM:rS},Renderer:{WebGL:sS,Canvas2D:aS},AudioOutput:{WebAudio:iS},WASMModule:oS,Now:VE,CreateVideoElements:function(){for(var e=document.querySelectorAll(".jsmpeg"),t=0;t<e.length;t++)new WE(e[t])},Fill:qE,Base64ToArrayBuffer:HE,WASM_BINARY_INLINED:lS},dS=n(6507);const hS=()=>{(0,t.useRef)(null);const e=(0,t.useRef)(null),n=(0,t.useRef)(null),[r,s]=(0,t.useState)(null),[a,i]=(0,t.useState)(!0),[o,l]=(0,t.useState)(null),[u,c]=(0,t.useState)(0),[d,h]=(0,t.useState)([]),[p,A]=(0,t.useState)("rtsp://olean:cctvmadiun123@10.10.122.33:554/streaming/channels/2"),[f,g]=(0,t.useState)("ws://localhost:9999"),[m,y]=(0,t.useState)(!1),b=(0,t.useRef)(null),v={car:"rgba(255, 0, 0, 0.6)",truck:"rgba(0, 255, 0, 0.6)",bus:"rgba(0, 0, 255, 0.6)",motorcycle:"rgba(255, 255, 0, 0.6)",bicycle:"rgba(255, 0, 255, 0.6)",person:"rgba(0, 255, 255, 0.6)",default:"rgba(200, 200, 200, 0.6)"};(0,t.useEffect)((()=>((async()=>{try{i(!0);const e=await FE.load();s(e),i(!1),console.log("Model COCO-SSD berhasil dimuat")}catch(e){console.error("Gagal memuat model:",e),l("Gagal memuat model deteksi objek. Silakan muat ulang halaman."),i(!1)}})(),()=>{n.current&&n.current.destroy()})),[]);const I=async()=>{if(!m||!r||!e.current)return;const t=e.current,n=t.getContext("2d"),s=performance.now();try{const e=await r.detect(t),a=["car","truck","bus","motorcycle","bicycle","person"],i=e.filter((e=>a.includes(e.class)));h(i);const o=performance.now();c(Math.round(1e3/(o-s)));const l=n.getImageData(0,0,t.width,t.height);i.forEach((e=>{const[t,r,s,a]=e.bbox,i=v[e.class]||v.default;n.strokeStyle=i,n.lineWidth=4,n.strokeRect(t,r,s,a),n.fillStyle=i,n.fillRect(t,r-30,s,30),n.fillStyle="white",n.font="16px Arial",n.fillText(`${e.class} ${Math.round(100*e.score)}%`,t+5,r-10)})),setTimeout((()=>{m&&n.putImageData(l,0,0)}),50),m&&requestAnimationFrame(I)}catch(a){console.error("Error pada deteksi:",a),m&&requestAnimationFrame(I)}};return(0,dS.jsxs)("div",{className:"flex flex-col min-h-screen bg-gray-100",children:[(0,dS.jsx)("header",{className:"bg-blue-600 text-white p-4",children:(0,dS.jsx)("h1",{className:"text-2xl font-bold",children:"CCTV Vehicle and Person Detection"})}),(0,dS.jsx)("main",{className:"flex-1 p-4",children:a?(0,dS.jsx)("div",{className:"flex items-center justify-center h-64",children:(0,dS.jsx)("p",{className:"text-lg font-semibold",children:"Memuat model deteksi..."})}):o?(0,dS.jsx)("div",{className:"bg-red-100 border border-red-400 text-red-700 p-4 rounded",children:(0,dS.jsx)("p",{children:o})}):(0,dS.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-3 gap-4",children:[(0,dS.jsxs)("div",{className:"lg:col-span-2",children:[(0,dS.jsxs)("div",{ref:b,className:"relative bg-black rounded-lg overflow-hidden",children:[(0,dS.jsx)("canvas",{ref:e,className:"w-full h-auto"}),(0,dS.jsx)("div",{className:"absolute top-2 right-2 bg-black bg-opacity-70 text-white px-2 py-1 rounded",children:(0,dS.jsxs)("p",{children:[u," FPS"]})})]}),(0,dS.jsxs)("div",{className:"mt-4 flex gap-2",children:[(0,dS.jsx)("input",{type:"text",value:p,onChange:e=>A(e.target.value),onBlur:()=>{g("ws://localhost:9999")},className:"flex-1 p-2 border rounded",placeholder:"RTSP URL"}),m?(0,dS.jsx)("button",{onClick:()=>{y(!1),n.current&&n.current.pause()},className:"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700",children:"Stop"}):(0,dS.jsx)("button",{onClick:async()=>{try{n.current&&n.current.destroy();const t=b.current;if(t){for(;t.firstChild;)t.removeChild(t.firstChild);n.current=new cS.Player(f,{canvas:e.current,autoplay:!0,audio:!1,loop:!0}),y(!0),setTimeout((()=>{I()}),1e3)}}catch(t){console.error("Gagal mengakses RTSP stream:",t),l("Gagal mengakses RTSP stream. Pastikan RTSP URL benar dan server proxy berjalan.")}},className:"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700",children:"Start"})]})]}),(0,dS.jsxs)("div",{className:"bg-white p-4 rounded-lg shadow",children:[(0,dS.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Deteksi Objek"}),(0,dS.jsxs)("div",{className:"space-y-2",children:[d.map(((e,t)=>(0,dS.jsx)("div",{className:"p-2 rounded",style:{backgroundColor:v[e.class]||v.default},children:(0,dS.jsxs)("p",{className:"text-white font-medium",children:[e.class.charAt(0).toUpperCase()+e.class.slice(1),": ",Math.round(100*e.score),"%"]})},t))),0===d.length&&(0,dS.jsx)("p",{className:"text-gray-500",children:"Tidak ada objek terdeteksi"})]}),(0,dS.jsxs)("div",{className:"mt-4",children:[(0,dS.jsx)("h3",{className:"font-semibold mb-2",children:"Ringkasan"}),(0,dS.jsx)("div",{className:"space-y-1",children:Object.entries(d.reduce(((e,t)=>(e[t.class]=(e[t.class]||0)+1,e)),{})).map((e=>{let[t,n]=e;return(0,dS.jsxs)("p",{children:[t.charAt(0).toUpperCase()+t.slice(1),": ",n]},t)}))})]})]})]})}),(0,dS.jsx)("footer",{className:"bg-gray-800 text-white p-4 text-center",children:(0,dS.jsx)("p",{children:"Vehicle and Person Detection System - Powered by TensorFlow.js and COCO-SSD"})})]})};r.createRoot(document.getElementById("root")).render((0,dS.jsx)(t.StrictMode,{children:(0,dS.jsx)(hS,{})}))})()})();
//# sourceMappingURL=main.c1526a61.js.map